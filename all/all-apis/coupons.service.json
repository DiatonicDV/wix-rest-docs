{
  "name": "Coupons",
  "client_id": "https://github.com/wix-private/app-market/tree/master/loyalty/loyalty-coupons#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Coupons",
    "entity": "_com_wixpress_loyalty_coupon_LoyaltyCoupon"
  }],
  "relatedGuides": [],
  "operations":   [
        {
      "name": "Delete Loyalty Coupon",
      "methodName": "DeleteLoyaltyCoupon",
      "serviceName": "LoyaltyCoupons",
      "tag": "Coupons",
      "permissions": [      {
        "name": "Manage Loyalty",
        "description": "Request permission to manage the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the loyalty coupon to delete.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "revision",
          "type": "string",
          "doc": "\nRevision number, which increments by 1 each time the loyalty coupon is updated.\n\nTo prevent conflicting changes, the current `revision`` must be passed when updating the loyalty coupon.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteLoyaltyCoupon",
          "statusCode": "200",
          "typeParams": ["All APIs.Coupons._com_wixpress_loyalty_coupon_DeleteLoyaltyCouponResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nDeletes a loyalty coupon.\n\nThe deletion of a loyalty coupon does not impact the functionality of the corresponding coupon itself.\n\n>**Note:**\n>This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/loyalty-coupons/v1/coupons/{id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteLoyaltyCouponRequest",
        "rpcResponseName": "DeleteLoyaltyCouponResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Current Member Coupons",
      "methodName": "GetCurrentMemberCoupons",
      "serviceName": "LoyaltyCoupons",
      "tag": "Coupons",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [],
      "ret":       {
        "type":         {
          "name": "GetCurrentMemberCoupons",
          "statusCode": "200",
          "typeParams": ["All APIs.Coupons._com_wixpress_loyalty_coupon_GetCurrentMemberCouponsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves the loyalty coupons for the currently logged-in member.\n\n>**Note:**\n>This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-coupons/v1/coupons/my-coupons",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetCurrentMemberCouponsRequest",
        "rpcResponseName": "GetCurrentMemberCouponsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Loyalty Coupon",
      "methodName": "GetLoyaltyCoupon",
      "serviceName": "LoyaltyCoupons",
      "tag": "Coupons",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["loyaltyCouponId"],
      "params": [      {
        "in": "PATH",
        "name": "loyaltyCouponId",
        "type": "string",
        "doc": " ID of the loyalty coupon to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetLoyaltyCoupon",
          "statusCode": "200",
          "typeParams": ["All APIs.Coupons._com_wixpress_loyalty_coupon_GetLoyaltyCouponResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a loyalty coupon.\n\n>**Note:**\n>This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-coupons/v1/coupons/{loyaltyCouponId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetLoyaltyCouponRequest",
        "rpcResponseName": "GetLoyaltyCouponResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Coupon Template",
      "methodName": "QueryCouponTemplate",
      "serviceName": "LoyaltyCoupons",
      "tag": "Coupons",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Coupons._wix_coupons_api_v2_Query",
        "doc": " WQL expression\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "QueryCouponTemplate",
          "statusCode": "200",
          "typeParams": ["All APIs.Coupons._com_wixpress_loyalty_coupon_QueryCouponTemplateResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-coupons/v1/coupons/query-coupon-template",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryCouponTemplateRequest",
        "rpcResponseName": "QueryCouponTemplateResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Query Loyalty Coupon",
      "methodName": "QueryLoyaltyCoupon",
      "serviceName": "LoyaltyCoupons",
      "tag": "Coupons",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Coupons._wix_common_QueryV2",
        "doc": " WQL expression\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "QueryLoyaltyCoupon",
          "statusCode": "200",
          "typeParams": ["All APIs.Coupons._com_wixpress_loyalty_coupon_QueryLoyaltyCouponResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a list of loyalty coupons, given the provided paging, filtering, and sorting.\n\n>**Note:**\n>This endpoint is relevant only for [Headless](https://dev.wix.com/docs/go-headless/getting-started/about-headless/about-wix-headless) projects.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-coupons/v1/coupons/query",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryLoyaltyCouponRequest",
        "rpcResponseName": "QueryLoyaltyCouponResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Redeem Current Member Points For Coupon",
      "methodName": "RedeemCurrentMemberPointsForCoupon",
      "serviceName": "LoyaltyCoupons",
      "tag": "Coupons",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["rewardId"],
      "params": [      {
        "in": "BODY",
        "name": "rewardId",
        "type": "string",
        "doc": " ID of the [loyalty reward](https://dev.wix.com/api/rest/wix-loyalty-program/rewards) to redeem.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "RedeemCurrentMemberPointsForCoupon",
          "statusCode": "200",
          "typeParams": ["All APIs.Coupons._com_wixpress_loyalty_coupon_RedeemCurrentMemberPointsForCouponResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRedeems a current customer's loyalty points for a loyalty reward and creates a loyalty coupon.\n\nCreating a loyalty coupon also creates a corresponding \"reference\" coupon with the [Coupons API](https://dev.wix.com/api/rest/coupons/about-wix-coupons).\nThe customer receives the reference coupon, which they can apply to their order. The loyalty coupon and its corresponding reference coupon\nare linked and the loyalty coupon's `status` reflects the current state of the reference coupon.\n\nCheck which loyalty rewards a site has available with [List Rewards](https://dev.wix.com/api/rest/wix-loyalty-program/rewards/list-rewards).\n\n>**Note:**\n>This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-coupons/v1/coupons/redeem-my-coupon",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RedeemCurrentMemberPointsForCouponRequest",
        "rpcResponseName": "RedeemCurrentMemberPointsForCouponResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Redeem Points For Coupon",
      "methodName": "RedeemPointsForCoupon",
      "serviceName": "LoyaltyCoupons",
      "tag": "Coupons",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "rewardId",
        "loyaltyAccountId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "rewardId",
          "type": "string",
          "doc": " ID of the [loyalty reward](https://dev.wix.com/api/rest/wix-loyalty-program/rewards) to redeem.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "loyaltyAccountId",
          "type": "string",
          "doc": " ID of the [loyalty account](https://dev.wix.com/api/rest/wix-loyalty-program/accounts) of the customer redeeming points.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "RedeemPointsForCoupon",
          "statusCode": "200",
          "typeParams": ["All APIs.Coupons._com_wixpress_loyalty_coupon_RedeemPointsForCouponResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRedeems a customer's loyalty points for a loyalty reward and creates a loyalty coupon.\n\nCreating a loyalty coupon also creates a corresponding \"reference\" coupon with the [Coupons API](https://dev.wix.com/api/rest/coupons/about-wix-coupons).\nThe customer receives the reference coupon, which they can apply to their order. The loyalty coupon and its corresponding reference coupon\nare linked and the loyalty coupon's `status` reflects the current state of the reference coupon.\n\nCheck which loyalty rewards a site has available with [List Rewards](https://dev.wix.com/api/rest/wix-loyalty-program/rewards/list-rewards).\n\n>**Note:**\n>This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-coupons/v1/coupons",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RedeemPointsForCouponRequest",
        "rpcResponseName": "RedeemPointsForCouponResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_loyalty_coupon_LoyaltyCouponDeletedDomainEvent",
      "name": "Loyalty Coupon Deleted Webhook",
      "docs": {"summary": " Triggered when a loyalty coupon is deleted.\n"},
      "topic": "domain_events_wix.loyalty.v1.coupon",
      "tag": "Coupons",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.coupon_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_loyalty_coupon_LoyaltyCouponCreatedDomainEvent",
      "name": "Loyalty Coupon Created Webhook",
      "docs": {"summary": " Triggered when a loyalty coupon is created.\n"},
      "topic": "domain_events_wix.loyalty.v1.coupon",
      "tag": "Coupons",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.coupon_created",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_loyalty_coupon_LoyaltyCouponDeletedDomainEvent",
      "displayName": "Loyalty Coupon Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.coupon`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_LoyaltyCouponEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "LoyaltyCoupon ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_LoyaltyCouponEntityDeletedEvent",
      "displayName": "Loyalty Coupon Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_LoyaltyCouponCreatedDomainEvent",
      "displayName": "Loyalty Coupon Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.coupon`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_LoyaltyCouponEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "LoyaltyCoupon ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_LoyaltyCouponEntityCreatedEvent",
      "displayName": "Loyalty Coupon Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_LoyaltyCoupon",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_LoyaltyCoupon",
      "displayName": "Loyalty Coupon Object",
      "locations": [],
      "docs":       {
        "summary": "\nA loyalty coupon is created when a customer redeems their loyalty points for a reward. Creating a loyalty coupon \nalso creates a corresponding \"reference\" coupon with the [Coupons API](https://dev.wix.com/api/rest/coupons/about-wix-coupons).\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Loyalty coupon ID.\n",
          "readOnly": true
        },
                {
          "name": "accountId",
          "type": "string",
          "doc": " [Loyalty account ID](https://dev.wix.com/api/rest/wix-loyalty-program/accounts) of the customer that redeemed points for a coupon.\n",
          "readOnly": true
        },
                {
          "name": "memberIdDeprecated",
          "type": "string",
          "doc": " \n[Member ID](https://dev.wix.com/api/rest/members/members/member-object) of the customer that redeemed points for a coupon.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " \n[Member ID](https://dev.wix.com/api/rest/members/members/member-object) of the customer that redeemed points for a coupon.\n",
          "readOnly": true
        },
                {
          "name": "transactionId",
          "type": "string",
          "doc": " Transaction ID for the transaction that created a coupon.\n",
          "readOnly": true
        },
                {
          "name": "couponReference",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_CouponReference",
          "doc": "\nReference coupon information for the corresponding [coupon](https://dev.wix.com/api/rest/coupons/about-wix-coupons) \nthat is created along with the loyalty coupon.\n",
          "readOnly": true
        },
                {
          "name": "status",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_StatusEnum_Status",
          "doc": "\nLoyalty coupon status.\n\nThis status relates to the corresponding coupon that is created \nat the same time as the loyalty coupon and is included in `couponReference`.\n\n+ `\"ACTIVE\"`: The reference coupon is active and available to the customer.  \n+ `\"APPLIED\"`: The reference coupon was applied and is no longer available for use.  \n+ `\"ARCHIVED\"`: The reference coupon was deleted.  \n+ `\"FAILED\"`: The reference coupon was created but something went wrong when redeeming points from the loyalty account.  \n+ `\"PENDING\"`: The refence coupon was created but the loyalty points have not been redeemed yet.\n",
          "readOnly": true
        },
                {
          "name": "rewardName",
          "type": "string",
          "doc": " Name of reward that was redeemed to create this coupon.\n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " \nRevision number, which increments by 1 each time the loyalty coupon is updated.  \n\nTo prevent conflicting changes, the current `revision`` must be passed when updating the loyalty coupon.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the loyalty coupon was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the loyalty coupon was last updated.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_CouponReference",
      "displayName": "Coupon Reference Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "couponId",
          "type": "string",
          "doc": " Coupon ID.\n",
          "readOnly": true
        },
                {
          "name": "code",
          "type": "string",
          "doc": "\nCoupon code.  \n\nUnique code entered by a customer to apply the coupon.  \n\nMax: 20 characters\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " \nName of coupon.  \n\nMax: 80 characters\n",
          "readOnly": true
        },
                {
          "name": "specification",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_Specification",
          "doc": " The information to use when creating the coupon.\n",
          "readOnly": true
        },
                {
          "name": "deleted",
          "type": "boolean",
          "doc": " Whether the loyalty coupon is deleted.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_BuyXGetY",
      "displayName": "Buy X Get Y Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "x",
          "type": "integer",
          "doc": " Number of purchased items required to receive free items.\n"
        },
                {
          "name": "y",
          "type": "integer",
          "doc": " Number of items received for free if required number of items were purchased.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_Specification",
      "displayName": "Specification Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Name of coupon.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_Specification_Type",
          "doc": ""
        },
                {
          "name": "typeDetails",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_Specification_TypeDetails",
          "doc": ""
        },
                {
          "name": "ScopeOrMinSubtotal",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_Specification_ScopeOrMinSubtotal",
          "doc": ""
        },
                {
          "name": "limitedToOneItem",
          "type": "boolean",
          "doc": "\nWhether the coupon is limited to 1 discount per order. If true and a customer pays for multiple items \nthat the coupon applies to, only the lowest priced item is discounted. \nCoupons with a `bookings` `namespace` are always limited to 1 item.\n"
        },
                {
          "name": "appliesToSubscriptions",
          "type": "boolean",
          "doc": " Whether the coupon also applies to subscriptions.\n"
        },
                {
          "name": "discountedCycleCount",
          "type": "integer",
          "doc": " \nSpecifies the amount of cycles to apply the discount to for a subscription item.  \n\nCan only be set when `appliesToSubscriptions` is `TRUE` and `specification.scope.namespace` is `pricingPlans`. \nIf `discountedCycleCount` is empty, the coupon applies to all available cycles.\n\nMin: `1`  \n\nMax: `999`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_Specification_TypeDetails",
      "displayName": "Type Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "moneyOffAmount",
          "type": "number",
          "doc": " Fixed price discount.\n"
        },
                {
          "name": "percentOffRate",
          "type": "number",
          "doc": " Discount as a percentage.\n"
        },
                {
          "name": "freeShipping",
          "type": "boolean",
          "doc": " Free shipping. If true, the coupon applies to all items in all `namespaces` in the site.\n"
        },
                {
          "name": "fixedPriceAmount",
          "type": "number",
          "doc": " Specific sale price. Currently only supported for coupons with a `stores` `namespace`.\n"
        },
                {
          "name": "buyXGetY",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_BuyXGetY",
          "doc": " \nFree products when making a purchase. `buyXGetY` is an object that specifies `x` and `y` in the \nfollowing scenario: if a visitor purchases x number of products, they receive y number of products for free. C\nurrently only supported for coupons with a `stores` `namespace`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_coupon_Specification_ScopeOrMinSubtotal",
      "displayName": "Scope Or Min Subtotal Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scope",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_Scope",
          "doc": "\nScope of the coupon. When no scope is defined, the coupon applies to all \nitems in all `namespaces` in the site.\n"
        },
                {
          "name": "minimumSubtotal",
          "type": "number",
          "doc": " The coupon is only applicable when the order subtotal is over this amount.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_coupon_Scope",
      "displayName": "Scope Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": "\nGroup within a `namespace` for which the coupon is applicable.  \n\nIf no group is specified, the coupon applies to all items in the namespace. \n`group` is required in some namespaces. See [Scope Values](https://dev.wix.com/api/rest/coupons/coupons/valid-scope-values) \nfor a list of currently supported groups for each namespace.\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "\nID of the specific entity in the group for which the coupon is applicable.  \n\nIf no `entityId` is specified, the coupon applies to all entities in the group. In some cases when a group is specified, \nan `entityId` is required. See [Scope Values](https://dev.wix.com/api/rest/coupons/coupons/valid-scope-values) \nfor a list of currently supported entities for each namespace and group.\n"
        },
                {
          "name": "namespace",
          "type": "string",
          "doc": "\nWix application for which the coupon is applicable.\n\nOne of the following:\n+ `\"stores\"`\n+ `\"bookings\"`\n+ `\"events\"`\n+ `\"pricingPlans\"`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Coupons._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Coupons._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Coupons._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deletedEntityAsJson",
        "type": "string",
        "doc": " Entity that was deleted\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Unique event ID.\n Allows clients to ignore duplicate webhooks.\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " ID of the entity associated with the event.\n"
        },
                {
          "name": "body",
          "type": "All APIs.Coupons._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " Event timestamp.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether the event was triggered as a result of a privacy regulation application\n (for example, GDPR).\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        },
                {
          "name": "entityEventSequence",
          "type": "string",
          "doc": " A sequence number defining the order of updates to the underlying entity.\n For example, given that some entity was updated at 16:00 and than again at 16:01,\n  it is guaranteed that the sequence number of the second update is strictly higher than the first.\n As the consumer, you can use this value to ensure that you handle messages in the correct order.\n To do so, you will need to persist this number on your end, and compare the sequence number from the\n  message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Coupons._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Coupons._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Coupons._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Coupons._wix_common_domainevents_ActionEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Maximum number of items to return in the results.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Coupons._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor string pointing to the next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to the previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Coupons._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Coupons._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Coupons._wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Coupons._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Coupons._wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_coupons_api_v2_Query",
      "displayName": "Query Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Coupons._wix_coupons_api_v2_Paging",
          "doc": " Optional pagination parameters\n"
        },
                {
          "name": "filter",
          "type": "string",
          "doc": " Filter string (e.g., when {\"expired\":\"true\"}, expired coupons will be returned).\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort string.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_coupons_api_v2_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset since the beginning of the collection.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_RedeemPointsForCouponRequest",
      "displayName": "Redeem Points For Coupon Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rewardId",
          "type": "string",
          "doc": " ID of the [loyalty reward](https://dev.wix.com/api/rest/wix-loyalty-program/rewards) to redeem.\n"
        },
                {
          "name": "loyaltyAccountId",
          "type": "string",
          "doc": " ID of the [loyalty account](https://dev.wix.com/api/rest/wix-loyalty-program/accounts) of the customer redeeming points.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_RedeemPointsForCouponResponse",
      "displayName": "Redeem Points For Coupon Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "coupon",
        "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_LoyaltyCoupon",
        "doc": " Created loyalty coupon.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_RedeemCurrentMemberPointsForCouponRequest",
      "displayName": "Redeem Current Member Points For Coupon Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rewardId",
        "type": "string",
        "doc": " ID of the [loyalty reward](https://dev.wix.com/api/rest/wix-loyalty-program/rewards) to redeem.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_RedeemMemberPointsForDiscountAmountCouponRequest",
      "displayName": "Redeem Member Points For Discount Amount Coupon Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rewardId",
          "type": "string",
          "doc": " ID of the [loyalty reward](https://dev.wix.com/api/rest/wix-loyalty-program/rewards) to redeem.\n"
        },
                {
          "name": "loyaltyAccountId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "pointsToRedeem",
          "type": "integer",
          "doc": ""
        },
                {
          "name": "specification",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_Specification",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_RedeemMemberPointsForDiscountAmountCouponResponse",
      "displayName": "Redeem Member Points For Discount Amount Coupon Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "coupon",
          "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_LoyaltyCoupon",
          "doc": " Created loyalty coupon.\n"
        },
                {
          "name": "transactionId",
          "type": "string",
          "doc": " Transaction id of the coupon redemption\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_RedeemCurrentMemberPointsForCouponResponse",
      "displayName": "Redeem Current Member Points For Coupon Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "coupon",
        "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_LoyaltyCoupon",
        "doc": " Created loyalty coupon.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_GetLoyaltyCouponRequest",
      "displayName": "Get Loyalty Coupon Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "loyaltyCouponId",
        "type": "string",
        "doc": " ID of the loyalty coupon to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_GetLoyaltyCouponResponse",
      "displayName": "Get Loyalty Coupon Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "loyaltyCoupon",
        "type": "All APIs.Coupons._com_wixpress_loyalty_coupon_LoyaltyCoupon",
        "doc": " Retrieved loyalty coupon.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_GetCurrentMemberCouponsRequest",
      "displayName": "Get Current Member Coupons Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_GetCurrentMemberCouponsResponse",
      "displayName": "Get Current Member Coupons Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "loyaltyCoupons",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Coupons._com_wixpress_loyalty_coupon_LoyaltyCoupon"]
        },
        "doc": " Retrieved loyalty coupons.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_QueryLoyaltyCouponRequest",
      "displayName": "Query Loyalty Coupon Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Coupons._wix_common_QueryV2",
        "doc": " WQL expression\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_QueryLoyaltyCouponResponse",
      "displayName": "Query Loyalty Coupon Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "loyaltyCoupons",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Coupons._com_wixpress_loyalty_coupon_LoyaltyCoupon"]
          },
          "doc": " Retrieved loyalty coupons.\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Coupons._wix_common_PagingMetadataV2",
          "doc": " Metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_QueryCouponTemplateRequest",
      "displayName": "Query Coupon Template Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Coupons._wix_coupons_api_v2_Query",
        "doc": " WQL expression\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_QueryCouponTemplateResponse",
      "displayName": "Query Coupon Template Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "couponReferences",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Coupons._com_wixpress_loyalty_coupon_CouponReference"]
          },
          "doc": " The retrieved CouponReferences\n"
        },
                {
          "name": "totalResults",
          "type": "integer",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_DeleteLoyaltyCouponRequest",
      "displayName": "Delete Loyalty Coupon Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the loyalty coupon to delete.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": "\nRevision number, which increments by 1 each time the loyalty coupon is updated.\n\nTo prevent conflicting changes, the current `revision`` must be passed when updating the loyalty coupon.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_DeleteLoyaltyCouponResponse",
      "displayName": "Delete Loyalty Coupon Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_Specification_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> MONEY_OFF_AMOUNT <\/code><\/li><li><code> PERCENT_OFF_RATE <\/code><\/li><li><code> FREE_SHIPPING <\/code><\/li><li><code> FIXED_PRICE_AMOUNT <\/code><\/li><li><code> BUY_X_GET_Y <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "MONEY_OFF_AMOUNT",
        "PERCENT_OFF_RATE",
        "FREE_SHIPPING",
        "FIXED_PRICE_AMOUNT",
        "BUY_X_GET_Y"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_coupon_StatusEnum_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> PENDING -  coupon created but points haven't been redeemed yet (ideally coupons should stay in this state for a very short time (seconds/minutes))\n <\/code><\/li><li><code> ACTIVE -  coupon is active and can be applied\n <\/code><\/li><li><code> APPLIED -  coupon was already applied and can not be used anymore\n <\/code><\/li><li><code> FAILED -  coupon was created but something went wrong when redeeming points from the account\n <\/code><\/li><li><code> ARCHIVED -  reference coupon was deleted\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "PENDING",
        "ACTIVE",
        "APPLIED",
        "FAILED",
        "ARCHIVED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.loyalty.loyalty-coupons"}
}
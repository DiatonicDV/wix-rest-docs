{
  "name": "Categories",
  "client_id": "https://github.com/wix-private/ecom/tree/master/server/wix-ecommerce-server/catalog/category#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Short description of CategoriesService",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Categories",
    "entity": "_com_wix_categories_api_v1_Category",
    "src": "https://github.com/wix-private/ecom/tree/master/server/wix-ecommerce-server/catalog/category/proto/com/wix/categories/api/v1/category.proto"
  }],
  "relatedGuides": [  {
    "path": "../guides/categories/docs/README.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Bulk Add Item To Categories",
      "methodName": "BulkAddItemToCategories",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "itemReference",
        "itemReference.catalogItemId",
        "itemReference.appId",
        "categoryIds",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "itemReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": " Catalog item reference info\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "categoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Category ids.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains the categories.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkAddItemToCategories",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkAddItemToCategoriesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Adds single item to multiple categories, fires as many domain events as many categories were successfully added.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/categories/v1/bulk/categories/add-item-to-categories",
        "links": [],
        "examples": [        {
          "title": "Add item to categories",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/categories/v1/bulk/categories/add-item-to-categories' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"itemReference\": {\n      \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n      \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n    },\n    \"categoryIds\": [\"9d37241b-abe7-4d2a-8912-b49ab828b00e\", \"26cb5948-f1c0-491d-8240-beffd5111967\"],\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
          "response": ["{\n  \"results\":   [\n    {\"itemMetadata\":     {\n      \"id\": \"9d37241b-abe7-4d2a-8912-b49ab828b00e\",\n      \"originalIndex\": 0,\n      \"success\": false\n    }},\n    {\"itemMetadata\":     {\n      \"id\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n      \"originalIndex\": 1,\n      \"success\": true\n    }}\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 1,\n    \"totalFailures\": 1,\n    \"undetailedFailures\": 1\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkAddItemToCategoriesRequest",
        "rpcResponseName": "BulkAddItemToCategoriesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Bulk Add Items To Category",
      "methodName": "BulkAddItemsToCategory",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "items",
        "items.catalogItemId",
        "items.appId",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": " Category id.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
          },
          "doc": " List of catalog items with reference info.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkAddItemsToCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkAddItemsToCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Adds multiple items to single category, fires as many domain events as many items successfully added.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/categories/v1/bulk/categories/{categoryId}/add-items",
        "links": [],
        "examples": [        {
          "title": "Add items to category",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/categories/v1/bulk/categories/9d37241b-abe7-4d2a-8912-b49ab828b00e/add-items' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"items\": [\n        {\n          \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n          \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n        },\n        {\n          \"catalogItemId\": \"05519a6e-222b-413a-957c-0ef7a32779b5\",\n          \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n        }\n    ],\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
          "response": ["{\n  \"results\":   [\n    {\"itemMetadata\":     {\n      \"itemReference\":       {\n        \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n        \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n      },\n      \"originalIndex\": 0,\n      \"success\": true\n    }},\n    {\"itemMetadata\":     {\n      \"itemReference\":       {\n        \"catalogItemId\": \"05519a6e-222b-413a-957c-0ef7a32779b5\",\n        \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n      },\n      \"originalIndex\": 1,\n      \"success\": true\n    }}\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0,\n    \"undetailedFailures\": 0\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkAddItemsToCategoryRequest",
        "rpcResponseName": "BulkAddItemsToCategoryResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Bulk Remove Item From Categories",
      "methodName": "BulkRemoveItemFromCategories",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "itemReference",
        "itemReference.catalogItemId",
        "itemReference.appId",
        "categoryIds",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "itemReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": " Catalog item reference info\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "categoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Category ids.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains the categories.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkRemoveItemFromCategories",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkRemoveItemFromCategoriesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Removes single item from multiple categories, fires as many domain events as many categories were successfully removed.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/categories/v1/bulk/categories/remove-item-from-categories",
        "links": [],
        "examples": [        {
          "title": "Remove item from categories",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/categories/v1/bulk/categories/delete-item-from-categories' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"itemReference\": {\n      \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n      \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n    },\n    \"categoryIds\": [\"0e6be406-643a-45ca-b540-010290c9b45c\", \"42d1d190-87c9-4f5f-8606-b7e1d1527449\"],\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
          "response": ["{\n  \"results\":   [\n    {\"itemMetadata\":     {\n      \"id\": \"42d1d190-87c9-4f5f-8606-b7e1d1527449\",\n      \"originalIndex\": 1,\n      \"success\": true\n    }},\n    {\"itemMetadata\":     {\n      \"id\": \"42d1d190-87c9-4f5f-8606-b7e1d1527449\",\n      \"originalIndex\": 1,\n      \"success\": false,\n      \"error\":       {\n        \"code\": \"ITEM_NOT_IN_CATEGORY\",\n        \"description\": \"Item doesn't belong to category\"\n      }\n    }}\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 1,\n    \"totalFailures\": 1,\n    \"undetailedFailures\": 0\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkRemoveItemFromCategoriesRequest",
        "rpcResponseName": "BulkRemoveItemFromCategoriesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Bulk Remove Items From Category",
      "methodName": "BulkRemoveItemsFromCategory",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "items",
        "items.catalogItemId",
        "items.appId",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": " Category id\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
          },
          "doc": " List of catalog items with reference info.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkRemoveItemsFromCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkRemoveItemsFromCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Removed multiple items from single category, fires as many domain events as many items successfully removed.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/categories/v1/bulk/categories/{categoryId}/remove-items",
        "links": [],
        "examples": [        {
          "title": "Remove items from category",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/categories/v1/bulk/categories/08f79f1b-4df6-48e9-a8ba-d462d087fa30/delete-items' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"items\": [\n        {\n          \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n          \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n        },\n        {\n          \"catalogItemId\": \"05519a6e-222b-413a-957c-0ef7a32779b5\",\n          \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n        }\n    ],\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
          "response": ["{\n  \"results\":   [\n    {\"itemMetadata\":     {\n      \"itemReference\":       {\n        \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n        \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n      },\n      \"originalIndex\": 0,\n      \"success\": true\n    }},\n    {\"itemMetadata\":     {\n      \"itemReference\":       {\n        \"catalogItemId\": \"05519a6e-222b-413a-957c-0ef7a32779b5\",\n        \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n      },\n      \"originalIndex\": 1,\n      \"success\": true\n    }}\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0,\n    \"undetailedFailures\": 0\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkRemoveItemsFromCategoryRequest",
        "rpcResponseName": "BulkRemoveItemsFromCategoryResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Bulk Update Categories",
      "methodName": "BulkUpdateCategories",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categories",
        "categories.category",
        "categories.category.id",
        "categories.category.revision",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_MaskedCategory"]
          },
          "doc": " List of categories to be updated.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains the categories.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the category entity in the response.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkUpdateCategories",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkUpdateCategoriesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nUpdate multiple Categories, supports partial update.\nPass the latest `revision` for a successful update.\nTo update visibility, call the BulkUpdateCategoryVisibility endpoint.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/categories/v1/bulk/categories/update",
        "links": [],
        "examples": [        {
          "title": "Bulk update categories - partial success",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/categories/v1/bulk/categories/update' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"categories\": [\n      {\n        \"category\": {\n          \"id\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n          \"name\": \"Men\",\n          \"revision\": \"1\"\n        }\n      },\n      {\n        \"category\": {\n          \"id\": \"9d37241b-abe7-4d2a-8912-b49ab828b00e\",\n          \"slug\": \"new-shoes\",\n          \"revision\": \"1\"\n        }\n      }\n    ],\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    },\n    \"returnEntity\": true\n  }'"],
          "response": ["{\n  \"results\":   [\n        {\n      \"itemMetadata\":       {\n        \"id\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n        \"originalIndex\": 0,\n        \"success\": true\n      },\n      \"category\":       {\n        \"id\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n        \"revision\": \"4\",\n        \"createdDate\": \"2023-06-08T11:50:51.223Z\",\n        \"updatedDate\": \"2023-06-08T14:17:05.659Z\",\n        \"name\": \"Men\",\n        \"numberOfItems\": 1,\n        \"totalNumberOfItems\": 0,\n        \"visible\": false,\n        \"parentCategory\": {\"index\": 3},\n        \"slug\": \"my-new-category-2\",\n        \"treeReference\": {\"appNamespace\": \"@stores/products\"}\n      }\n    },\n    {\"itemMetadata\":     {\n      \"id\": \"9d37241b-abe7-4d2a-8912-b49ab828b00e\",\n      \"originalIndex\": 1,\n      \"success\": false,\n      \"error\":       {\n        \"code\": \"SLUG_EXISTS\",\n        \"description\": \"slug already exists\"\n      }\n    }}\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 1,\n    \"totalFailures\": 1,\n    \"undetailedFailures\": 0\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkUpdateCategoriesRequest",
        "rpcResponseName": "BulkUpdateCategoriesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Count Categories",
      "methodName": "CountCategories",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": "A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)\nTo understand supported filters and limitations see `SearchCategories` method.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "search",
          "type": "All APIs.Categories._wix_common_SearchDetails",
          "doc": "free text to match in searchable fields\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n Used only in the first request. Following requests use the cursor token.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "includeHidden",
          "type": "boolean",
          "doc": " Whether hidden categories should be included in the response. Default is `false`.\n Used only in the first request. Following requests use the cursor token.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CountCategories",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_CountCategoriesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Returns total count of categories satisfying filter and/or search\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/categories/v1/categories/count",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CountCategoriesRequest",
        "rpcResponseName": "CountCategoriesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Category",
      "methodName": "CreateCategory",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "category",
        "category.name",
        "category.parentCategory.id",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "category",
          "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
          "doc": " Category to be created.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_CreateCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a new Category.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/categories/v1/categories",
        "links": [],
        "examples":         [
                    {
            "title": "Create category",
            "body": ["curl -X POST \\\n  'https://www.wixapis.com/categories/v1/categories' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"category\": {\n      \"name\": \"My new category\",\n      \"slug\": \"my-new-category\",\n      \"visible\": true\n     },\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
            "response": ["{\"category\": {\n  \"id\": \"9d37241b-abe7-4d2a-8912-b49ab828b00e\",\n  \"revision\": \"1\",\n  \"createdDate\": \"2023-06-08T13:24:05.316Z\",\n  \"updatedDate\": \"2023-06-08T13:24:05.316Z\",\n  \"name\": \"My new subcategory\",\n  \"numberOfItems\": 0,\n  \"totalNumberOfItems\": 0,\n  \"visible\": true,\n  \"parentCategory\":   {\n    \"id\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n    \"index\": 1\n  },\n  \"slug\": \"my-new-subcategory\",\n  \"treeReference\": {\"appNamespace\": \"@stores/products\"}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Create subcategory in parent category",
            "body": ["curl -X POST \\\n  'https://www.wixapis.com/categories/v1/categories' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"category\": {\n      \"name\": \"My new subcategory\",\n      \"slug\": \"my-new-subcategory\",\n      \"visible\": true,\n      \"parentCategory\": {\n         \"id\": \"08f79f1b-4df6-48e9-a8ba-d462d087fa30\"\n      }\n    },\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
            "response": ["{\"category\": {\n  \"id\": \"9d37241b-abe7-4d2a-8912-b49ab828b00e\",\n  \"revision\": \"1\",\n  \"createdDate\": \"2023-06-08T13:24:05.316Z\",\n  \"updatedDate\": \"2023-06-08T13:24:05.316Z\",\n  \"name\": \"My new subcategory\",\n  \"numberOfItems\": 0,\n  \"totalNumberOfItems\": 0,\n  \"visible\": true,\n  \"parentCategory\":   {\n    \"id\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n    \"index\": 1\n  },\n  \"slug\": \"my-new-subcategory\",\n  \"treeReference\": {\"appNamespace\": \"@stores/products\"}\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateCategoryRequest",
        "rpcResponseName": "CreateCategoryResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Category",
      "methodName": "DeleteCategory",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": " Id of the Category to delete.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_DeleteCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nDeletes a Category.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/categories/v1/categories/{categoryId}",
        "links": [],
        "examples": [        {
          "title": "Delete category",
          "body": ["curl -X DELETE \\\n  'https://www.wixapis.com/categories/v1/categories/0ae76722-9d62-4ab9-a141-09b46eb1753a' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteCategoryRequest",
        "rpcResponseName": "DeleteCategoryResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Arranged Items",
      "methodName": "GetArrangedItems",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": "ID of category.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "treeReference.appNamespace",
          "type": "string",
          "doc": " The unique namespace of an app in dev-center that owns this tree.\n Should meet the format of @company/app1 where @company is an organizational unit and app1 is the app name.\n For example: @bookings/bookingslist, @achievements/quizzes\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "treeReference.treeKey",
          "type": "string",
          "doc": " Optional - The key of the tree. Must be provided when single app manages more than one tree.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetArrangedItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_GetArrangedItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Returns arranged items in category\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/categories/v1/categories/{categoryId}/arranged-items",
        "links": [],
        "examples": [        {
          "title": "Get arranged items",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/categories/v1/categories/9d37241b-abe7-4d2a-8912-b49ab828b00e/arranged-items' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n   \"treeReference\": {\n     \"appNamespace\": \"@stores/products\",\n     \"treeKey\": null\n   }\n }'"],
          "response": ["{\"items\": [\n    {\n    \"catalogItemId\": \"05519a6e-222b-413a-957c-0ef7a32779b5\",\n    \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n  },\n    {\n    \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n    \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetArrangedItemsRequest",
        "rpcResponseName": "GetArrangedItemsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Category",
      "methodName": "GetCategory",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": " Id of the Category to retrieve.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "treeReference.appNamespace",
          "type": "string",
          "doc": " The unique namespace of an app in dev-center that owns this tree.\n Should meet the format of @company/app1 where @company is an organizational unit and app1 is the app name.\n For example: @bookings/bookingslist, @achievements/quizzes\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "treeReference.treeKey",
          "type": "string",
          "doc": " Optional - The key of the tree. Must be provided when single app manages more than one tree.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_GetCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a category with the provided ID.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/categories/v1/categories/{categoryId}",
        "links": [],
        "examples":         [
                    {
            "title": "Get category",
            "body": ["curl -X GET \\\n  'https://www.wixapis.com/categories/v1/categories/0ae76722-9d62-4ab9-a141-09b46eb1753a' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
            "response": ["{\"category\": {\n  \"id\": \"9d37241b-abe7-4d2a-8912-b49ab828b00e\",\n  \"revision\": \"1\",\n  \"createdDate\": \"2023-06-08T13:24:05.316Z\",\n  \"updatedDate\": \"2023-06-08T13:24:05.316Z\",\n  \"name\": \"My new subcategory\",\n  \"numberOfItems\": 0,\n  \"totalNumberOfItems\": 0,\n  \"visible\": true,\n  \"parentCategory\":   {\n    \"id\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n    \"index\": 1\n  },\n  \"slug\": \"my-new-subcategory\",\n  \"treeReference\": {\"appNamespace\": \"@stores/products\"}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get category with breadcrumbs",
            "body": ["curl -X GET \\\n  'https://www.wixapis.com/categories/v1/categories/0ae76722-9d62-4ab9-a141-09b46eb1753a' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    },\n    \"fields\": [\"BREADCRUMBS\"]\n  }'"],
            "response": ["{\"category\": {\n  \"id\": \"9d37241b-abe7-4d2a-8912-b49ab828b00e\",\n  \"revision\": \"3\",\n  \"createdDate\": \"2023-06-08T13:24:05.316Z\",\n  \"updatedDate\": \"2023-06-08T14:41:28.177Z\",\n  \"name\": \"My new subcategory\",\n  \"numberOfItems\": 0,\n  \"totalNumberOfItems\": 0,\n  \"visible\": false,\n  \"breadcrumbs\": {\"values\": [  {\n    \"categoryId\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n    \"categoryName\": \"My new category\",\n    \"categorySlug\": \"my-new-category\"\n  }]},\n  \"parentCategory\":   {\n    \"id\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n    \"index\": 1\n  },\n  \"slug\": \"my-new-subcategory\",\n  \"treeReference\": {\"appNamespace\": \"@stores/products\"}\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetCategoryRequest",
        "rpcResponseName": "GetCategoryResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Categories For Item",
      "methodName": "ListCategoriesForItem",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "itemReference",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "QUERY",
          "name": "itemReference.catalogItemId",
          "type": "string",
          "doc": " ID of the item within its Wix or 3rd-party catalog. For example, `productId` for Wix Stores or `eventId` for Wix Events.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "itemReference.appId",
          "type": "string",
          "doc": " ID of the catalog app. For example, the Wix Stores `appId`, or the 3rd-party `appId`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "treeReference.appNamespace",
          "type": "string",
          "doc": " The unique namespace of an app in dev-center that owns this tree.\n Should meet the format of @company/app1 where @company is an organizational unit and app1 is the app name.\n For example: @bookings/bookingslist, @achievements/quizzes\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "treeReference.treeKey",
          "type": "string",
          "doc": " Optional - The key of the tree. Must be provided when single app manages more than one tree.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListCategoriesForItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ListCategoriesForItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Returns all category IDs that contain the item and their parent category IDs.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/categories/v1/categories/list-categories-for-item",
        "links": [],
        "examples": [        {
          "title": "List categories for item",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/categories/v1/categories/0e6be406-643a-45ca-b540-010290c9b45c/move-item' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"itemReference\": {\n      \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n      \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n    },\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
          "response": ["{\n  \"directCategoryIds\":   [\n    \"42d1d190-87c9-4f5f-8606-b7e1d1527449\",\n    \"0e6be406-643a-45ca-b540-010290c9b45c\"\n  ],\n  \"allCategoryIds\":   [\n    \"08f79f1b-4df6-48e9-a8ba-d462d087fa30\",\n    \"42d1d190-87c9-4f5f-8606-b7e1d1527449\",\n    \"0e6be406-643a-45ca-b540-010290c9b45c\"\n  ]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListCategoriesForItemRequest",
        "rpcResponseName": "ListCategoriesForItemResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Items In Category",
      "methodName": "ListItemsInCategory",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": "ID of category containing items.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "treeReference.appNamespace",
          "type": "string",
          "doc": " The unique namespace of an app in dev-center that owns this tree.\n Should meet the format of @company/app1 where @company is an organizational unit and app1 is the app name.\n For example: @bookings/bookingslist, @achievements/quizzes\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "treeReference.treeKey",
          "type": "string",
          "doc": " Optional - The key of the tree. Must be provided when single app manages more than one tree.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "useCategoryArrangement",
          "type": "boolean",
          "doc": "Default: `false`. When `true` items arranged by user will be return before all other items.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "pagingMethod",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ListItemsInCategoryRequest_pagingMethod",
          "doc": "",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "includeItemsFromSubcategories",
          "type": "boolean",
          "doc": " Default: `false`. When `false` only direct items of category will be returned. When `true` response contains also items from all subcategories which current category contains\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListItemsInCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ListItemsInCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Returns up to 100 items related to requested `category_id` sorted by time when item added to category, descending.\nWhen items added to category in bulk they considered as added at exactly same time so order will be random but always the same.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/categories/v1/categories/{categoryId}/list-items",
        "links": [],
        "examples": [        {
          "title": "List items in category",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/categories/v1/categories/26cb5948-f1c0-491d-8240-beffd5111967/list-items' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
          "response": ["{\n  \"items\":   [\n        {\n      \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n      \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n    },\n        {\n      \"catalogItemId\": \"05519a6e-222b-413a-957c-0ef7a32779b5\",\n      \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n    }\n  ],\n  \"metadata\":   {\n    \"count\": 2,\n    \"cursors\": {\"next\": \"6d8dd32094160d420fd978cc42ad7f6c304e9c9b\"},\n    \"hasNext\": true\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListItemsInCategoryRequest",
        "rpcResponseName": "ListItemsInCategoryResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Move Category",
      "methodName": "MoveCategory",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "treeReference",
        "treeReference.appNamespace",
        "position"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": " ID of category to place.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "parentCategoryId",
          "type": "string",
          "doc": " ID of parent category.\n Optional. When not passed it will fallback to the root category\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "position",
          "type": "All APIs.Categories._com_wix_categories_api_v1_MoveCategoryRequest_Position",
          "doc": " Where to place the subcategory.\n `FIRST` - make category with `category_id` first subcategory with manual arrangement.\n `LAST` - make category with `category_id` last subcategory with manual arrangement.\n `BEFORE` - requires `move_before_category_id`, category with `category_id` will be moved before it.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "moveBeforeCategoryId",
          "type": "string",
          "doc": " Required when `position` is `BEFORE`. Otherwise ignored\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "MoveCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_MoveCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Moves a category.\nThis operation updates `parentCategory` (`id` and `index`) for category with `categoryId`.\nThis endpoint can be used to move category to different parent in the same tree or to change it's position in current parent.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/categories/v1/categories/{categoryId}/move",
        "links": [],
        "examples":         [
                    {
            "title": "Place category in parent category - last position",
            "body": ["curl -X POST \\\n  'https://www.wixapis.com/categories/v1/categories/0e6be406-643a-45ca-b540-010290c9b45c/move' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"parentCategoryId\": \"08f79f1b-4df6-48e9-a8ba-d462d087fa30\",\n    \"position\": \"LAST\",\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
            "response": ["{\n  \"parentCategoryId\": \"08f79f1b-4df6-48e9-a8ba-d462d087fa30\",\n  \"arrangedCategoriesAfterMove\":   [\n    \"edb5dbde-3a16-4fa7-a1fc-70ab334c8605\",\n    \"8ef7aa3d-cc0e-4850-af43-d46ce987eb30\",\n    \"0e6be406-643a-45ca-b540-010290c9b45c\"\n  ]\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Place category in parent category - before another category",
            "body": ["curl -X POST \\\n  'https://www.wixapis.com/categories/v1/categories/42d1d190-87c9-4f5f-8606-b7e1d1527449/move' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"parentCategoryId\": \"08f79f1b-4df6-48e9-a8ba-d462d087fa30\",\n    \"position\": \"BEFORE\",\n    \"moveBeforeCategoryId\": \"0e6be406-643a-45ca-b540-010290c9b45c\",\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
            "response": ["{\n  \"parentCategoryId\": \"08f79f1b-4df6-48e9-a8ba-d462d087fa30\",\n  \"arrangedCategoriesAfterMove\":   [\n    \"42d1d190-87c9-4f5f-8606-b7e1d1527449\",\n    \"0e6be406-643a-45ca-b540-010290c9b45c\"\n  ]\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "MoveCategoryRequest",
        "rpcResponseName": "MoveCategoryResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Move Item In Category",
      "methodName": "MoveItemInCategory",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "item",
        "treeReference",
        "treeReference.appNamespace",
        "position",
        "categoryId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": "ID of category.\nItem must be direct child of this category, otherwise error returned\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": "A reference to the tree that contains this category.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "item",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": "Item to move.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "position",
          "type": "All APIs.Categories._com_wix_categories_api_v1_MoveItemInCategoryRequest_Position",
          "doc": "Where to move item.\n`FIRST` - make `item` first item with manual arrangement. If before this operation category already has 100 manually arranged items, the 100th item will be removed from list of items with manual arrangement.\n`LAST` - make `item` last item with manual arrangement. If before this operation category already has 100 manually arranged items, moving item will be not last but 100th.\n`BEFORE` - requires `before_item`, `item` will be moved before it. If `before_item` was 100th item in category it will be removed from list of items with manual arrangement.\n`NONE` - don't use manual arrangement for `item`, it will be shown after all items with manual arrangement according to default sorting.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "beforeItem",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": "Required when `position` is `BEFORE`. `before_item` must be manually arranged item.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "MoveItemInCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_MoveItemInCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Changes position of `item` in category. Will be used when sort items by manual arrangement\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/categories/v1/categories/{categoryId}/move-item",
        "links": [],
        "examples": [        {
          "title": "Move item in category",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/categories/v1/categories/9d37241b-abe7-4d2a-8912-b49ab828b00e/move-item' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"item\": {\n      \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n      \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n     },\n     \"position\": \"FIRST\",\n     \"treeReference\": {\n       \"appNamespace\": \"@stores/products\",\n       \"treeKey\": null\n     }\n   }'"],
          "response": ["{\"arrangedItemsAfterMove\": [\n    {\n    \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n    \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n  },\n    {\n    \"catalogItemId\": \"05519a6e-222b-413a-957c-0ef7a32779b5\",\n    \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "MoveItemInCategoryRequest",
        "rpcResponseName": "MoveItemInCategoryResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Search Categories",
      "methodName": "SearchCategories",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "search",
          "type": "All APIs.Categories._wix_common_CursorSearch",
          "doc": " WQL query expression.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n Used only in the first request. Following requests use the cursor token.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "includeHidden",
          "type": "boolean",
          "doc": " Whether hidden categories should be included in the response. Default is `false`.\n Used only in the first request. Following requests use the cursor token.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "SearchCategories",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_SearchCategoriesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nSearch Categories using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/categories/v1/categories/search",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "SearchCategoriesRequest",
        "rpcResponseName": "SearchCategoriesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Set Arranged Items",
      "methodName": "SetArrangedItems",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "treeReference",
        "treeReference.appNamespace"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": "ID of category.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": "A reference to the tree that contains this category.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
          },
          "doc": "List of arranged items to set.\nAll items must be direct children of category with `category_id`, otherwise error returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "SetArrangedItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_SetArrangedItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Set arranged items in category. Will be used when sort items by manual arrangement.\nCalling this endpoint overrides existing list of arranged items in category.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/categories/v1/categories/{categoryId}/set-arranged-items",
        "links": [],
        "examples": [        {
          "title": "Set arranged items",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/categories/v1/categories/9d37241b-abe7-4d2a-8912-b49ab828b00e/set-arranged-items' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"items\": [\n        {\n          \"catalogItemId\": \"05519a6e-222b-413a-957c-0ef7a32779b5\",\n          \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n        },\n        {\n          \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n          \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n        }\n     ],\n     \"treeReference\": {\n       \"appNamespace\": \"@stores/products\",\n       \"treeKey\": null\n     }\n   }'"],
          "response": ["{\"items\": [\n    {\n    \"catalogItemId\": \"05519a6e-222b-413a-957c-0ef7a32779b5\",\n    \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n  },\n    {\n    \"catalogItemId\": \"0318a3d8-f31c-4ba3-98c7-387571a2eac4\",\n    \"appId\": \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "SetArrangedItemsRequest",
        "rpcResponseName": "SetArrangedItemsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Category",
      "methodName": "UpdateCategory",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "category",
        "category.id",
        "treeReference",
        "treeReference.appNamespace",
        "category.revision"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "category.id",
          "type": "string",
          "doc": " Category ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "category",
          "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
          "doc": " Category to be updated, may be partial.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": "A reference to the tree that contains this category.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_UpdateCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nUpdate a Category, supports partial update.\nPass the latest `revision` for a successful update.\nEach time the category is updated, `revision` increments by 1.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/categories/v1/categories/{category.id}",
        "links": [],
        "examples": [        {
          "title": "Update category",
          "body": ["curl -X PATCH \\\n  'https://www.wixapis.com/categories/v1/categories/0ae76722-9d62-4ab9-a141-09b46eb1753a' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"category\": {\n      \"revision\": \"2\",\n      \"name\": \"My renamed category\"\n    },\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
          "response": ["{\"category\": {\n  \"id\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n  \"revision\": \"3\",\n  \"createdDate\": \"2023-06-08T11:50:51.223Z\",\n  \"updatedDate\": \"2023-06-08T13:43:20.308Z\",\n  \"name\": \"My renamed category\",\n  \"numberOfItems\": 0,\n  \"totalNumberOfItems\": 0,\n  \"visible\": false,\n  \"parentCategory\": {\"index\": 3},\n  \"slug\": \"my-new-category\",\n  \"treeReference\": {\"appNamespace\": \"@stores/products\"}\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateCategoryRequest",
        "rpcResponseName": "UpdateCategoryResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Category Visibility",
      "methodName": "UpdateCategoryVisibility",
      "serviceName": "CategoriesService",
      "tag": "Categories",
      "permissions": [      {
        "name": "Modify categories",
        "description": "Allows modify category and manage items inside it"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "visible",
        "treeReference",
        "treeReference.appNamespace",
        "revision"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "categoryId",
          "type": "string",
          "doc": " ID of category to be updated\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "visible",
          "type": "boolean",
          "doc": " value to set `visible` to\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "revision",
          "type": "string",
          "doc": " Latest revision of the category.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateCategoryVisibility",
          "statusCode": "200",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_UpdateCategoryVisibilityResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Update `visible` field. If visible is set to false, all subcategories will be set to `visible=false`\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/categories/v1/categories/visibility",
        "links": [],
        "examples": [        {
          "title": "Update category visibility",
          "body": ["curl -X PATCH \\\n  'https://www.wixapis.com/categories/v1/categories/visibility' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"categoryId\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n    \"revision\": \"1\",\n    \"visible\": \"false\",\n    \"treeReference\": {\n      \"appNamespace\": \"@stores/products\",\n      \"treeKey\": null\n    }\n  }'"],
          "response": ["{\"category\": {\n  \"id\": \"26cb5948-f1c0-491d-8240-beffd5111967\",\n  \"revision\": \"2\",\n  \"createdDate\": \"2023-06-08T11:50:51.223Z\",\n  \"updatedDate\": \"2023-06-08T13:35:07.823Z\",\n  \"name\": \"My new category\",\n  \"numberOfItems\": 0,\n  \"totalNumberOfItems\": 0,\n  \"visible\": false,\n  \"parentCategory\": {\"index\": 3},\n  \"slug\": \"my-new-category\",\n  \"treeReference\": {\"appNamespace\": \"@stores/products\"}\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateCategoryVisibilityRequest",
        "rpcResponseName": "UpdateCategoryVisibilityResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wix_categories_api_v1_CategoryDeletedDomainEvent",
      "name": "Category Deleted Webhook",
      "docs":       {
        "summary": " Triggered when a category is deleted.\n",
        "src": "https://github.com/wix-private/ecom/tree/master/server/wix-ecommerce-server/catalog/category/proto/com/wix/categories/api/v1/categories_service.proto"
      },
      "topic": "domain_events_wix.categories.v1.category",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.categories.v1.category_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wix_categories_api_v1_CategoryMovedDomainEvent",
      "name": "Category Moved Webhook",
      "docs":       {
        "summary": " Triggered when a category is moved.\n",
        "src": "https://github.com/wix-private/ecom/tree/master/server/wix-ecommerce-server/catalog/category/proto/com/wix/categories/api/v1/categories_service.proto"
      },
      "topic": "domain_events_wix.categories.v1.category",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.categories.v1.category_category_moved",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wix_categories_api_v1_ItemsArrangedInCategoryDomainEvent",
      "name": "Items Arranged In Category Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/ecom/tree/master/server/wix-ecommerce-server/catalog/category/proto/com/wix/categories/api/v1/categories_service.proto"
      },
      "topic": "domain_events_wix.categories.v1.category",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.categories.v1.category_items_arranged_in_category",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wix_categories_api_v1_CategoryUpdatedDomainEvent",
      "name": "Category Updated Webhook",
      "docs":       {
        "summary": " Triggered when a category is updated.\n",
        "src": "https://github.com/wix-private/ecom/tree/master/server/wix-ecommerce-server/catalog/category/proto/com/wix/categories/api/v1/categories_service.proto"
      },
      "topic": "domain_events_wix.categories.v1.category",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.categories.v1.category_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wix_categories_api_v1_ItemAddedToCategoryDomainEvent",
      "name": "Item Added To Category Webhook",
      "docs":       {
        "summary": " Triggered when an item is added to a category.\n",
        "src": "https://github.com/wix-private/ecom/tree/master/server/wix-ecommerce-server/catalog/category/proto/com/wix/categories/api/v1/categories_service.proto"
      },
      "topic": "domain_events_wix.categories.v1.category",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.categories.v1.category_item_added_to_category",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wix_categories_api_v1_ItemRemovedFromCategoryDomainEvent",
      "name": "Item Removed From Category Webhook",
      "docs":       {
        "summary": " Triggered when an item is removed from a category.\n",
        "src": "https://github.com/wix-private/ecom/tree/master/server/wix-ecommerce-server/catalog/category/proto/com/wix/categories/api/v1/categories_service.proto"
      },
      "topic": "domain_events_wix.categories.v1.category",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.categories.v1.category_item_removed_from_category",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wix_categories_api_v1_CategoryCreatedDomainEvent",
      "name": "Category Created Webhook",
      "docs":       {
        "summary": " Triggered when a category is created.\n",
        "src": "https://github.com/wix-private/ecom/tree/master/server/wix-ecommerce-server/catalog/category/proto/com/wix/categories/api/v1/categories_service.proto"
      },
      "topic": "domain_events_wix.categories.v1.category",
      "tag": "Categories",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Manage Products",
          "description": "Request permission to read, create and modify the site's Wix Stores products and inventory."
        },
                {
          "name": "Read Products",
          "description": "Request permission to read the site's Wix Stores product and inventory info."
        }
      ],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.categories.v1.category_created",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wix_categories_api_v1_CategoryDeletedDomainEvent",
      "displayName": "Category Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.categories.v1.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Categories._com_wix_categories_api_v1_CategoryEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Category ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CategoryEntityDeletedEvent",
      "displayName": "Category Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CategoryMovedDomainEvent",
      "displayName": "Category Moved Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.categories.v1.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `category_moved`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Categories._com_wix_categories_api_v1_CategoryMovedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "CategoryMoved ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CategoryMovedActionEvent",
      "displayName": "Category Moved Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Categories._com_wix_categories_api_v1_CategoryMoved",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemsArrangedInCategoryDomainEvent",
      "displayName": "Items Arranged In Category Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.categories.v1.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `items_arranged_in_category`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemsArrangedInCategoryActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "ItemsArrangedInCategory ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemsArrangedInCategoryActionEvent",
      "displayName": "Items Arranged In Category Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Categories._com_wix_categories_api_v1_ItemsArrangedInCategory",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CategoryUpdatedDomainEvent",
      "displayName": "Category Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.categories.v1.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Categories._com_wix_categories_api_v1_CategoryEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Category ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CategoryEntityUpdatedEvent",
      "displayName": "Category Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CategoryCreatedDomainEvent",
      "displayName": "Category Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.categories.v1.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Categories._com_wix_categories_api_v1_CategoryEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Category ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CategoryEntityCreatedEvent",
      "displayName": "Category Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemAddedToCategoryDomainEvent",
      "displayName": "Item Added To Category Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.categories.v1.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `item_added_to_category`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemAddedToCategoryActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "ItemAddedToCategory ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemAddedToCategoryActionEvent",
      "displayName": "Item Added To Category Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Categories._com_wix_categories_api_v1_ItemAddedToCategory",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemsAddedToCategoryDomainEvent",
      "displayName": "Items Added To Category Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.categories.v1.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `items_added_to_category`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemsAddedToCategoryActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "ItemsAddedToCategory ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemsAddedToCategoryActionEvent",
      "displayName": "Items Added To Category Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Categories._com_wix_categories_api_v1_ItemsAddedToCategory",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemRemovedFromCategoryDomainEvent",
      "displayName": "Item Removed From Category Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.categories.v1.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `item_removed_from_category`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemRemovedFromCategoryActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "ItemRemovedFromCategory ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemRemovedFromCategoryActionEvent",
      "displayName": "Item Removed From Category Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Categories._com_wix_categories_api_v1_ItemRemovedFromCategory",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemsRemovedFromCategoryDomainEvent",
      "displayName": "Items Removed From Category Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.categories.v1.category`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `items_removed_from_category`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemsRemovedFromCategoryActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "ItemsRemovedFromCategory ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemsRemovedFromCategoryActionEvent",
      "displayName": "Items Removed From Category Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Categories._com_wix_categories_api_v1_ItemsRemovedFromCategory",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Categories._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Categories._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "namespacesMapEntry",
      "displayName": "namespaces Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.  \nExtended field data. Each key corresponds to the namespace of the app that created the extended fields.\nThe value of each key is structured according to the schema defined when the extended fields were configured.\n\nYou can only access fields for which you have the appropriate permissions.\n\nLearn more about [extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields).\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "struct",
        "doc": "`key` of type string, `value` of type struct"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_data_dataextensions_ExtendedFields",
      "displayName": "Extended Fields Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "namespaces",
        "type": "All APIs.Categories.namespacesMapEntry",
        "doc": "Set of key-value pairs.  \nExtended field data. Each key corresponds to the namespace of the app that created the extended fields.\nThe value of each key is structured according to the schema defined when the extended fields were configured.\n\nYou can only access fields for which you have the appropriate permissions.\n\nLearn more about [extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "fieldsMapEntry",
      "displayName": "fields Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. An unordered map of dynamically typed values.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Categories._wix_rich_content_v1_Value",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Struct",
      "displayName": "Struct Object",
      "locations": [],
      "docs":       {
        "summary": " `Struct` represents a structured data value, consisting of fields\n which map to dynamically typed values. In some languages, `Struct`\n might be supported by a native representation. For example, in\n scripting languages like JS a struct is represented as an\n object. The details of that representation are described together\n with the proto support for the language.\n\n The JSON representation for `Struct` is JSON object.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "fields",
        "type": "All APIs.Categories.fieldsMapEntry",
        "doc": "Set of key-value pairs. An unordered map of dynamically typed values.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Categories._wix_rich_content_v1_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Categories._wix_rich_content_v1_NullValue",
          "doc": " A null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " A double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " A string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " A boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "All APIs.Categories._wix_rich_content_v1_Struct",
          "doc": " A structured value.\n"
        },
                {
          "name": "listValue",
          "type": "All APIs.Categories._wix_rich_content_v1_ListValue",
          "doc": " An array of `value` objects.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_ListValue",
      "displayName": "List Value Object",
      "locations": [],
      "docs":       {
        "summary": " `ListValue` is a wrapper around a repeated field of values.\n\n The JSON representation for `ListValue` is JSON array.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "values",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._wix_rich_content_v1_Value"]
        },
        "doc": " Repeated field of dynamically typed values.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AnchorData",
      "displayName": "Anchor Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "anchor",
        "type": "string",
        "doc": " The target node's ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ColorData",
      "displayName": "Color Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "background",
          "type": "string",
          "doc": " The text's background color as a hexadecimal value.\n"
        },
                {
          "name": "foreground",
          "type": "string",
          "doc": " The text's foreground color as a hexadecimal value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TextStyle",
      "displayName": "Text Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "textAlignment",
          "type": "All APIs.Categories._wix_rich_content_v1_TextStyle_TextAlignment",
          "doc": " Text alignment. Defaults to `AUTO`.\n"
        },
                {
          "name": "lineHeight",
          "type": "string",
          "doc": " A CSS `line-height` value for the text as a unitless ratio.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Link_Rel",
      "displayName": "Rel Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nofollow",
          "type": "boolean",
          "doc": " Indicates to search engine crawlers not to follow the link.\n"
        },
                {
          "name": "sponsored",
          "type": "boolean",
          "doc": " Indicates to search engine crawlers that the link is a paid placement such as sponsored content or an advertisement.\n"
        },
                {
          "name": "ugc",
          "type": "boolean",
          "doc": " Indicates that this link is user-generated content and isn't necessarily trusted or endorsed by the page’s author. For example, a link in a fourm post.\n"
        },
                {
          "name": "noreferrer",
          "type": "boolean",
          "doc": " Indicates that this link protect referral information from being passed to the target website.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Link",
      "displayName": "Link Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "data",
          "type": "All APIs.Categories._wix_rich_content_v1_Link_data",
          "doc": ""
        },
                {
          "name": "target",
          "type": "All APIs.Categories._wix_rich_content_v1_Link_Target",
          "doc": "The HTML `target` attribute value for the link. This property defines where the linked document opens as follows:\n`SELF` - Default. Opens the linked document in the same frame as the link.\n`BLANK` - Opens the linked document in a new browser tab or window.\n`PARENT` - Opens the linked document in the link's parent frame.\n`TOP` - Opens the linked document in the full body of the link's browser tab or window.\n"
        },
                {
          "name": "rel",
          "type": "All APIs.Categories._wix_rich_content_v1_Link_Rel",
          "doc": " The HTML `rel` attribute value for the link. This object specifies the relationship between the current document and the linked document.\n"
        },
                {
          "name": "customData",
          "type": "string",
          "doc": " A serialized object used for a custom or external link panel.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Link_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " The absolute URL for the linked document.\n"
        },
                {
          "name": "anchor",
          "type": "string",
          "doc": " The target node's ID. Used for linking to another node in this object.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Spoiler",
      "displayName": "Spoiler Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Sets whether the spoiler cover is enabled for this node.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " The description displayed on top of the spoiler cover.\n"
        },
                {
          "name": "buttonText",
          "type": "string",
          "doc": " The text for the button used to remove the spoiler cover.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Width",
      "displayName": "Width Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "data",
        "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData_Width_data",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Width_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "size",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData_Width_Type",
          "doc": " One of the following predefined width options:\n`CONTENT`: The width of the container matches the content width.\n`SMALL`: Small width.\n`ORIGINAL`: The width of the container matches the original asset width.\n`FULL_WIDTH`: Full width.\n"
        },
                {
          "name": "custom",
          "type": "string",
          "doc": " A custom width value in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Height",
      "displayName": "Height Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "custom",
        "type": "string",
        "doc": " A custom height value in pixels.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData",
      "displayName": "Plugin Container Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "width",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData_Width",
          "doc": " The width of the node when it's displayed.\n"
        },
                {
          "name": "alignment",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData_Alignment",
          "doc": " The node's alignment within its container.\n"
        },
                {
          "name": "spoiler",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData_Spoiler",
          "doc": " Spoiler cover settings for the node.\n"
        },
                {
          "name": "height",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData_Height",
          "doc": " The height of the node when it's displayed.\n"
        },
                {
          "name": "textWrap",
          "type": "boolean",
          "doc": " Sets whether text should wrap around this node when it's displayed. If `textWrap` is `false`, the node takes up the width of its container.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FileSource",
      "displayName": "File Source Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "data",
          "type": "All APIs.Categories._wix_rich_content_v1_FileSource_data",
          "doc": ""
        },
                {
          "name": "private",
          "type": "boolean",
          "doc": " Indicates whether the file's source is private.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FileSource_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " The absolute URL for the file's source.\n"
        },
                {
          "name": "custom",
          "type": "string",
          "doc": " Custom ID. Use `id` instead.\n",
          "deprecated": true
        },
                {
          "name": "id",
          "type": "string",
          "doc": " An ID that's resolved to a URL by a resolver function.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_Media",
      "displayName": "Media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "src",
          "type": "All APIs.Categories._wix_rich_content_v1_FileSource",
          "doc": " The source for the media's data.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Media width in pixels.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Media height in pixels.\n"
        },
                {
          "name": "duration",
          "type": "number",
          "doc": " Media duration in seconds. Only relevant for audio and video files.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PlaybackOptions",
      "displayName": "Playback Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "autoPlay",
          "type": "boolean",
          "doc": " Sets whether the media will automatically start playing.\n"
        },
                {
          "name": "playInLoop",
          "type": "boolean",
          "doc": " Sets whether media's will be looped.\n"
        },
                {
          "name": "showControls",
          "type": "boolean",
          "doc": " Sets whether media's controls will be shown.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Oembed",
      "displayName": "Oembed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "string",
          "doc": " The resource type.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " The width of the resource specified in the `url` property in pixels.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " The height of the resource specified in the `url` property in pixels.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Resource title.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " The source URL for the resource.\n"
        },
                {
          "name": "html",
          "type": "string",
          "doc": " HTML for embedding a video player. The HTML should have no padding or margins.\n"
        },
                {
          "name": "authorName",
          "type": "string",
          "doc": " The name of the author or owner of the resource.\n"
        },
                {
          "name": "authorUrl",
          "type": "string",
          "doc": " The URL for the author or owner of the resource.\n"
        },
                {
          "name": "providerName",
          "type": "string",
          "doc": " The name of the resource provider.\n"
        },
                {
          "name": "providerUrl",
          "type": "string",
          "doc": " The URL for the resource provider.\n"
        },
                {
          "name": "thumbnailUrl",
          "type": "string",
          "doc": " The URL for a thumbnail image for the resource. If this property is defined, `thumbnailWidth` and `thumbnailHeight` must also be defined.\n"
        },
                {
          "name": "thumbnailWidth",
          "type": "string",
          "doc": " The width of the resource's thumbnail image. If this property is defined, `thumbnailUrl` and `thumbnailHeight` must also be defined.\n"
        },
                {
          "name": "thumbnailHeight",
          "type": "string",
          "doc": " The height of the resource's thumbnail image. If this property is defined, `thumbnailUrl` and `thumbnailWidth`must also be defined.\n"
        },
                {
          "name": "videoUrl",
          "type": "string",
          "doc": " The URL for an embedded viedo.\n"
        },
                {
          "name": "version",
          "type": "string",
          "doc": " The oEmbed version number.  This value must be `1.0`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_LinkData",
      "displayName": "Link Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "link",
        "type": "All APIs.Categories._wix_rich_content_v1_Link",
        "doc": " Link details.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_MentionData",
      "displayName": "Mention Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " The mentioned user's name.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " The version of the user's name that appears after the `@` character in the mention.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Mentioned user's ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_CodeBlockData",
      "displayName": "Code Block Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "textStyle",
        "type": "All APIs.Categories._wix_rich_content_v1_TextStyle",
        "doc": " Styling for the code block's text.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_HeadingData",
      "displayName": "Heading Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "level",
          "type": "integer",
          "doc": " Heading level from 1-6.\n"
        },
                {
          "name": "textStyle",
          "type": "All APIs.Categories._wix_rich_content_v1_TextStyle",
          "doc": " Styling for the heading text.\n"
        },
                {
          "name": "indentation",
          "type": "integer",
          "doc": " Indentation level from 1-6.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ParagraphData",
      "displayName": "Paragraph Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "textStyle",
          "type": "All APIs.Categories._wix_rich_content_v1_TextStyle",
          "doc": " Styling for the paragraph text.\n"
        },
                {
          "name": "indentation",
          "type": "integer",
          "doc": " Indentation level from 1-6.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ButtonData_Styles_Colors",
      "displayName": "Colors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "text",
          "type": "string",
          "doc": " The text color as a hexadecimal value.\n"
        },
                {
          "name": "border",
          "type": "string",
          "doc": " The border color as a hexadecimal value.\n"
        },
                {
          "name": "background",
          "type": "string",
          "doc": " The background color as a hexadecimal value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ButtonData_Styles_Border",
      "displayName": "Border Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "width",
          "type": "integer",
          "doc": " Border width in pixels.\n"
        },
                {
          "name": "radius",
          "type": "integer",
          "doc": " Border radius in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ButtonData_Styles",
      "displayName": "Styles Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "border",
          "type": "All APIs.Categories._wix_rich_content_v1_ButtonData_Styles_Border",
          "doc": " Border attributes.\n"
        },
                {
          "name": "colors",
          "type": "All APIs.Categories._wix_rich_content_v1_ButtonData_Styles_Colors",
          "doc": " Color attributes.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ButtonData",
      "displayName": "Button Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the button's container.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Categories._wix_rich_content_v1_ButtonData_Type",
          "doc": " The button type.\n"
        },
                {
          "name": "styles",
          "type": "All APIs.Categories._wix_rich_content_v1_ButtonData_Styles",
          "doc": " Styling for the button.\n"
        },
                {
          "name": "text",
          "type": "string",
          "doc": " The text to display on the button.\n"
        },
                {
          "name": "link",
          "type": "All APIs.Categories._wix_rich_content_v1_Link",
          "doc": " Button link details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_DividerData",
      "displayName": "Divider Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the divider's container.\n"
        },
                {
          "name": "lineStyle",
          "type": "All APIs.Categories._wix_rich_content_v1_DividerData_LineStyle",
          "doc": " Divider line style.\n"
        },
                {
          "name": "width",
          "type": "All APIs.Categories._wix_rich_content_v1_DividerData_Width",
          "doc": " Divider width.\n"
        },
                {
          "name": "alignment",
          "type": "All APIs.Categories._wix_rich_content_v1_DividerData_Alignment",
          "doc": " Divider alignment.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FileData_PDFSettings",
      "displayName": "PDF Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "viewMode",
          "type": "All APIs.Categories._wix_rich_content_v1_FileData_PDFSettings_ViewMode",
          "doc": " PDF view mode. One of the following:  \n `NONE` : The PDF isn't displayed.  \n `FULL` : A full page view of the PDF is displayed.  \n `MINI` : A mini view of the PDF is displayed.  \n"
        },
                {
          "name": "disableDownload",
          "type": "boolean",
          "doc": " Sets whether the PDF download button is disabled.\n"
        },
                {
          "name": "disablePrint",
          "type": "boolean",
          "doc": " Sets whether the PDF print button is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FileData",
      "displayName": "File Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the file's container.\n"
        },
                {
          "name": "src",
          "type": "All APIs.Categories._wix_rich_content_v1_FileSource",
          "doc": " The source for the file's data.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " File name.\n"
        },
                {
          "name": "type",
          "type": "string",
          "doc": " File type.\n"
        },
                {
          "name": "size",
          "type": "integer",
          "doc": " File size in KB.\n"
        },
                {
          "name": "pdfSettings",
          "type": "All APIs.Categories._wix_rich_content_v1_FileData_PDFSettings",
          "doc": " Settings for PDF files.\n"
        },
                {
          "name": "mimeType",
          "type": "string",
          "doc": " File MIME type.\n"
        },
                {
          "name": "path",
          "type": "string",
          "doc": " File path.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_Layout",
      "displayName": "Layout Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryOptions_Layout_Type",
          "doc": " Gallery layout type.\n"
        },
                {
          "name": "horizontalScroll",
          "type": "boolean",
          "doc": " Sets whether horizontal scroll is enabled.\n"
        },
                {
          "name": "orientation",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryOptions_Layout_Orientation",
          "doc": " Gallery orientation.\n"
        },
                {
          "name": "numberOfColumns",
          "type": "integer",
          "doc": " The number of columns to display on full size screens.\n"
        },
                {
          "name": "mobileNumberOfColumns",
          "type": "integer",
          "doc": " The number of columns to display on mobile screens.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_ItemStyle",
      "displayName": "Item Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "targetSize",
          "type": "integer",
          "doc": " Desirable dimension for each item in pixels (behvaior changes according to gallery type)\n"
        },
                {
          "name": "ratio",
          "type": "number",
          "doc": " Item ratio\n"
        },
                {
          "name": "crop",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryOptions_ItemStyle_Crop",
          "doc": " Sets how item images are cropped.\n"
        },
                {
          "name": "spacing",
          "type": "integer",
          "doc": " The spacing between items in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_Thumbnails",
      "displayName": "Thumbnails Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "placement",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryOptions_Thumbnails_Alignment",
          "doc": " Thumbnail alignment.\n"
        },
                {
          "name": "spacing",
          "type": "integer",
          "doc": "Spacing between thumbnails in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions",
      "displayName": "Gallery Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "layout",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryOptions_Layout",
          "doc": " Gallery layout.\n"
        },
                {
          "name": "item",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryOptions_ItemStyle",
          "doc": " Styling for gallery items.\n"
        },
                {
          "name": "thumbnails",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryOptions_Thumbnails",
          "doc": " Styling for gallery thumbnail images.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryData_Item_Video",
      "displayName": "Video Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "media",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " Video file details.\n"
        },
                {
          "name": "thumbnail",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " Video thumbnail file details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryData_Item_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "media",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " Image file details.\n"
        },
                {
          "name": "link",
          "type": "All APIs.Categories._wix_rich_content_v1_Link",
          "doc": " Link details for images that are links.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryData_Item",
      "displayName": "Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "data",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryData_Item_data",
          "doc": ""
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Item title.\n"
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Item's alternative text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryData_Item_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "image",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryData_Item_Image",
          "doc": " An image item.\n"
        },
                {
          "name": "video",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryData_Item_Video",
          "doc": " A video item.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_GalleryData",
      "displayName": "Gallery Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the gallery's container.\n"
        },
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._wix_rich_content_v1_GalleryData_Item"]
          },
          "doc": " The items in the gallery.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryOptions",
          "doc": " Options for defining the gallery's appearance.\n"
        },
                {
          "name": "disableExpand",
          "type": "boolean",
          "doc": " Sets whether the gallery's expand button is disabled.\n"
        },
                {
          "name": "disableDownload",
          "type": "boolean",
          "doc": " Sets whether the gallery's download button is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GIFData",
      "displayName": "GIF Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the GIF's container.\n"
        },
                {
          "name": "original",
          "type": "All APIs.Categories._wix_rich_content_v1_GIF",
          "doc": " The source of the full size GIF.\n"
        },
                {
          "name": "downsized",
          "type": "All APIs.Categories._wix_rich_content_v1_GIF",
          "doc": " The source of the downsized GIF.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Height in pixels.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Width in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GIF",
      "displayName": "GIF Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "gif",
          "type": "string",
          "doc": " GIF format URL.\n"
        },
                {
          "name": "mp4",
          "type": "string",
          "doc": " MP4 format URL.\n"
        },
                {
          "name": "still",
          "type": "string",
          "doc": " Thumbnail URL.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_HTMLData",
      "displayName": "HTML Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": "Styling for the HTML node's container.\n"
        },
                {
          "name": "data",
          "type": "All APIs.Categories._wix_rich_content_v1_HTMLData_data",
          "doc": ""
        },
                {
          "name": "source",
          "type": "All APIs.Categories._wix_rich_content_v1_HTMLData_Source",
          "doc": " The type of HTML code.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_HTMLData_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " The URL for the HTML code for the node.\n"
        },
                {
          "name": "html",
          "type": "string",
          "doc": " The HTML code for the node.\n"
        },
                {
          "name": "isAdsense",
          "type": "boolean",
          "doc": " Whether this is an AdSense element. Use `source` instead.\n",
          "deprecated": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_ImageData",
      "displayName": "Image Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the image's container.\n"
        },
                {
          "name": "image",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " Image file details.\n"
        },
                {
          "name": "link",
          "type": "All APIs.Categories._wix_rich_content_v1_Link",
          "doc": " Link details for images that are links.\n"
        },
                {
          "name": "disableExpand",
          "type": "boolean",
          "doc": " Sets whether the image expands to full screen when clicked.\n"
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image's alternative text.\n"
        },
                {
          "name": "caption",
          "type": "string",
          "doc": " Image caption.\n"
        },
                {
          "name": "disableDownload",
          "type": "boolean",
          "doc": " Sets whether the image's download button is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_LinkPreviewData",
      "displayName": "Link Preview Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the link preview's container.\n"
        },
                {
          "name": "link",
          "type": "All APIs.Categories._wix_rich_content_v1_Link",
          "doc": " Link details.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Preview title.\n"
        },
                {
          "name": "thumbnailUrl",
          "type": "string",
          "doc": " Preview thumbnail URL.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Preview description.\n"
        },
                {
          "name": "html",
          "type": "string",
          "doc": " The preview content as HTML.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_MapData",
      "displayName": "Map Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the map's container.\n"
        },
                {
          "name": "mapSettings",
          "type": "All APIs.Categories._wix_rich_content_v1_MapSettings",
          "doc": " Map settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_MapSettings",
      "displayName": "Map Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "address",
          "type": "string",
          "doc": " The address to display on the map. \n"
        },
                {
          "name": "draggable",
          "type": "boolean",
          "doc": " Sets whether the map is draggable.\n"
        },
                {
          "name": "marker",
          "type": "boolean",
          "doc": " Sets whether the location marker is visible. \n"
        },
                {
          "name": "streetViewControl",
          "type": "boolean",
          "doc": " Sets whether street view control is enabled.\n"
        },
                {
          "name": "zoomControl",
          "type": "boolean",
          "doc": " Sets whether zoom control is enabled.\n"
        },
                {
          "name": "lat",
          "type": "number",
          "doc": " Location latitude.\n"
        },
                {
          "name": "lng",
          "type": "number",
          "doc": " Location longitude.\n"
        },
                {
          "name": "locationName",
          "type": "string",
          "doc": " Location name.\n"
        },
                {
          "name": "viewModeControl",
          "type": "boolean",
          "doc": " Sets whether view mode control is enabled.\n"
        },
                {
          "name": "initialZoom",
          "type": "integer",
          "doc": " Initial zoom value.\n"
        },
                {
          "name": "mapType",
          "type": "All APIs.Categories._wix_rich_content_v1_MapType",
          "doc": " Map type. `HYBRID` is a combination of the `ROADMAP` and `SATELLITE` map types.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll_Option",
      "displayName": "Option Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Option ID.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Option title.\n"
        },
                {
          "name": "image",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " The image displayed with the option.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll_Settings_Permissions",
      "displayName": "Permissions Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "view",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Poll_Settings_Permissions_ViewRole",
          "doc": " Sets who can view the poll results.\n"
        },
                {
          "name": "vote",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Poll_Settings_Permissions_VoteRole",
          "doc": " Sets who can vote.\n"
        },
                {
          "name": "allowMultipleVotes",
          "type": "boolean",
          "doc": " Sets whether one voter can vote multiple times.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll_Settings",
      "displayName": "Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "permissions",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Poll_Settings_Permissions",
          "doc": " Permissions settings for voting.\n"
        },
                {
          "name": "showVoters",
          "type": "boolean",
          "doc": " Sets whether voters are displayed in the vote results.\n"
        },
                {
          "name": "showVotesCount",
          "type": "boolean",
          "doc": " Sets whether the vote count is displayed.     \n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll",
      "displayName": "Poll Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Poll ID.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Poll title.\n"
        },
                {
          "name": "creatorId",
          "type": "string",
          "doc": " Poll creator ID.\n"
        },
                {
          "name": "image",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " Main poll image.\n"
        },
                {
          "name": "options",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._wix_rich_content_v1_PollData_Poll_Option"]
          },
          "doc": " Voting options.\n"
        },
                {
          "name": "settings",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Poll_Settings",
          "doc": " The poll's permissions and display settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Layout_PollLayout",
      "displayName": "Poll Layout Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Layout_PollLayout_Type",
          "doc": " The layout for displaying the voting options.\n"
        },
                {
          "name": "direction",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Layout_PollLayout_Direction",
          "doc": " The direction of the text displayed in the voting options. Text can be displayed either right-to-left or left-to-right.\n"
        },
                {
          "name": "enableImage",
          "type": "boolean",
          "doc": " Sets whether to display the main poll image.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Layout_OptionLayout",
      "displayName": "Option Layout Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "enableImage",
        "type": "boolean",
        "doc": " Sets whether to display option images.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Layout",
      "displayName": "Layout Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "poll",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Layout_PollLayout",
          "doc": " Poll layout settings.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Layout_OptionLayout",
          "doc": " Voting otpions layout settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_PollDesign_Background_Gradient",
      "displayName": "Gradient Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "angle",
          "type": "integer",
          "doc": " The gradient angle in degrees.\n"
        },
                {
          "name": "startColor",
          "type": "string",
          "doc": " The start color as a hexademical value.\n"
        },
                {
          "name": "lastColor",
          "type": "string",
          "doc": " The end color as a hexademical value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_PollDesign_Background",
      "displayName": "Background Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Design_PollDesign_Background_Type",
          "doc": " Background type. For each option, include the relevant details.\n"
        },
                {
          "name": "background",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Design_PollDesign_Background_background",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_PollDesign_Background_background",
      "displayName": "background Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "color",
          "type": "string",
          "doc": " The background color as a hexademical value.\n"
        },
                {
          "name": "image",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " An image to use for the background.\n"
        },
                {
          "name": "gradient",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Design_PollDesign_Background_Gradient",
          "doc": " Details for a gradient background.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_PollDesign",
      "displayName": "Poll Design Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "background",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Design_PollDesign_Background",
          "doc": " Background styling.\n"
        },
                {
          "name": "borderRadius",
          "type": "integer",
          "doc": " Border radius in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_OptionDesign",
      "displayName": "Option Design Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "borderRadius",
        "type": "integer",
        "doc": " Border radius in pixels.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design",
      "displayName": "Design Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "poll",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Design_PollDesign",
          "doc": " Styling for the poll.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Design_OptionDesign",
          "doc": " Styling for voting options.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData",
      "displayName": "Poll Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the poll's container.\n"
        },
                {
          "name": "poll",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Poll",
          "doc": " Poll data.\n"
        },
                {
          "name": "layout",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Layout",
          "doc": " Layout settings for the poll and voting options.\n"
        },
                {
          "name": "design",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData_Design",
          "doc": " Styling for the poll and voting options.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AppEmbedData_BookingData",
      "displayName": "Booking Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "durations",
        "type": "string",
        "doc": " Booking duration in minutes.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AppEmbedData_EventData",
      "displayName": "Event Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduling",
          "type": "string",
          "doc": " Event schedule.\n"
        },
                {
          "name": "location",
          "type": "string",
          "doc": " Event location.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AppEmbedData",
      "displayName": "App Embed Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Categories._wix_rich_content_v1_AppEmbedData_AppType",
          "doc": " The type of Wix App content being embedded.\n"
        },
                {
          "name": "itemId",
          "type": "string",
          "doc": " The ID of the embedded content.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " The name of the embedded content.\n"
        },
                {
          "name": "imageSrc",
          "type": "string",
          "doc": " Deprecated: Use `image` instead.\n",
          "deprecated": true
        },
                {
          "name": "url",
          "type": "string",
          "doc": " The URL for the embedded content.\n"
        },
                {
          "name": "image",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " An image for the embedded content.\n"
        },
                {
          "name": "appData",
          "type": "All APIs.Categories._wix_rich_content_v1_AppEmbedData_appData",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AppEmbedData_appData",
      "displayName": "app Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "bookingData",
          "type": "All APIs.Categories._wix_rich_content_v1_AppEmbedData_BookingData",
          "doc": " Data for embedded Wix Bookings content.\n"
        },
                {
          "name": "eventData",
          "type": "All APIs.Categories._wix_rich_content_v1_AppEmbedData_EventData",
          "doc": " Data for embedded Wix Events content.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_VideoData",
      "displayName": "Video Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the video's container.\n"
        },
                {
          "name": "video",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " Video details.\n"
        },
                {
          "name": "thumbnail",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " Video thumbnail details.\n"
        },
                {
          "name": "disableDownload",
          "type": "boolean",
          "doc": " Sets whether the video's download button is disabled.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Video title.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Categories._wix_rich_content_v1_PlaybackOptions",
          "doc": " Video options.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_CollapsibleListData",
      "displayName": "Collapsible List Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the collapsible list's container.\n"
        },
                {
          "name": "expandOnlyOne",
          "type": "boolean",
          "doc": " If `true`, only one item can be expanded at a time.\n"
        },
                {
          "name": "initialExpandedItems",
          "type": "All APIs.Categories._wix_rich_content_v1_CollapsibleListData_InitialExpandedItems",
          "doc": " Sets which items are expanded when the page loads.\n"
        },
                {
          "name": "direction",
          "type": "All APIs.Categories._wix_rich_content_v1_CollapsibleListData_Direction",
          "doc": " The direction of the text in the list. Either left-to-right or right-to-left.\n"
        },
                {
          "name": "isQapageData",
          "type": "boolean",
          "doc": " If `true`, The collapsible item will appear in search results as an FAQ.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_EmbedData",
      "displayName": "Embed Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the oEmbed node's container.\n"
        },
                {
          "name": "oembed",
          "type": "All APIs.Categories._wix_rich_content_v1_Oembed",
          "doc": " An [oEmbed](https://www.oembed.com) object.\n"
        },
                {
          "name": "src",
          "type": "string",
          "doc": " Origin asset source.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableData_Dimensions",
      "displayName": "Dimensions Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "colsWidthRatio",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " An array representing relative width of each column in relation to the other columns.\n"
        },
                {
          "name": "rowsHeight",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " An array representing the height of each row in pixels.\n"
        },
                {
          "name": "colsMinWidth",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " An array representing the minimum width of each column in pixels.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableData",
      "displayName": "Table Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the table's container.\n"
        },
                {
          "name": "dimensions",
          "type": "All APIs.Categories._wix_rich_content_v1_TableData_Dimensions",
          "doc": " The table's dimensions.\n"
        },
                {
          "name": "header",
          "type": "boolean",
          "doc": " Deprecated: Use `rowHeader` and `columnHeader` instead.\n",
          "deprecated": true
        },
                {
          "name": "rowHeader",
          "type": "boolean",
          "doc": " Sets whether the table's first row is a header.\n"
        },
                {
          "name": "columnHeader",
          "type": "boolean",
          "doc": " Sets whether the table's first column is a header.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableCellData_CellStyle",
      "displayName": "Cell Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "verticalAlignment",
          "type": "All APIs.Categories._wix_rich_content_v1_TableCellData_VerticalAlignment",
          "doc": " Vertical alignment for the cell's text.\n"
        },
                {
          "name": "backgroundColor",
          "type": "string",
          "doc": " Cell background color as a hexadecimal value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableCellData_BorderColors",
      "displayName": "Border Colors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "left",
          "type": "string",
          "doc": " Left border color as a hexadecimal value.\n"
        },
                {
          "name": "right",
          "type": "string",
          "doc": " Right border color as a hexadecimal value.\n"
        },
                {
          "name": "top",
          "type": "string",
          "doc": " Top border color as a hexadecimal value.\n"
        },
                {
          "name": "bottom",
          "type": "string",
          "doc": " Bottom border color as a hexadecimal value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableCellData",
      "displayName": "Table Cell Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "cellStyle",
          "type": "All APIs.Categories._wix_rich_content_v1_TableCellData_CellStyle",
          "doc": " Styling for the cell's background color and text alignment.\n"
        },
                {
          "name": "borderColors",
          "type": "All APIs.Categories._wix_rich_content_v1_TableCellData_BorderColors",
          "doc": " The cell's border colors.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FontSizeData",
      "displayName": "Font Size Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "unit",
          "type": "All APIs.Categories._wix_rich_content_v1_FontSizeData_fontType",
          "doc": " The units used for the font size.\n"
        },
                {
          "name": "value",
          "type": "integer",
          "doc": " Font size value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AudioData",
      "displayName": "Audio Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "containerData",
          "type": "All APIs.Categories._wix_rich_content_v1_PluginContainerData",
          "doc": " Styling for the audio node's container.\n"
        },
                {
          "name": "audio",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " Audio file details.\n"
        },
                {
          "name": "disableDownload",
          "type": "boolean",
          "doc": " Sets whether the audio node's download button is disabled.\n"
        },
                {
          "name": "coverImage",
          "type": "All APIs.Categories._wix_rich_content_v1_Media",
          "doc": " Cover image.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Track name.\n"
        },
                {
          "name": "authorName",
          "type": "string",
          "doc": " Author name.\n"
        },
                {
          "name": "html",
          "type": "string",
          "doc": " An HTML version of the audio node.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_OrderedListData",
      "displayName": "Ordered List Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "indentation",
        "type": "integer",
        "doc": " Indentation level.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_BulletedListData",
      "displayName": "Bulleted List Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "indentation",
        "type": "integer",
        "doc": " Indentation level.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_BlockquoteData",
      "displayName": "Blockquote Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "indentation",
        "type": "integer",
        "doc": " Indentation level.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_RichContent",
      "displayName": "Rich Content Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nodes",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._wix_rich_content_v1_Node"]
          },
          "doc": " Node objects representing a rich content document.\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Categories._wix_rich_content_v1_Metadata",
          "doc": " Object metadata.\n"
        },
                {
          "name": "documentStyle",
          "type": "All APIs.Categories._wix_rich_content_v1_DocumentStyle",
          "doc": " Global styling for header, paragraph, block quote, and code block nodes in the object.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Node",
      "displayName": "Node Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Categories._wix_rich_content_v1_Node_Type",
          "doc": " Node type. Use `APP_EMBED` for nodes that embed content from other Wix apps. Use `EMBED` to embed content in [oEmbed](https://oembed.com/) format.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Node ID.\n"
        },
                {
          "name": "nodes",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._wix_rich_content_v1_Node"]
          },
          "doc": " A list of child nodes.\n"
        },
                {
          "name": "style",
          "type": "All APIs.Categories._wix_rich_content_v1_NodeStyle",
          "doc": " Padding and background color styling for the node.\n"
        },
                {
          "name": "data",
          "type": "All APIs.Categories._wix_rich_content_v1_Node_data",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Node_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "buttonData",
          "type": "All APIs.Categories._wix_rich_content_v1_ButtonData",
          "doc": " Data for a button node.\n"
        },
                {
          "name": "codeBlockData",
          "type": "All APIs.Categories._wix_rich_content_v1_CodeBlockData",
          "doc": " Data for a code block node.\n"
        },
                {
          "name": "dividerData",
          "type": "All APIs.Categories._wix_rich_content_v1_DividerData",
          "doc": " Data for a divider node.\n"
        },
                {
          "name": "fileData",
          "type": "All APIs.Categories._wix_rich_content_v1_FileData",
          "doc": " Data for a file node.\n"
        },
                {
          "name": "galleryData",
          "type": "All APIs.Categories._wix_rich_content_v1_GalleryData",
          "doc": " Data for a gallery node.\n"
        },
                {
          "name": "gifData",
          "type": "All APIs.Categories._wix_rich_content_v1_GIFData",
          "doc": " Data for a GIF node.\n"
        },
                {
          "name": "headingData",
          "type": "All APIs.Categories._wix_rich_content_v1_HeadingData",
          "doc": " Data for a heading node.\n"
        },
                {
          "name": "htmlData",
          "type": "All APIs.Categories._wix_rich_content_v1_HTMLData",
          "doc": " Data for an embedded HTML node. \n"
        },
                {
          "name": "imageData",
          "type": "All APIs.Categories._wix_rich_content_v1_ImageData",
          "doc": " Data for an image node.\n"
        },
                {
          "name": "linkPreviewData",
          "type": "All APIs.Categories._wix_rich_content_v1_LinkPreviewData",
          "doc": " Data for a link preview node.\n"
        },
                {
          "name": "mapData",
          "type": "All APIs.Categories._wix_rich_content_v1_MapData",
          "doc": " Data for a map node.\n"
        },
                {
          "name": "paragraphData",
          "type": "All APIs.Categories._wix_rich_content_v1_ParagraphData",
          "doc": " Data for a paragraph node.\n"
        },
                {
          "name": "pollData",
          "type": "All APIs.Categories._wix_rich_content_v1_PollData",
          "doc": " Data for a poll node.\n"
        },
                {
          "name": "textData",
          "type": "All APIs.Categories._wix_rich_content_v1_TextData",
          "doc": " Data for a text node. Used to apply decorations to text.\n"
        },
                {
          "name": "appEmbedData",
          "type": "All APIs.Categories._wix_rich_content_v1_AppEmbedData",
          "doc": " Data for an app embed node.\n"
        },
                {
          "name": "videoData",
          "type": "All APIs.Categories._wix_rich_content_v1_VideoData",
          "doc": " Data for a video node.\n"
        },
                {
          "name": "embedData",
          "type": "All APIs.Categories._wix_rich_content_v1_EmbedData",
          "doc": " Data for an oEmbed node.\n"
        },
                {
          "name": "collapsibleListData",
          "type": "All APIs.Categories._wix_rich_content_v1_CollapsibleListData",
          "doc": " Data for a collapsible list node.\n"
        },
                {
          "name": "tableData",
          "type": "All APIs.Categories._wix_rich_content_v1_TableData",
          "doc": " Data for a table node.\n"
        },
                {
          "name": "tableCellData",
          "type": "All APIs.Categories._wix_rich_content_v1_TableCellData",
          "doc": " Data for a table cell node.\n"
        },
                {
          "name": "externalData",
          "type": "All APIs.Categories._wix_rich_content_v1_Struct",
          "doc": " Data for a custon external node.\n"
        },
                {
          "name": "audioData",
          "type": "All APIs.Categories._wix_rich_content_v1_AudioData",
          "doc": " Data for an audio node.\n"
        },
                {
          "name": "orderedListData",
          "type": "All APIs.Categories._wix_rich_content_v1_OrderedListData",
          "doc": " Data for an ordered list node.\n"
        },
                {
          "name": "bulletedListData",
          "type": "All APIs.Categories._wix_rich_content_v1_BulletedListData",
          "doc": " Data for a bulleted list node.\n"
        },
                {
          "name": "blockquoteData",
          "type": "All APIs.Categories._wix_rich_content_v1_BlockquoteData",
          "doc": " Data for a block quote node.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_NodeStyle",
      "displayName": "Node Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paddingTop",
          "type": "string",
          "doc": " The top padding value in pixels.\n"
        },
                {
          "name": "paddingBottom",
          "type": "string",
          "doc": " The bottom padding value in pixels.\n"
        },
                {
          "name": "backgroundColor",
          "type": "string",
          "doc": " The background color as a hexadecimal value.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TextData",
      "displayName": "Text Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "text",
          "type": "string",
          "doc": " The text to apply decorations to.\n"
        },
                {
          "name": "decorations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._wix_rich_content_v1_Decoration"]
          },
          "doc": " The decorations to apply.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Decoration",
      "displayName": "Decoration Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Categories._wix_rich_content_v1_Decoration_Type",
          "doc": " The type of decoration to apply. \n"
        },
                {
          "name": "data",
          "type": "All APIs.Categories._wix_rich_content_v1_Decoration_data",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Decoration_data",
      "displayName": "data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "anchorData",
          "type": "All APIs.Categories._wix_rich_content_v1_AnchorData",
          "doc": " Data for an anchor link decoration.\n"
        },
                {
          "name": "colorData",
          "type": "All APIs.Categories._wix_rich_content_v1_ColorData",
          "doc": " Data for a color decoration.\n"
        },
                {
          "name": "linkData",
          "type": "All APIs.Categories._wix_rich_content_v1_LinkData",
          "doc": " Data for an external link decoration.\n"
        },
                {
          "name": "mentionData",
          "type": "All APIs.Categories._wix_rich_content_v1_MentionData",
          "doc": " Data for a mention decoration.\n"
        },
                {
          "name": "fontSizeData",
          "type": "All APIs.Categories._wix_rich_content_v1_FontSizeData",
          "doc": " Data for a font size decoration.\n"
        },
                {
          "name": "fontWeightValue",
          "type": "integer",
          "doc": " Font weight for a bold decoration.\n"
        },
                {
          "name": "italicData",
          "type": "boolean",
          "doc": " Data for an italic decoration.\n"
        },
                {
          "name": "underlineData",
          "type": "boolean",
          "doc": " Data for an underline decoration.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_rich_content_v1_Metadata",
      "displayName": "Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "version",
          "type": "integer",
          "doc": " Schema version.\n"
        },
                {
          "name": "createdTimestamp",
          "type": "string",
          "doc": " When the object was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedTimestamp",
          "type": "string",
          "doc": " When the object was most recently updated.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Object ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TextNodeStyle",
      "displayName": "Text Node Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "decorations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._wix_rich_content_v1_Decoration"]
          },
          "doc": " The decorations to apply to the node.\n"
        },
                {
          "name": "nodeStyle",
          "type": "All APIs.Categories._wix_rich_content_v1_NodeStyle",
          "doc": " Padding and background color for the node.\n"
        },
                {
          "name": "lineHeight",
          "type": "string",
          "doc": " Line height for text in the node.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_DocumentStyle",
      "displayName": "Document Style Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "headerOne",
          "type": "All APIs.Categories._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H1 nodes.\n"
        },
                {
          "name": "headerTwo",
          "type": "All APIs.Categories._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H2 nodes.\n"
        },
                {
          "name": "headerThree",
          "type": "All APIs.Categories._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H3 nodes.\n"
        },
                {
          "name": "headerFour",
          "type": "All APIs.Categories._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H4 nodes.\n"
        },
                {
          "name": "headerFive",
          "type": "All APIs.Categories._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H5 nodes.\n"
        },
                {
          "name": "headerSix",
          "type": "All APIs.Categories._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for H6 nodes.\n"
        },
                {
          "name": "paragraph",
          "type": "All APIs.Categories._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for paragraph nodes.\n"
        },
                {
          "name": "blockquote",
          "type": "All APIs.Categories._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for block quote nodes.\n"
        },
                {
          "name": "codeBlock",
          "type": "All APIs.Categories._wix_rich_content_v1_TextNodeStyle",
          "doc": " Styling for code block nodes.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Tag",
      "displayName": "Tag Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "string",
          "doc": " SEO tag type. \n\n\n Supported values: `title`, `meta`, `script`, `link`.\n"
        },
                {
          "name": "props",
          "type": "struct",
          "doc": " A `{'key':'value'}` pair object where each SEO tag property (`'name'`, `'content'`, `'rel'`, `'href'`) contains a value.\n For example: `{'name': 'description', 'content': 'the description itself'}`.\n"
        },
                {
          "name": "meta",
          "type": "struct",
          "doc": " SEO tag meta data. For example, `{height: 300, width: 240}`.\n"
        },
                {
          "name": "children",
          "type": "string",
          "doc": " SEO tag inner content. For example, `<title> inner content <\/title>`.\n"
        },
                {
          "name": "custom",
          "type": "boolean",
          "doc": " Whether the tag is a custom tag.\n"
        },
                {
          "name": "disabled",
          "type": "boolean",
          "doc": " Whether the tag is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Settings",
      "displayName": "Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "preventAutoRedirect",
          "type": "boolean",
          "doc": " Whether the Auto Redirect feature, which creates `301 redirects` on a slug change, is enabled. \n\n\n Default: `false` (Auto Redirect is enabled.)\n"
        },
                {
          "name": "keywords",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wixpress_advanced_seo_SeoSchema_Keyword"]
          },
          "doc": " User-selected keyword terms for a specific page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Keyword",
      "displayName": "Keyword Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "term",
          "type": "string",
          "doc": " Keyword value.\n"
        },
                {
          "name": "isMain",
          "type": "boolean",
          "doc": " Whether the keyword is the main focus keyword.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema",
      "displayName": "Seo Schema Object",
      "locations": [],
      "docs":       {
        "summary": " The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\n The search engines use this information for ranking purposes, or to display snippets in the search results.\n This data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wixpress_advanced_seo_SeoSchema_Tag"]
          },
          "doc": " SEO tag information.\n"
        },
                {
          "name": "settings",
          "type": "All APIs.Categories._com_wixpress_advanced_seo_SeoSchema_Settings",
          "doc": " SEO general settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_upstream_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n",
          "readOnly": true
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n",
          "readOnly": true
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Image filename.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_Category",
      "displayName": "Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"category\" : {\n    \"id\" : \"9d37241b-abe7-4d2a-8912-b49ab828b00e\",\n    \"revision\" : \"3\",\n    \"createdDate\" : \"2023-06-08T13:24:05.316Z\",\n    \"updatedDate\" : \"2023-06-08T14:41:28.177Z\",\n    \"name\" : \"My new subcategory\",\n    \"numberOfItems\" : 0,\n    \"totalNumberOfItems\" : 0,\n    \"visible\" : false,\n    \"breadcrumbs\" : {\n      \"values\" : [ {\n        \"categoryId\" : \"26cb5948-f1c0-491d-8240-beffd5111967\",\n        \"categoryName\" : \"My new category\",\n        \"categorySlug\" : \"my-new-category\"\n      } ]\n    },\n    \"parentCategory\" : {\n      \"id\" : \"26cb5948-f1c0-491d-8240-beffd5111967\",\n      \"index\" : 1\n    },\n    \"slug\" : \"my-new-subcategory\",\n    \"treeReference\" : {\n      \"appNamespace\" : \"@stores/products\"\n    }\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Category ID.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Represents the time this Category was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Represents the time this Category was last updated.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Category name.\n"
        },
                {
          "name": "image",
          "type": "All APIs.Categories._com_wix_media_site_media_upstream_wix_common_Image",
          "doc": " Category image.\n Pass existing media ID for image previously saved in Wix media manager.\n Pass full image URL to upload an image to Wix media manager.\n In case of full url the image will be updated eventually.\n"
        },
                {
          "name": "numberOfItems",
          "type": "integer",
          "doc": " Number of items in this category alone.\n",
          "readOnly": true
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Category description.\n"
        },
                {
          "name": "visible",
          "type": "boolean",
          "doc": " Whether the category is visible to site visitors in dynamic pages (If not passed, the default is `false`).\n Even if visible is `false`, it can still be added manually to static page.\n If parent visibility is updated to `false`, all the children visibility will be updated eventually to `false`.\n It is not allowed to set visible as `true` if at least one of the parent categories has visible `false`.\n"
        },
                {
          "name": "breadcrumbs",
          "type": "All APIs.Categories._com_wix_categories_api_v1_BreadcrumbItemValues",
          "doc": " A category's breadcrumbs, Updated on moved to different parent or on renamed.\n This field will only be returned if request.fields contains `BREADCRUMBS`\n",
          "readOnly": true
        },
                {
          "name": "parentCategory",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ParentCategory",
          "doc": " The parent category.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " A permanent, friendly URL name.\n If not provided, on create generated automatically.\n When provided, validated and must be unique.\n"
        },
                {
          "name": "richContentDescription",
          "type": "All APIs.Categories._wix_rich_content_v1_RichContent",
          "doc": "Category description which supports rich content. It is independent from `description` field and can be used instead of it or in addition to it.\nIn order to use this field you have to integrate with \"Ricos\" on frontend side. To learn how to do it visit https://ricos.js.org/.\n"
        },
                {
          "name": "managingAppId",
          "type": "string",
          "doc": " Optional - the ID of the app responsible for managing the items within this category.\n If provided, the update of items assigned to this category and the deletion of it will be allowed only to the managing app.\n The default is Empty.\n"
        },
                {
          "name": "extendedFields",
          "type": "All APIs.Categories._wix_common_data_dataextensions_ExtendedFields",
          "doc": " Extensions enabling users to save custom data related to the category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ParentCategory",
      "displayName": "Parent Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Represents the id of the parent category.\n If not passed, the default is the root category.\n"
        },
                {
          "name": "index",
          "type": "integer",
          "doc": " Represents the index of current category within the parent category.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BreadcrumbItemValues",
      "displayName": "Breadcrumb Item Values Object",
      "locations": [],
      "docs":       {
        "summary": " Wrapper for optional BreadcrumbItem values\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "values",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BreadcrumbItem"]
        },
        "doc": " The wrapped BreadcrumbItem values\n",
        "readOnly": true
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BreadcrumbItem",
      "displayName": "Breadcrumb Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Represents the id of the category.\n"
        },
                {
          "name": "categoryName",
          "type": "string",
          "doc": " Represents the name of the category. Translatable\n"
        },
                {
          "name": "categorySlug",
          "type": "string",
          "doc": " Represents the slug. A permanent, friendly URL name of the category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_TreeReference",
      "displayName": "Tree Reference Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "appNamespace",
          "type": "string",
          "doc": " The unique namespace of an app in dev-center that owns this tree.\n Should meet the format of @company/app1 where @company is an organizational unit and app1 is the app name.\n For example: @bookings/bookingslist, @achievements/quizzes\n"
        },
                {
          "name": "treeKey",
          "type": "string",
          "doc": " Optional - The key of the tree. Must be provided when single app manages more than one tree.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_api_ApplicationError",
      "displayName": "Application Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Error code.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the error.\n"
        },
                {
          "name": "data",
          "type": "struct",
          "doc": " Data related to the error.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_BulkActionMetadata",
      "displayName": "Bulk Action Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "totalSuccesses",
          "type": "integer",
          "doc": " Number of items that were successfully processed.\n"
        },
                {
          "name": "totalFailures",
          "type": "integer",
          "doc": " Number of items that couldn't be processed.\n"
        },
                {
          "name": "undetailedFailures",
          "type": "integer",
          "doc": " Number of failures without details because detailed failure threshold was exceeded.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_ItemMetadata",
      "displayName": "Item Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Item ID. Should always be available, unless it's impossible (for example, when failing to create an item).\n"
        },
                {
          "name": "originalIndex",
          "type": "integer",
          "doc": " Index of the item within the request array. Allows for correlation between request and response items.\n"
        },
                {
          "name": "success",
          "type": "boolean",
          "doc": " Whether the requested action was successful for this item. When `false`, the `error` field is populated.\n"
        },
                {
          "name": "error",
          "type": "All APIs.Categories._wix_api_ApplicationError",
          "doc": " Details about the error in case of failure.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemReference",
      "displayName": "Item Reference Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "catalogItemId",
          "type": "string",
          "doc": " ID of the item within its Wix or 3rd-party catalog. For example, `productId` for Wix Stores or `eventId` for Wix Events.\n"
        },
                {
          "name": "appId",
          "type": "string",
          "doc": " ID of the catalog app. For example, the Wix Stores `appId`, or the 3rd-party `appId`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkCategoriesResult",
      "displayName": "Bulk Categories Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemMetadata",
          "type": "All APIs.Categories._wix_common_ItemMetadata",
          "doc": " Information about successful action or error for failure.\n"
        },
                {
          "name": "category",
          "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
          "doc": " Created or updated category. Optional - returned only if requested with `return_entity` set to `true`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkItemToCategoriesResult",
      "displayName": "Bulk Item To Categories Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "itemMetadata",
        "type": "All APIs.Categories._wix_common_ItemMetadata",
        "doc": " Information about categories to which item was added successfully and errors for failed items. `id` is ID of category.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkItemsToCategoryResult",
      "displayName": "Bulk Items To Category Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "itemMetadata",
        "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReferenceMetadata",
        "doc": " Information about items that were added successfully and errors for failed items.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemReferenceMetadata",
      "displayName": "Item Reference Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": " Item reference from request.\n"
        },
                {
          "name": "originalIndex",
          "type": "integer",
          "doc": " Index of the item within the request array. Allows for correlation between request and response items.\n"
        },
                {
          "name": "success",
          "type": "boolean",
          "doc": " Whether the requested action was successful for this item. When `false`, the `error` field is populated.\n"
        },
                {
          "name": "error",
          "type": "All APIs.Categories._wix_api_ApplicationError",
          "doc": " Details about the error in case of failure.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CategoryTreeNode",
      "displayName": "Category Tree Node Object",
      "locations": [],
      "docs":       {
        "summary": "*\nRepresents a node in the view of categories tree\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Category ID.\n"
        },
                {
          "name": "subcategories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_CategoryTreeNode"]
          },
          "doc": " A list of child categories.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecommerce_commons_api_PlatformPaging",
      "displayName": "Platform Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Maximum number of items to return in the results.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadata",
      "displayName": "Paging Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPagingMetadata",
      "displayName": "Cursor Paging Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Categories._wix_common_Cursors",
          "doc": " Cursor strings that point to the next page, previous page, or both.\n"
        },
                {
          "name": "hasNext",
          "type": "boolean",
          "doc": "\nWhether there are more pages to retrieve following the current page.\n\n+ `true`: Another page of results can be retrieved.\n+ `false`: This is the last page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor string pointing to the next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to the previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecommerce_commons_api_PlatformPagingMetadataV2",
      "displayName": "Platform Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " The number of items returned in this response.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Categories._wix_common_Cursors",
          "doc": " Cursors to navigate through result pages. Returned if cursor paging was used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Categories._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecommerce_commons_api_PlatformQueryV2",
      "displayName": "Platform Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Categories._com_wix_ecommerce_commons_api_PlatformQueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecommerce_commons_api_PlatformQueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cursorPaging",
        "type": "All APIs.Categories._wix_common_CursorPaging",
        "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_CursorSearch",
      "displayName": "Cursor Search Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": " A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._wix_common_Sorting"]
          },
          "doc": " Sort object in the form [{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]\n"
        },
                {
          "name": "aggregations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._wix_common_Aggregation"]
          },
          "doc": " Aggregations | Faceted search: refers to a way to explore large amounts of data by displaying summaries about various partitions of the data and later allowing to narrow the navigation to a specific partition.\n"
        },
                {
          "name": "search",
          "type": "All APIs.Categories._wix_common_SearchDetails",
          "doc": " Free text to match in searchable fields\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Categories._wix_common_CursorSearch_PagingMethod",
          "doc": ""
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": " UTC offset or IANA time zone. Valid values are\n ISO 8601 UTC offsets, such as +02:00 or -06:00,\n and IANA time zone IDs, such as Europe/Rome\n\n Affects all filters and aggregations returned values.\n You may override this behavior in a specific filter by providing\n timestamps including time zone. e.g. `\"2023-12-20T10:52:34.795Z\"`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorSearch_PagingMethod",
      "displayName": "Paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cursorPaging",
        "type": "All APIs.Categories._wix_common_CursorPaging",
        "doc": " Cursor pointing to page of results.\n When requesting 'cursor_paging.cursor', no `filter`, `sort` or `search` can be provided.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_SearchDetails",
      "displayName": "Search Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "mode",
          "type": "All APIs.Categories._wix_common_SearchDetails_Mode",
          "doc": " Defines how separate search terms in `expression` are combined\n"
        },
                {
          "name": "expression",
          "type": "string",
          "doc": " Search term or expression\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Fields to search in. If empty - will search in all searchable fields. Use dot notation to specify json path\n"
        },
                {
          "name": "fuzzy",
          "type": "boolean",
          "doc": " Flag if should use auto fuzzy search (allowing typos by a managed proximity algorithm)\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_RangeAggregation_RangeBucket",
      "displayName": "Range Bucket Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "from",
          "type": "number",
          "doc": " Inclusive lower bound of the range. Required if to is not given\n"
        },
                {
          "name": "to",
          "type": "number",
          "doc": " Exclusive upper bound of the range. Required if from is not given\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_RangeAggregation",
      "displayName": "Range Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "buckets",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._wix_common_Aggregation_RangeAggregation_RangeBucket"]
        },
        "doc": " List of range buckets, where during aggregation each entity will be placed in the first bucket where its value falls into based on provided range bounds\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation_IncludeMissingValuesOptions",
      "displayName": "Include Missing Values Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "addToBucket",
        "type": "string",
        "doc": " Can specify custom bucket name. Defaults are [string -> \"N/A\"], [int -> \"0\"], [bool -> \"false\"] ...\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation",
      "displayName": "Value Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sortType",
          "type": "All APIs.Categories._wix_common_Aggregation_ValueAggregation_SortType",
          "doc": " Should sort by number of matches or value of the field\n"
        },
                {
          "name": "sortDirection",
          "type": "All APIs.Categories._wix_common_Aggregation_ValueAggregation_SortDirection",
          "doc": " Should sort in ascending or descending order\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " How many aggregations would you like to return? Can be between 1 and 250. 10 is the default.\n"
        },
                {
          "name": "missingValues",
          "type": "All APIs.Categories._wix_common_Aggregation_ValueAggregation_MissingValues",
          "doc": " Should missing values be included or excluded from the aggregation results. Default is EXCLUDE\n"
        },
                {
          "name": "options",
          "type": "All APIs.Categories._wix_common_Aggregation_ValueAggregation_options",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation_options",
      "displayName": "options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "includeOptions",
        "type": "All APIs.Categories._wix_common_Aggregation_ValueAggregation_IncludeMissingValuesOptions",
        "doc": " Options for including missing values\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Aggregation_ScalarAggregation",
      "displayName": "Scalar Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "type",
        "type": "All APIs.Categories._wix_common_ScalarType",
        "doc": " Define the operator for the scalar aggregation\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_GroupByAggregation",
      "displayName": "Group By Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " User-defined name of aggregation, should be unique, will appear in aggregation results\n"
        },
                {
          "name": "fieldPath",
          "type": "string",
          "doc": " Field to aggregate by\n"
        },
                {
          "name": "kind",
          "type": "All APIs.Categories._wix_common_Aggregation_GroupByAggregation_kind",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_GroupByAggregation_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "value",
        "type": "All APIs.Categories._wix_common_Aggregation_ValueAggregation",
        "doc": " Value aggregation configuration\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Aggregation_NestedAggregation_NestedAggregationItem",
      "displayName": "Nested Aggregation Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " User-defined name of aggregation, should be unique, will appear in aggregation results\n"
        },
                {
          "name": "type",
          "type": "All APIs.Categories._wix_common_Aggregation_NestedAggregation_NestedAggregationType",
          "doc": " Type of aggregation, client must provide matching aggregation field below\n"
        },
                {
          "name": "fieldPath",
          "type": "string",
          "doc": " Field to aggregate by, use dont notation to specify json path\n"
        },
                {
          "name": "kind",
          "type": "All APIs.Categories._wix_common_Aggregation_NestedAggregation_NestedAggregationItem_kind",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_NestedAggregation_NestedAggregationItem_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "All APIs.Categories._wix_common_Aggregation_ValueAggregation",
          "doc": " Value aggregation\n"
        },
                {
          "name": "range",
          "type": "All APIs.Categories._wix_common_Aggregation_RangeAggregation",
          "doc": " Range aggregation\n"
        },
                {
          "name": "scalar",
          "type": "All APIs.Categories._wix_common_Aggregation_ScalarAggregation",
          "doc": " Scalar aggregation\n"
        },
                {
          "name": "dateHistogram",
          "type": "All APIs.Categories._wix_common_Aggregation_DateHistogramAggregation",
          "doc": " Date histogram aggregation\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Aggregation_NestedAggregation",
      "displayName": "Nested Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": " Nested aggregation expressed through a list of aggregation where each next aggregation is nested within previous one\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "nestedAggregations",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._wix_common_Aggregation_NestedAggregation_NestedAggregationItem"]
        },
        "doc": " Flattened list of aggregations, where each next aggregation is nested within previous one\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_DateHistogramAggregation",
      "displayName": "Date Histogram Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "interval",
        "type": "All APIs.Categories._wix_common_Aggregation_DateHistogramAggregation_Interval",
        "doc": " Interval for date histogram aggregation\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation",
      "displayName": "Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " User-defined name of aggregation, should be unique, will appear in aggregation results\n"
        },
                {
          "name": "type",
          "type": "All APIs.Categories._wix_common_AggregationType",
          "doc": " Type of aggregation, client must provide matching aggregation field below\n"
        },
                {
          "name": "fieldPath",
          "type": "string",
          "doc": " Field to aggregate by, use dot notation to specify json path\n"
        },
                {
          "name": "kind",
          "type": "All APIs.Categories._wix_common_Aggregation_kind",
          "doc": ""
        },
                {
          "name": "groupBy",
          "type": "All APIs.Categories._wix_common_Aggregation_GroupByAggregation",
          "doc": " deprecated, use `nested` instead\n",
          "deprecated": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "All APIs.Categories._wix_common_Aggregation_ValueAggregation",
          "doc": " Value aggregation\n"
        },
                {
          "name": "range",
          "type": "All APIs.Categories._wix_common_Aggregation_RangeAggregation",
          "doc": " Range aggregation\n"
        },
                {
          "name": "scalar",
          "type": "All APIs.Categories._wix_common_Aggregation_ScalarAggregation",
          "doc": " Scalar aggregation\n"
        },
                {
          "name": "dateHistogram",
          "type": "All APIs.Categories._wix_common_Aggregation_DateHistogramAggregation",
          "doc": " Date histogram aggregation\n"
        },
                {
          "name": "nested",
          "type": "All APIs.Categories._wix_common_Aggregation_NestedAggregation",
          "doc": " Nested aggregation\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_ValueResults_ValueAggregationResult",
      "displayName": "Value Aggregation Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Value of the field\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Count of entities with this value\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_ValueResults",
      "displayName": "Value Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._wix_common_AggregationData_AggregationResults_ValueResults_ValueAggregationResult"]
        },
        "doc": " List of value aggregations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_RangeResults_RangeAggregationResult",
      "displayName": "Range Aggregation Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "from",
          "type": "number",
          "doc": " Inclusive lower bound of the range\n"
        },
                {
          "name": "to",
          "type": "number",
          "doc": " Exclusive upper bound of the range\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Count of entities in this range\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_RangeResults",
      "displayName": "Range Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._wix_common_AggregationData_AggregationResults_RangeResults_RangeAggregationResult"]
        },
        "doc": " List of ranges returned in same order as requested\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_ScalarResult",
      "displayName": "Scalar Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Categories._wix_common_ScalarType",
          "doc": " Type of scalar aggregation\n"
        },
                {
          "name": "value",
          "type": "number",
          "doc": " Value of the scalar aggregation\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_GroupByValueResults_NestedValueAggregationResult",
      "displayName": "Nested Value Aggregation Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Value of the field\n"
        },
                {
          "name": "nestedResults",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_NestedAggregationResults",
          "doc": " Nested aggregations\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_GroupByValueResults",
      "displayName": "Group By Value Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._wix_common_AggregationData_AggregationResults_GroupByValueResults_NestedValueAggregationResult"]
        },
        "doc": " List of value aggregations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedAggregationResults",
      "displayName": "Nested Aggregation Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " User-defined name of aggregation, matches the one provided in request\n"
        },
                {
          "name": "type",
          "type": "All APIs.Categories._wix_common_AggregationType",
          "doc": " Type of aggregation that matches result\n"
        },
                {
          "name": "fieldPath",
          "type": "string",
          "doc": " Field to aggregate by, matches the one provided in request\n"
        },
                {
          "name": "result",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_NestedAggregationResults_result",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedAggregationResults_result",
      "displayName": "result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "values",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_ValueResults",
          "doc": " Value aggregation results\n"
        },
                {
          "name": "ranges",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_RangeResults",
          "doc": " Range aggregation results\n"
        },
                {
          "name": "scalar",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_ScalarResult",
          "doc": " Scalar aggregation results\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_ValueResult",
      "displayName": "Value Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Value of the field\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Count of entities with this value\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_RangeResult",
      "displayName": "Range Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "from",
          "type": "number",
          "doc": " Inclusive lower bound of the range\n"
        },
                {
          "name": "to",
          "type": "number",
          "doc": " Exclusive upper bound of the range\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Count of entities in this range\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_ScalarResult",
      "displayName": "Scalar Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "value",
        "type": "number",
        "doc": " Value of the scalar aggregation\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_NestedResultValue",
      "displayName": "Nested Result Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "result",
        "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_NestedResults_NestedResultValue_result",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_NestedResultValue_result",
      "displayName": "result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_NestedResults_ValueResult",
          "doc": " Value aggregation result\n"
        },
                {
          "name": "range",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_NestedResults_RangeResult",
          "doc": " Range aggregation result\n"
        },
                {
          "name": "scalar",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_NestedResults_ScalarResult",
          "doc": " Scalar aggregation result\n"
        },
                {
          "name": "dateHistogram",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_NestedResults_ValueResult",
          "doc": " Date histogram aggregation result\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "resultsMapEntry",
      "displayName": "results Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. List of nested aggregations\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_NestedResults_NestedResultValue",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_Results",
      "displayName": "Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type": "All APIs.Categories.resultsMapEntry",
        "doc": "Set of key-value pairs. List of nested aggregations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults",
      "displayName": "Nested Results Object",
      "locations": [],
      "docs":       {
        "summary": " Results of `NESTED` aggregation type in a flattened form\n aggregations in resulting array are keyed by requested aggregation `name`.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._wix_common_AggregationData_AggregationResults_NestedResults_Results"]
        },
        "doc": " List of nested aggregations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_DateHistogramResults_DateHistogramResult",
      "displayName": "Date Histogram Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Date in ISO 8601 format\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Count of documents in the bucket\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_DateHistogramResults",
      "displayName": "Date Histogram Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._wix_common_AggregationData_AggregationResults_DateHistogramResults_DateHistogramResult"]
        },
        "doc": " List of date histogram aggregations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults",
      "displayName": "Aggregation Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " User-defined name of aggregation as derived from search request\n"
        },
                {
          "name": "type",
          "type": "All APIs.Categories._wix_common_AggregationType",
          "doc": " Type of aggregation that must match provided kind as derived from search request\n"
        },
                {
          "name": "fieldPath",
          "type": "string",
          "doc": " Field to aggregate by as derived from search request\n"
        },
                {
          "name": "result",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_result",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_result",
      "displayName": "result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "values",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_ValueResults",
          "doc": " Value aggregation results\n"
        },
                {
          "name": "ranges",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_RangeResults",
          "doc": " Range aggregation results\n"
        },
                {
          "name": "scalar",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_ScalarResult",
          "doc": " Scalar aggregation results\n"
        },
                {
          "name": "groupedByValue",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_GroupByValueResults",
          "doc": " Group by value aggregation results\n"
        },
                {
          "name": "dateHistogram",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_DateHistogramResults",
          "doc": " Date histogram aggregation results\n"
        },
                {
          "name": "nested",
          "type": "All APIs.Categories._wix_common_AggregationData_AggregationResults_NestedResults",
          "doc": " Nested aggregation results\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_AggregationData",
      "displayName": "Aggregation Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._wix_common_AggregationData_AggregationResults"]
        },
        "doc": " key = aggregation name (as derived from search request)\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecommerce_commons_api_PlatformOffsetSearch",
      "displayName": "Platform Offset Search Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._wix_common_Sorting"]
          },
          "doc": "Sort object in the form [{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]\n"
        },
                {
          "name": "aggregations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._wix_common_Aggregation"]
          },
          "doc": "Aggregations | Faceted search: refers to a way to explore large amounts of data by displaying summaries about various partitions of the data and later allowing to narrow the navigation to a specific partition.\n"
        },
                {
          "name": "search",
          "type": "All APIs.Categories._wix_common_SearchDetails",
          "doc": "free text to match in searchable fields\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Categories._com_wix_ecommerce_commons_api_PlatformOffsetSearch_PagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecommerce_commons_api_PlatformOffsetSearch_PagingMethod",
      "displayName": "Paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paging",
        "type": "All APIs.Categories._com_wix_ecommerce_commons_api_PlatformPaging",
        "doc": "Pointer to page of results using offset. Can not be used together with 'cursor_paging'\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_html_cache_invalidate_InvalidateCache_App",
      "displayName": "App Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "appDefId",
          "type": "string",
          "doc": " The AppDefId\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": " The instance Id\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_html_cache_invalidate_InvalidateCache_Page",
      "displayName": "Page Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": " the msid the page is on\n"
        },
                {
          "name": "pageId",
          "type": "string",
          "doc": " Invalidate by Page ID\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_html_cache_invalidate_InvalidateCache_URI",
      "displayName": "URI Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": " the msid the URI is on\n"
        },
                {
          "name": "uriPath",
          "type": "string",
          "doc": " URI path to invalidate (e.g. page/my/path) - without leading/trailing slashes\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_html_cache_invalidate_InvalidateCache",
      "displayName": "Invalidate Cache Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "getBy",
          "type": "All APIs.Categories._com_wixpress_html_cache_invalidate_InvalidateCache_GetBy",
          "doc": ""
        },
                {
          "name": "reason",
          "type": "string",
          "doc": "tell us why you're invalidating the cache. You don't need to add your app name\n The cache invalidation reason\n"
        },
                {
          "name": "localDc",
          "type": "boolean",
          "doc": " Is local DS\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_html_cache_invalidate_InvalidateCache_GetBy",
      "displayName": "Get By Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": " Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!\n"
        },
                {
          "name": "siteId",
          "type": "string",
          "doc": " Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!\n"
        },
                {
          "name": "app",
          "type": "All APIs.Categories._com_wixpress_html_cache_invalidate_InvalidateCache_App",
          "doc": " Invalidate by App\n"
        },
                {
          "name": "page",
          "type": "All APIs.Categories._com_wixpress_html_cache_invalidate_InvalidateCache_Page",
          "doc": " Invalidate by page id\n"
        },
                {
          "name": "uri",
          "type": "All APIs.Categories._com_wixpress_html_cache_invalidate_InvalidateCache_URI",
          "doc": " Invalidate by URI path\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deletedEntityAsJson",
        "type": "string",
        "doc": " Entity that was deleted\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Unique event ID.\n Allows clients to ignore duplicate webhooks.\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " ID of the entity associated with the event.\n"
        },
                {
          "name": "body",
          "type": "All APIs.Categories._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " Event timestamp.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether the event was triggered as a result of a privacy regulation application\n (for example, GDPR).\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        },
                {
          "name": "entityEventSequence",
          "type": "string",
          "doc": " A sequence number defining the order of updates to the underlying entity.\n For example, given that some entity was updated at 16:00 and than again at 16:01,\n  it is guaranteed that the sequence number of the second update is strictly higher than the first.\n As the consumer, you can use this value to ensure that you handle messages in the correct order.\n To do so, you will need to persist this number on your end, and compare the sequence number from the\n  message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Categories._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Categories._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Categories._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Categories._wix_common_domainevents_ActionEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_categories_api_v1_CreateCategoryRequest",
      "displayName": "Create Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "category",
          "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
          "doc": " Category to be created.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CreateCategoryResponse",
      "displayName": "Create Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
        "doc": " The created Category.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_GetCategoryRequest",
      "displayName": "Get Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Id of the Category to retrieve.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_GetCategoryResponse",
      "displayName": "Get Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
        "doc": " The retrieved Category.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_UpdateCategoryRequest",
      "displayName": "Update Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "category",
          "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
          "doc": " Category to be updated, may be partial.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": "A reference to the tree that contains this category.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_UpdateCategoryResponse",
      "displayName": "Update Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
        "doc": " The updated Category.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_DeleteCategoryRequest",
      "displayName": "Delete Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Id of the Category to delete.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_DeleteCategoryResponse",
      "displayName": "Delete Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_QueryCategoriesRequest",
      "displayName": "Query Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "query",
          "type": "All APIs.Categories._com_wix_ecommerce_commons_api_PlatformQueryV2",
          "doc": " WQL query expression.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n Used only in the first request. Following requests use the cursor token.\n"
        },
                {
          "name": "includeHidden",
          "type": "boolean",
          "doc": " Whether hidden categories should be included in the response. Default is `false`.\n Used only in the first request. Following requests use the cursor token.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_QueryCategoriesResponse",
      "displayName": "Query Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_Category"]
          },
          "doc": " Categories which satisfy the provided query.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Categories._com_wix_ecommerce_commons_api_PlatformPagingMetadataV2",
          "doc": " Paging metadata. Contains cursor which can be used in next query.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ListCompactCategoriesByIdsRequest",
      "displayName": "List Compact Categories By Ids Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "List of category ids.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": "A reference to the tree that contains the categories.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ListCompactCategoriesByIdsResponse",
      "displayName": "List Compact Categories By Ids Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "categories",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_CompactCategory"]
        },
        "doc": "Categories which satisfy the provided ids.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CompactCategory",
      "displayName": "Compact Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Category ID.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": "Category name.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_SearchCategoriesRequest",
      "displayName": "Search Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "search",
          "type": "All APIs.Categories._wix_common_CursorSearch",
          "doc": " WQL query expression.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n Used only in the first request. Following requests use the cursor token.\n"
        },
                {
          "name": "includeHidden",
          "type": "boolean",
          "doc": " Whether hidden categories should be included in the response. Default is `false`.\n Used only in the first request. Following requests use the cursor token.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_SearchCategoriesResponse",
      "displayName": "Search Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_Category"]
          },
          "doc": " Categories which satisfy the provided query.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Categories._wix_common_CursorPagingMetadata",
          "doc": " Paging metadata. Contains cursor which can be used in next query.\n"
        },
                {
          "name": "aggregationData",
          "type": "All APIs.Categories._wix_common_AggregationData",
          "doc": " Aggregation data.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_DeprecatedSearchCategoriesWithOffsetRequest",
      "displayName": "Deprecated Search Categories With Offset Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "search",
          "type": "All APIs.Categories._com_wix_ecommerce_commons_api_PlatformOffsetSearch",
          "doc": " WQL query expression.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        },
                {
          "name": "includeHidden",
          "type": "boolean",
          "doc": " Whether hidden categories should be included in the response. Default is `false`.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_DeprecatedSearchCategoriesWithOffsetResponse",
      "displayName": "Deprecated Search Categories With Offset Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_Category"]
          },
          "doc": " Categories which satisfy the provided query.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Categories._wix_common_PagingMetadata",
          "doc": " Paging metadata.\n"
        },
                {
          "name": "aggregationData",
          "type": "All APIs.Categories._wix_common_AggregationData",
          "doc": " Aggregation data.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CountCategoriesRequest",
      "displayName": "Count Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)\nTo understand supported filters and limitations see `SearchCategories` method.\n"
        },
                {
          "name": "search",
          "type": "All APIs.Categories._wix_common_SearchDetails",
          "doc": "free text to match in searchable fields\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n Used only in the first request. Following requests use the cursor token.\n"
        },
                {
          "name": "includeHidden",
          "type": "boolean",
          "doc": " Whether hidden categories should be included in the response. Default is `false`.\n Used only in the first request. Following requests use the cursor token.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CountCategoriesResponse",
      "displayName": "Count Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "count",
        "type": "integer",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkCreateCategoriesRequest",
      "displayName": "Bulk Create Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_Category"]
          },
          "doc": " List of categories to be created.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains the categories.\n"
        },
                {
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the category entity in the response.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkCreateCategoriesResponse",
      "displayName": "Bulk Create Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkCategoriesResult"]
          },
          "doc": " Categories created by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Categories._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkUpdateCategoriesRequest",
      "displayName": "Bulk Update Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_MaskedCategory"]
          },
          "doc": " List of categories to be updated.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains the categories.\n"
        },
                {
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the category entity in the response.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkUpdateCategoriesResponse",
      "displayName": "Bulk Update Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkCategoriesResult"]
          },
          "doc": " Categories updated by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Categories._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_MaskedCategory",
      "displayName": "Masked Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
        "doc": " Category to be updated, may be partial.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_UpdateCategoryVisibilityRequest",
      "displayName": "Update Category Visibility Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " ID of category to be updated\n"
        },
                {
          "name": "visible",
          "type": "boolean",
          "doc": " value to set `visible` to\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Latest revision of the category.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_RequestedFields"]
          },
          "doc": " Fields to return in the response. When not provided, these fields are not returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_UpdateCategoryVisibilityResponse",
      "displayName": "Update Category Visibility Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Categories._com_wix_categories_api_v1_Category",
        "doc": " The updated Category.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkUpdateVisibilityRequest",
      "displayName": "Bulk Update Visibility Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " IDs of categories to be updated.\n"
        },
                {
          "name": "visible",
          "type": "boolean",
          "doc": " value to set `visible` to. This value will be set for all categories in the request\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        },
                {
          "name": "returnEntity",
          "type": "boolean",
          "doc": " Whether to return the category entity in the response.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkUpdateVisibilityResponse",
      "displayName": "Bulk Update Visibility Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkCategoriesResult"]
          },
          "doc": " Categories updated by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Categories._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkUpdateVisibilityByFilterRequest",
      "displayName": "Bulk Update Visibility By Filter Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains the categories.\n"
        },
                {
          "name": "visible",
          "type": "boolean",
          "doc": " value to set `visible` to. This value will be set for all categories that match the filter\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkUpdateVisibilityByFilterResponse",
      "displayName": "Bulk Update Visibility By Filter Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "jobId",
        "type": "string",
        "doc": " Token that can be used to query \"AsyncJobService\"\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkDeleteCategoriesRequest",
      "displayName": "Bulk Delete Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "categoryIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " IDs of categories to be deleted.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkDeleteCategoriesResponse",
      "displayName": "Bulk Delete Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkCategoriesResult"]
          },
          "doc": " Categories deleted by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Categories._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkDeleteCategoriesByFilterRequest",
      "displayName": "Bulk Delete Categories By Filter Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains the categories.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkDeleteCategoriesByFilterResponse",
      "displayName": "Bulk Delete Categories By Filter Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "jobId",
        "type": "string",
        "doc": " Token that can be used to query \"AsyncJobService\"\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_MoveCategoryRequest",
      "displayName": "Move Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " ID of category to place.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        },
                {
          "name": "parentCategoryId",
          "type": "string",
          "doc": " ID of parent category.\n Optional. When not passed it will fallback to the root category\n"
        },
                {
          "name": "position",
          "type": "All APIs.Categories._com_wix_categories_api_v1_MoveCategoryRequest_Position",
          "doc": " Where to place the subcategory.\n `FIRST` - make category with `category_id` first subcategory with manual arrangement.\n `LAST` - make category with `category_id` last subcategory with manual arrangement.\n `BEFORE` - requires `move_before_category_id`, category with `category_id` will be moved before it.\n"
        },
                {
          "name": "moveBeforeCategoryId",
          "type": "string",
          "doc": " Required when `position` is `BEFORE`. Otherwise ignored\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_MoveCategoryResponse",
      "displayName": "Move Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "parentCategoryId",
          "type": "string",
          "doc": " ID of parent category.\n"
        },
                {
          "name": "categoriesAfterMove",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Information about manually arranged categories after move.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkAddItemsToCategoryRequest",
      "displayName": "Bulk Add Items To Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Category id.\n"
        },
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
          },
          "doc": " List of catalog items with reference info.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkAddItemsToCategoryResponse",
      "displayName": "Bulk Add Items To Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkItemsToCategoryResult"]
          },
          "doc": " Items added by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Categories._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkAddItemToCategoriesRequest",
      "displayName": "Bulk Add Item To Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": " Catalog item reference info\n"
        },
                {
          "name": "categoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Category ids.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains the categories.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkAddItemToCategoriesResponse",
      "displayName": "Bulk Add Item To Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkItemToCategoriesResult"]
          },
          "doc": " Items added by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Categories._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkRemoveItemsFromCategoryRequest",
      "displayName": "Bulk Remove Items From Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Category id\n"
        },
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
          },
          "doc": " List of catalog items with reference info.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkRemoveItemsFromCategoryResponse",
      "displayName": "Bulk Remove Items From Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkItemsToCategoryResult"]
          },
          "doc": " Items removed by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Categories._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkRemoveItemFromCategoriesRequest",
      "displayName": "Bulk Remove Item From Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": " Catalog item reference info\n"
        },
                {
          "name": "categoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Category ids.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains the categories.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_BulkRemoveItemFromCategoriesResponse",
      "displayName": "Bulk Remove Item From Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_BulkItemToCategoriesResult"]
          },
          "doc": " Items removed by bulk action.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Categories._wix_common_BulkActionMetadata",
          "doc": " Bulk action metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ListItemsInCategoryRequest",
      "displayName": "List Items In Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": "ID of category containing items.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        },
                {
          "name": "useCategoryArrangement",
          "type": "boolean",
          "doc": "Default: `false`. When `true` items arranged by user will be return before all other items.\n"
        },
                {
          "name": "includeItemsFromSubcategories",
          "type": "boolean",
          "doc": " Default: `false`. When `false` only direct items of category will be returned. When `true` response contains also items from all subcategories which current category contains\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ListItemsInCategoryRequest_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ListItemsInCategoryRequest_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cursorPaging",
        "type": "All APIs.Categories._wix_common_CursorPaging",
        "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `use_category_arrangement` or `include_items_from_subcategories`.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_categories_api_v1_ListItemsInCategoryResponse",
      "displayName": "List Items In Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
          },
          "doc": "Items which satisfy query.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Categories._com_wix_ecommerce_commons_api_PlatformPagingMetadataV2",
          "doc": "Paging metadata. Contains cursor which can be used in next query.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ListCategoriesForItemRequest",
      "displayName": "List Categories For Item Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": "Catalog item reference info.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": "A reference to the tree that contains the categories.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ListCategoriesForItemResponse",
      "displayName": "List Categories For Item Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "directCategoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "A list of category IDs that contain this item directly.\n"
        },
                {
          "name": "allCategoryIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "A list of category IDs that contain this item directly and their parent category IDs.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_MoveItemInCategoryRequest",
      "displayName": "Move Item In Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": "ID of category.\nItem must be direct child of this category, otherwise error returned\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": "A reference to the tree that contains this category.\n"
        },
                {
          "name": "item",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": "Item to move.\n"
        },
                {
          "name": "position",
          "type": "All APIs.Categories._com_wix_categories_api_v1_MoveItemInCategoryRequest_Position",
          "doc": "Where to move item.\n`FIRST` - make `item` first item with manual arrangement. If before this operation category already has 100 manually arranged items, the 100th item will be removed from list of items with manual arrangement.\n`LAST` - make `item` last item with manual arrangement. If before this operation category already has 100 manually arranged items, moving item will be not last but 100th.\n`BEFORE` - requires `before_item`, `item` will be moved before it. If `before_item` was 100th item in category it will be removed from list of items with manual arrangement.\n`NONE` - don't use manual arrangement for `item`, it will be shown after all items with manual arrangement according to default sorting.\n"
        },
                {
          "name": "beforeItem",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": "Required when `position` is `BEFORE`. `before_item` must be manually arranged item.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_MoveItemInCategoryResponse",
      "displayName": "Move Item In Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "itemsAfterMove",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
        },
        "doc": "Information about manually arranged items after move.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_SetArrangedItemsRequest",
      "displayName": "Set Arranged Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": "ID of category.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": "A reference to the tree that contains this category.\n"
        },
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
          },
          "doc": "List of arranged items to set.\nAll items must be direct children of category with `category_id`, otherwise error returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_SetArrangedItemsResponse",
      "displayName": "Set Arranged Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "items",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
        },
        "doc": "The updated list of arranged items in category.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_GetArrangedItemsRequest",
      "displayName": "Get Arranged Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": "ID of category.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": "A reference to the tree that contains this category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_GetArrangedItemsResponse",
      "displayName": "Get Arranged Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "items",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
        },
        "doc": "List of arranged items in category.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_GetCategoriesTreeRequest",
      "displayName": "Get Categories Tree Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "treeReference",
        "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
        "doc": "A reference to the tree.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_GetCategoriesTreeResponse",
      "displayName": "Get Categories Tree Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "categoriesTree",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_CategoryTreeNode"]
        },
        "doc": " Categories tree.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_CategoryMoved",
      "displayName": "Category Moved Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Category ID.\n"
        },
                {
          "name": "parentCategory",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ParentCategory",
          "doc": " ID of parent category and index.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemAddedToCategory",
      "displayName": "Item Added To Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Category ID.\n"
        },
                {
          "name": "itemReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": " Catalog item reference info.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemsAddedToCategory",
      "displayName": "Items Added To Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Category ID.\n"
        },
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
          },
          "doc": " List of catalog items with reference info.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemRemovedFromCategory",
      "displayName": "Item Removed From Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Category ID.\n"
        },
                {
          "name": "itemReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_ItemReference",
          "doc": " Catalog item reference info.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemsRemovedFromCategory",
      "displayName": "Items Removed From Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Category ID.\n"
        },
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Categories._com_wix_categories_api_v1_ItemReference"]
          },
          "doc": " List of catalog items with reference info.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": " A reference to the tree that contains this category.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_ItemsArrangedInCategory",
      "displayName": "Items Arranged In Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Category ID.\n"
        },
                {
          "name": "treeReference",
          "type": "All APIs.Categories._com_wix_categories_api_v1_TreeReference",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TextStyle_TextAlignment",
      "displayName": "Text Alignment Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> AUTO -  browser default, eqivalent to `initial`\n <\/code><\/li><li><code> LEFT -  Left align\n <\/code><\/li><li><code> RIGHT -  Right align\n <\/code><\/li><li><code> CENTER -  Center align\n <\/code><\/li><li><code> JUSTIFY -  Text is spaced to line up its left and right edges to the left and right edges of the line box, except for the last line.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "AUTO",
        "LEFT",
        "RIGHT",
        "CENTER",
        "JUSTIFY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Link_Target",
      "displayName": "Target Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SELF -  Opens the linked document in the same frame as it was clicked (this is default)\n <\/code><\/li><li><code> BLANK -  Opens the linked document in a new window or tab\n <\/code><\/li><li><code> PARENT -  Opens the linked document in the parent frame\n <\/code><\/li><li><code> TOP -  Opens the linked document in the full body of the window\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SELF",
        "BLANK",
        "PARENT",
        "TOP"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Width_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CONTENT -  Width matches the content width\n <\/code><\/li><li><code> SMALL -  Small Width\n <\/code><\/li><li><code> ORIGINAL -  Width will match the original asset width\n <\/code><\/li><li><code> FULL_WIDTH -  coast-to-coast display\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CONTENT",
        "SMALL",
        "ORIGINAL",
        "FULL_WIDTH"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PluginContainerData_Alignment",
      "displayName": "Alignment Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CENTER -  Center Alignment\n <\/code><\/li><li><code> LEFT -  Left Alignment\n <\/code><\/li><li><code> RIGHT -  Right Alignment\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CENTER",
        "LEFT",
        "RIGHT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_ButtonData_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LINK -  Regular link button\n <\/code><\/li><li><code> ACTION -  Triggers custom action that is defined in plugin configuration by the consumer\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LINK",
        "ACTION"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_DividerData_LineStyle",
      "displayName": "Line Style Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SINGLE -  Single Line\n <\/code><\/li><li><code> DOUBLE -  Double Line\n <\/code><\/li><li><code> DASHED -  Dashed Line\n <\/code><\/li><li><code> DOTTED -  Dotted Line\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SINGLE",
        "DOUBLE",
        "DASHED",
        "DOTTED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_DividerData_Width",
      "displayName": "Width Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LARGE -  Large line\n <\/code><\/li><li><code> MEDIUM -  Medium line\n <\/code><\/li><li><code> SMALL -  Small line\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LARGE",
        "MEDIUM",
        "SMALL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_DividerData_Alignment",
      "displayName": "Alignment Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CENTER -  Center alignment\n <\/code><\/li><li><code> LEFT -  Left alignment\n <\/code><\/li><li><code> RIGHT -  Right alignment\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CENTER",
        "LEFT",
        "RIGHT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FileData_PDFSettings_ViewMode",
      "displayName": "View Mode Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NONE -  No PDF view\n <\/code><\/li><li><code> FULL -  Full PDF view\n <\/code><\/li><li><code> MINI -  Mini PDF view\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NONE",
        "FULL",
        "MINI"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_Layout_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> COLLAGE -  Collage type\n <\/code><\/li><li><code> MASONRY -  Masonry type\n <\/code><\/li><li><code> GRID -  Grid type\n <\/code><\/li><li><code> THUMBNAIL -  Thumbnail type\n <\/code><\/li><li><code> SLIDER -  Slider type\n <\/code><\/li><li><code> SLIDESHOW -  Slideshow type\n <\/code><\/li><li><code> PANORAMA -  Panorama type\n <\/code><\/li><li><code> COLUMN -  Column type\n <\/code><\/li><li><code> MAGIC -  Magic type\n <\/code><\/li><li><code> FULLSIZE -  Fullsize images type\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "COLLAGE",
        "MASONRY",
        "GRID",
        "THUMBNAIL",
        "SLIDER",
        "SLIDESHOW",
        "PANORAMA",
        "COLUMN",
        "MAGIC",
        "FULLSIZE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_Layout_Orientation",
      "displayName": "Orientation Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ROWS -  Rows Orientation\n <\/code><\/li><li><code> COLUMNS -  Columns Orientation\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ROWS",
        "COLUMNS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_ItemStyle_Crop",
      "displayName": "Crop Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> FILL -  Crop to fill\n <\/code><\/li><li><code> FIT -  Crop to fit\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "FILL",
        "FIT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_GalleryOptions_Thumbnails_Alignment",
      "displayName": "Alignment Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> TOP -  Top alignment\n <\/code><\/li><li><code> RIGHT -  Right alignment\n <\/code><\/li><li><code> BOTTOM -  Bottom alignment\n <\/code><\/li><li><code> LEFT -  Left alignment\n <\/code><\/li><li><code> NONE -  No thumbnail\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "TOP",
        "RIGHT",
        "BOTTOM",
        "LEFT",
        "NONE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_HTMLData_Source",
      "displayName": "Source Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> HTML <\/code><\/li><li><code> ADSENSE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "HTML",
        "ADSENSE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_MapType",
      "displayName": "Map Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ROADMAP -  Roadmap map type\n <\/code><\/li><li><code> SATELITE -  Satellite map type\n <\/code><\/li><li><code> HYBRID -  Hybrid map type\n <\/code><\/li><li><code> TERRAIN -  Terrain map type\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ROADMAP",
        "SATELITE",
        "HYBRID",
        "TERRAIN"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll_Settings_Permissions_ViewRole",
      "displayName": "View Role Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CREATOR -  Only Poll creator can view the results\n <\/code><\/li><li><code> VOTERS -  Anyone who voted can see the results\n <\/code><\/li><li><code> EVERYONE -  Anyone can see the results, even if one didn't vote\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CREATOR",
        "VOTERS",
        "EVERYONE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Poll_Settings_Permissions_VoteRole",
      "displayName": "Vote Role Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SITE_MEMBERS -  Logged in member\n <\/code><\/li><li><code> ALL -  Anyone\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SITE_MEMBERS",
        "ALL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Layout_PollLayout_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LIST -  List\n <\/code><\/li><li><code> GRID -  Grid\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LIST",
        "GRID"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Layout_PollLayout_Direction",
      "displayName": "Direction Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LTR -  Left-to-right\n <\/code><\/li><li><code> RTL -  Right-to-left\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LTR",
        "RTL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_PollData_Design_PollDesign_Background_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> COLOR -  Color background type\n <\/code><\/li><li><code> IMAGE -  Image background type\n <\/code><\/li><li><code> GRADIENT -  Gradiant background type\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "COLOR",
        "IMAGE",
        "GRADIENT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_AppEmbedData_AppType",
      "displayName": "App Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> PRODUCT <\/code><\/li><li><code> EVENT <\/code><\/li><li><code> BOOKING <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "PRODUCT",
        "EVENT",
        "BOOKING"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_CollapsibleListData_InitialExpandedItems",
      "displayName": "Initial Expanded Items Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> FIRST -  First item will be expended initally\n <\/code><\/li><li><code> ALL -  All items will expended initally\n <\/code><\/li><li><code> NONE -  All items collapsed initally\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "FIRST",
        "ALL",
        "NONE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_CollapsibleListData_Direction",
      "displayName": "Direction Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LTR -  Left-to-right\n <\/code><\/li><li><code> RTL -  Right-to-left\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LTR",
        "RTL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_TableCellData_VerticalAlignment",
      "displayName": "Vertical Alignment Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> TOP -  Top alignment\n <\/code><\/li><li><code> MIDDLE -  Middle alignment\n <\/code><\/li><li><code> BOTTOM -  Bottom alignment\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "TOP",
        "MIDDLE",
        "BOTTOM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_FontSizeData_fontType",
      "displayName": "font Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> PX <\/code><\/li><li><code> EM <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "PX",
        "EM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Node_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> PARAGRAPH <\/code><\/li><li><code> TEXT <\/code><\/li><li><code> HEADING <\/code><\/li><li><code> BULLETED_LIST <\/code><\/li><li><code> ORDERED_LIST <\/code><\/li><li><code> LIST_ITEM <\/code><\/li><li><code> BLOCKQUOTE <\/code><\/li><li><code> CODE_BLOCK <\/code><\/li><li><code> VIDEO <\/code><\/li><li><code> DIVIDER <\/code><\/li><li><code> FILE <\/code><\/li><li><code> GALLERY <\/code><\/li><li><code> GIF <\/code><\/li><li><code> HTML <\/code><\/li><li><code> IMAGE <\/code><\/li><li><code> LINK_PREVIEW <\/code><\/li><li><code> MAP <\/code><\/li><li><code> POLL <\/code><\/li><li><code> APP_EMBED <\/code><\/li><li><code> BUTTON <\/code><\/li><li><code> COLLAPSIBLE_LIST <\/code><\/li><li><code> TABLE <\/code><\/li><li><code> EMBED <\/code><\/li><li><code> COLLAPSIBLE_ITEM <\/code><\/li><li><code> COLLAPSIBLE_ITEM_TITLE <\/code><\/li><li><code> COLLAPSIBLE_ITEM_BODY <\/code><\/li><li><code> TABLE_CELL <\/code><\/li><li><code> TABLE_ROW <\/code><\/li><li><code> EXTERNAL <\/code><\/li><li><code> AUDIO <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "PARAGRAPH",
        "TEXT",
        "HEADING",
        "BULLETED_LIST",
        "ORDERED_LIST",
        "LIST_ITEM",
        "BLOCKQUOTE",
        "CODE_BLOCK",
        "VIDEO",
        "DIVIDER",
        "FILE",
        "GALLERY",
        "GIF",
        "HTML",
        "IMAGE",
        "LINK_PREVIEW",
        "MAP",
        "POLL",
        "APP_EMBED",
        "BUTTON",
        "COLLAPSIBLE_LIST",
        "TABLE",
        "EMBED",
        "COLLAPSIBLE_ITEM",
        "COLLAPSIBLE_ITEM_TITLE",
        "COLLAPSIBLE_ITEM_BODY",
        "TABLE_CELL",
        "TABLE_ROW",
        "EXTERNAL",
        "AUDIO"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rich_content_v1_Decoration_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> BOLD <\/code><\/li><li><code> ITALIC <\/code><\/li><li><code> UNDERLINE <\/code><\/li><li><code> SPOILER <\/code><\/li><li><code> ANCHOR <\/code><\/li><li><code> MENTION <\/code><\/li><li><code> LINK <\/code><\/li><li><code> COLOR <\/code><\/li><li><code> FONT_SIZE <\/code><\/li><li><code> EXTERNAL <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "BOLD",
        "ITALIC",
        "UNDERLINE",
        "SPOILER",
        "ANCHOR",
        "MENTION",
        "LINK",
        "COLOR",
        "FONT_SIZE",
        "EXTERNAL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationType",
      "displayName": "Aggregation Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_AGGREGATION_TYPE <\/code><\/li><li><code> VALUE -  An aggregation where result buckets are dynamically built - one per unique value\n <\/code><\/li><li><code> RANGE -  An aggregation, where user can define set of ranges - each representing a bucket\n <\/code><\/li><li><code> SCALAR -  A single-value metric aggregation - e.g. min, max, sum, avg\n <\/code><\/li><li><code> DATE_HISTOGRAM -  An aggregation, where result buckets are dynamically built - one per time interval (hour, day, week, etc.)\n <\/code><\/li><li><code> NESTED -  Multi-level aggregation, where each next aggregation is nested within previous one\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_AGGREGATION_TYPE",
        "VALUE",
        "RANGE",
        "SCALAR",
        "DATE_HISTOGRAM",
        "NESTED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_ScalarType",
      "displayName": "Scalar Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SCALAR_TYPE <\/code><\/li><li><code> COUNT_DISTINCT -  Count of distinct values\n <\/code><\/li><li><code> MIN -  Minimum value\n <\/code><\/li><li><code> MAX -  Maximum value\n <\/code><\/li><li><code> SUM -  Sum of values\n <\/code><\/li><li><code> AVG -  Average of values\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SCALAR_TYPE",
        "COUNT_DISTINCT",
        "MIN",
        "MAX",
        "SUM",
        "AVG"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SearchDetails_Mode",
      "displayName": "Mode Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> OR -  Any of the search terms must be present\n <\/code><\/li><li><code> AND -  All search terms must be present\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "OR",
        "AND"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation_SortType",
      "displayName": "Sort Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> COUNT -  Should sort by number of matches\n <\/code><\/li><li><code> VALUE -  Should sort by value of the field alphabetically\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "COUNT",
        "VALUE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation_SortDirection",
      "displayName": "Sort Direction Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> DESC -  Should sort in descending order\n <\/code><\/li><li><code> ASC -  Should sort in ascending order\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "DESC",
        "ASC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation_MissingValues",
      "displayName": "Missing Values Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> EXCLUDE -  Should missing values be excluded from the aggregation results\n <\/code><\/li><li><code> INCLUDE -  Should missing values be included in the aggregation results\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "EXCLUDE",
        "INCLUDE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_NestedAggregation_NestedAggregationType",
      "displayName": "Nested Aggregation Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_AGGREGATION_TYPE <\/code><\/li><li><code> VALUE -  An aggregation where result buckets are dynamically built - one per unique value\n <\/code><\/li><li><code> RANGE -  An aggregation, where user can define set of ranges - each representing a bucket\n <\/code><\/li><li><code> SCALAR -  A single-value metric aggregation - e.g. min, max, sum, avg\n <\/code><\/li><li><code> DATE_HISTOGRAM -  An aggregation, where result buckets are dynamically built - one per time interval (hour, day, week, etc.)\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_AGGREGATION_TYPE",
        "VALUE",
        "RANGE",
        "SCALAR",
        "DATE_HISTOGRAM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_DateHistogramAggregation_Interval",
      "displayName": "Interval Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_INTERVAL <\/code><\/li><li><code> YEAR -  Yearly interval\n <\/code><\/li><li><code> MONTH -  Monthly interval\n <\/code><\/li><li><code> WEEK -  Weekly interval\n <\/code><\/li><li><code> DAY -  Daily interval\n <\/code><\/li><li><code> HOUR -  Hourly interval\n <\/code><\/li><li><code> MINUTE -  Minute interval\n <\/code><\/li><li><code> SECOND -  Second interval\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_INTERVAL",
        "YEAR",
        "MONTH",
        "WEEK",
        "DAY",
        "HOUR",
        "MINUTE",
        "SECOND"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_RequestedFields",
      "displayName": "Requested Fields Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_REQUESTED_FIELD <\/code><\/li><li><code> BREADCRUMBS <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_REQUESTED_FIELD",
        "BREADCRUMBS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_MoveCategoryRequest_Position",
      "displayName": "Position Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_POSITION <\/code><\/li><li><code> FIRST <\/code><\/li><li><code> LAST <\/code><\/li><li><code> BEFORE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_POSITION",
        "FIRST",
        "LAST",
        "BEFORE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_categories_api_v1_MoveItemInCategoryRequest_Position",
      "displayName": "Position Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_POSITION <\/code><\/li><li><code> FIRST <\/code><\/li><li><code> LAST <\/code><\/li><li><code> BEFORE <\/code><\/li><li><code> NONE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_POSITION",
        "FIRST",
        "LAST",
        "BEFORE",
        "NONE"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.categories.categories-service"}
}
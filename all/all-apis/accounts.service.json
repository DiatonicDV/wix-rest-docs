{
  "name": "Accounts",
  "client_id": "https://github.com/wix-private/app-market/tree/master/loyalty/loyalty-accounts#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Account",
    "entity": ""
  }],
  "relatedGuides": [  {
    "path": "../guides/accounts/docs/introduction.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Adjust Points",
      "methodName": "AdjustPoints",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Manage Loyalty",
        "description": "Request permission to manage the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["accountId"],
      "params":       [
                {
          "in": "PATH",
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "description",
          "type": "string",
          "doc": " Description to explain the reason for the points adjustment.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "type",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_AdjustPointsRequest_type",
          "doc": " Type of the `Adjust Points` call.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "revision",
          "type": "string",
          "doc": " Each time the loyalty account is updated, `revision` increments by 1.\n\nThe current `revision` must be passed when adjusting points in the loyalty account. This\nensures you're working with the latest version of the loyalty account and prevents unintended overwrites.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "AdjustPoints",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_AdjustPointsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Adjusts the point balance of a loyalty account.\n\nYou can adjust the balance in two ways:\n- `balance` allows you to set the total points balance to this new amount.\n- `amount` allows you to adjust the points balance by this amount. This amount can be a positive number to increase the points balance or a negative number to decrease the balance.\n\nAn account may not be adjusted to result in a negative balance. If you pass an integer in both the `balance` and the `amount` parameters then the `balance` adjustment takes effect and the\n`amount` adjustment is ignored.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/{accountId}/adjust-points",
        "links": [],
        "examples": [        {
          "title": "Adjust account balance",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/e6f39a5b-a6d0-4556-b889-0cf09d8a84f7/adjust-points' \\\n  -H 'Authorization: <AUTH>' \\\n  -H 'Content-Type: application/json' \\\n  --data-raw '{\n        \"accountId\": \"01e34b81-4e48-43e4-b178-c84f3b968574\",\n        \"description\": \"Sync from external program\",\n        \"balance\": 15,\n        \"revision\": \"3\"\n  }'"],
          "response": ["{\"account\": {\n  \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n  \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n  \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n  \"points\":   {\n    \"balance\": 15,\n    \"earned\": 10,\n    \"redeemed\": 0,\n    \"adjusted\": 5\n  },\n  \"latestTransaction\":   {\n    \"id\": \"9d29cf95-fd2c-4db4-8f4d-2d65c52cacb9\",\n    \"amount\": 5,\n    \"type\": \"ADJUST\",\n    \"description\": \"\",\n    \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n    \"idempotencyKey\": null\n  },\n  \"rewardAvailable\": true,\n  \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n  \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n  \"revision\": \"4\",\n  \"tier\":   {\n    \"id\": \"1415f107-640c-4e04-870f-149cdd562093\",\n    \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n    \"recalculationDate\": null,\n    \"points\": 15\n  },\n  \"lastActivityDate\": \"2021-12-07T07:30:23.749Z\",\n  \"contact\":   {\n    \"id\": \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n    \"name\": \"Johna Linskey\",\n    \"picture\": null,\n    \"email\": \"johna.linskey@yopmail.com\",\n    \"displayName\": \"Johna Linskey\"\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "AdjustPointsRequest",
        "rpcResponseName": "AdjustPointsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Account",
      "methodName": "CreateAccount",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Manage Loyalty",
        "description": "Request permission to manage the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["contactId"],
      "params": [      {
        "in": "BODY",
        "name": "contactId",
        "type": "string",
        "doc": " Contact ID for a Wix site contact. See the Contacts API to\n[learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object).\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreateAccount",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_CreateAccountResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a loyalty account for one of a site's contacts.\n\nTo create a new loyalty account, the customer must first be a site contact with a contact ID. See the Contacts API to\n[learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object). The site must also\nhave an active loyalty program before loyalty accounts can be created. See the activate loyalty program endpoint\n[to activate a site's loyalty program](https://dev.wix.com/api/rest/wix-loyalty-program/program/activate-loyalty-program).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts",
        "links": [],
        "examples": [        {
          "title": "Create an account for the contact",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts' \\\n  -H 'Authorization: <AUTH>' \\\n  -H 'Content-Type: application/json' \\\n  --data-raw '{\n        \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\"\n  }'"],
          "response": ["{\"account\": {\n  \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n  \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n  \"memberId\": \"3c7267de-204d-4f6c-b5a5-5d060bc3b21c\",\n  \"points\":   {\n    \"balance\": 0,\n    \"earned\": 0,\n    \"redeemed\": 0,\n    \"adjusted\": 0\n  },\n  \"latestTransaction\": null,\n  \"rewardAvailable\": false,\n  \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n  \"updatedDate\": \"2021-12-06T14:33:19.114Z\",\n  \"revision\": \"1\",\n  \"tier\":   {\n    \"id\": \"1415f107-640c-4e04-870f-149cdd562093\",\n    \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n    \"recalculationDate\": null,\n    \"points\": 15\n  },\n  \"lastActivityDate\": \"2021-12-07T07:30:23.749Z\",\n  \"contact\":   {\n    \"id\": \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n    \"name\": \"Johna Linskey\",\n    \"picture\": null,\n    \"email\": \"johna.linskey@yopmail.com\",\n    \"displayName\": \"Johna Linskey\"\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateAccountRequest",
        "rpcResponseName": "CreateAccountResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Earn Points",
      "methodName": "EarnPoints",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Manage Loyalty",
        "description": "Request permission to manage the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "accountId",
        "appId",
        "idempotencyKey"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "amount",
          "type": "integer",
          "doc": " Amount of points to earn. Must be a positive, whole number.\n\nMin: `1`\n\nMax: `9999999`\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "description",
          "type": "string",
          "doc": " Description of how the points were earned.\n\nMax: 100 characters\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "appId",
          "type": "string",
          "doc": " ID of the app that initiated the transaction.\n\nIf points were earned manually, then the `appId` is the Loyalty app's\n`wixAppId` of `553c79f3-5625-4f38-b14b-ef7c0d1e87df`. If points were earned in an automatic event,\nthen the `appId` is from that automation's `sourceAppId`.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "idempotencyKey",
          "type": "string",
          "doc": " Unique string identifier generated by the app. Wix uses this identifier to recognize subsequent retries of the same request.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "activityType",
          "type": "string",
          "doc": " Activity type\n\nIf points were earned through automation it should be set to trigger key.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "orderId",
          "type": "string",
          "doc": " Order id which was source of this transaction.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "EarnPoints",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_EarnPointsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Adds points to a loyalty account.\n\nOnly a positive amount can be added using the earn points endpoint. To adjust an account's balance\nfor a negative amount, use [Adjust Points](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/adjust-points).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/{accountId}/earn-points",
        "links": [],
        "examples": [        {
          "title": "Add points to account",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/e6f39a5b-a6d0-4556-b889-0cf09d8a84f7/earn-points' \\\n  -H 'Authorization: <AUTH>' \\\n  -H 'Content-Type: application/json' \\\n  --data-raw '{\n          \"accountId\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n          \"amount\": 10,\n          \"description\": \"For subscribing to the newsletter\",\n          \"appId\": \"db9c3016-ff93-4105-bdef-ff852f3c74c0\",\n          \"idempotencyKey\": \"baa05589-20d1-45db-ba29-99920bccf37e\"\n  }'"],
          "response": ["{\"account\": {\n  \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n  \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n  \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n  \"points\":   {\n    \"balance\": 10,\n    \"earned\": 10,\n    \"redeemed\": 0,\n    \"adjusted\": 0\n  },\n  \"latestTransaction\":   {\n    \"id\": \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n    \"amount\": 10,\n    \"type\": \"EARN\",\n    \"description\": \"points earned\",\n    \"createdDate\": \"2021-12-07T07:26:56.417Z\",\n    \"rewardId\": null,\n    \"appId\": \"db9c3016-ff93-4105-bdef-ff852f3c74c0\",\n    \"idempotencyKey\": \"baa05589-20d1-45db-ba29-99920bccf37e\"\n  },\n  \"rewardAvailable\": false,\n  \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n  \"updatedDate\": \"2021-12-07T07:26:56.417Z\",\n  \"revision\": \"2\",\n  \"tier\":   {\n    \"id\": \"1415f107-640c-4e04-870f-149cdd562093\",\n    \"updated_date\": \"2021-12-07T07:30:23.749Z\",\n    \"recalculationDate\": null,\n    \"points\": 15\n  },\n  \"lastActivityDate\": \"2021-12-07T07:30:23.749Z\",\n  \"contact\":   {\n    \"id\": \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n    \"name\": \"Johna Linskey\",\n    \"picture\": null,\n    \"email\": \"johna.linskey@yopmail.com\",\n    \"displayName\": \"Johna Linskey\"\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "EarnPointsRequest",
        "rpcResponseName": "EarnPointsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Account",
      "methodName": "GetAccount",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the account to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetAccount",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_GetAccountResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves an account using the loyalty account ID.\n\nYou can also retrieve an account using a secondary ID, such as a contact ID or a member ID by using\nthe [Get Account by Secondary ID endpoint](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/get-account-by-secondary-id).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/{id}",
        "links": [],
        "examples": [        {
          "title": "Get an account",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/e6f39a5b-a6d0-4556-b889-0cf09d8a84f7' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"account\": {\n  \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n  \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n  \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n  \"points\":   {\n    \"balance\": 15,\n    \"earned\": 10,\n    \"redeemed\": 0,\n    \"adjusted\": 5\n  },\n  \"latestTransaction\":   {\n    \"id\": \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n    \"amount\": 5,\n    \"type\": \"ADJUST\",\n    \"description\": \"\",\n    \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n    \"rewardId\": null,\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n    \"idempotencyKey\": null\n  },\n  \"rewardAvailable\": true,\n  \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n  \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n  \"revision\": \"4\",\n  \"tier\":   {\n    \"id\": \"1415f107-640c-4e04-870f-149cdd562093\",\n    \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n    \"recalculationDate\": null,\n    \"points\": 15\n  },\n  \"lastActivityDate\": \"2021-12-07T07:30:23.749Z\",\n  \"contact\":   {\n    \"id\": \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n    \"name\": \"Johna Linskey\",\n    \"picture\": null,\n    \"email\": \"johna.linskey@yopmail.com\",\n    \"displayName\": \"Johna Linskey\"\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetAccountRequest",
        "rpcResponseName": "GetAccountResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Account By Secondary Id",
      "methodName": "GetAccountBySecondaryId",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "QUERY",
        "name": "id",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_GetAccountBySecondaryIdRequest_id",
        "doc": "",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "GetAccountBySecondaryId",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_GetAccountBySecondaryIdResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves the account belonging to the specified contact or member.\n\nThis endpoint retrieves loyalty accounts using either a customer's contact ID or member ID. Your app can also retrieve an account\nusing the loyalty account ID by using the [Get Account endpoint](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/get-account-by-secondary-id).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/fetch-by",
        "links": [],
        "examples": [        {
          "title": "Get account by contactId or memberId",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/fetch-by?contactId=88615e02-3e8a-4297-8939-5d0a432b322a' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"account\": {\n  \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n  \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n  \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n  \"points\":   {\n    \"balance\": 15,\n    \"earned\": 10,\n    \"redeemed\": 0,\n    \"adjusted\": 5\n  },\n  \"latestTransaction\":   {\n    \"id\": \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n    \"amount\": 5,\n    \"type\": \"ADJUST\",\n    \"description\": \"\",\n    \"created_date\": \"2021-12-07T07:30:23.749Z\",\n    \"rewardId\": null,\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n    \"idempotencyKey\": null\n  },\n  \"rewardAvailable\": true,\n  \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n  \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n  \"revision\": \"4\",\n  \"tier\":   {\n    \"id\": \"1415f107-640c-4e04-870f-149cdd562093\",\n    \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n    \"recalculationDate\": null,\n    \"points\": 15\n  },\n  \"lastActivityDate\": \"2021-12-07T07:30:23.749Z\",\n  \"contact\":   {\n    \"id\": \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n    \"name\": \"Johna Linskey\",\n    \"picture\": null,\n    \"email\": \"johna.linskey@yopmail.com\",\n    \"displayName\": \"Johna Linskey\"\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetAccountBySecondaryIdRequest",
        "rpcResponseName": "GetAccountBySecondaryIdResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Program Totals",
      "methodName": "GetProgramTotals",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [],
      "ret":       {
        "type":         {
          "name": "GetProgramTotals",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_GetProgramTotalsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves the total amount of points earned, redeemed, and adjusted for the entire loyalty program.\n\nThe `balance` is the current total of points outstanding, while the `earned`, `adjusted`, and `redeemed` amounts\nare the historically accumulated amounts. The totals include the amounts for all loyalty accounts.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/program-totals",
        "links": [],
        "examples": [        {
          "title": "Get the program totals",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/program-totals' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{\"points\": {\n  \"balance\": 165,\n  \"earned\": 136,\n  \"redeemed\": 0,\n  \"adjusted\": 29\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetProgramTotalsRequest",
        "rpcResponseName": "GetProgramTotalsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Transaction",
      "methodName": "GetTransaction",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " Transaction ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetTransaction",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_GetTransactionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a transaction using the transaction ID.\n\nA loyalty transaction includes any activity that changes a loyalty account point balance, such as adjusting, earning, or redeeming loyalty points.\nTo retrieve all of the transactions for a specific loyalty account, use [List Transactions](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/list-transactions).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/transactions/{id}",
        "links": [],
        "examples": [        {
          "title": "Get a transaction",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/transactions/70f0711b-e16f-44d7-ad03-4301c78d8623' \\\n  -H 'Authorization: <AUTH>' \\"],
          "response": ["{\"transaction\": {\n  \"id\": \"70f0711b-e16f-44d7-ad03-4301c78d8623\",\n  \"accountId\": \"b04a7524-f0cc-435a-981a-b765f758438b\",\n  \"contactId\": \"8b4ff9ff-2f9a-41de-901d-9f6ecdb91664\",\n  \"amount\": 50,\n  \"type\": \"EARN\",\n  \"description\": \"Shared post on social\",\n  \"createdDate\": \"2022-05-24T09:11:51.274Z\",\n  \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n  \"idempotencyKey\": \"0eb76578-8928-418e-8428-4a330d24186c\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTransactionRequest",
        "rpcResponseName": "GetTransactionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Accounts",
      "methodName": "ListAccounts",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "contactIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of contact IDs. See the [Contacts API](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object) to learn more.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "cursorPaging.limit",
          "type": "integer",
          "doc": " Maximum number of items to return in the results.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "cursorPaging.cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListAccounts",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_ListAccountsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of accounts, given the provided filters.\n\nYou can retrieve selected loyalty accounts with an array of `contactIds` or retrieve a list of all of a site's loyalty accounts\nwith an empty request parameter. Use the `cursorPaging` parameters to limit how many items load at a time.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts",
        "links": [],
        "examples":         [
                    {
            "title": "Get a list of accounts, given the provided filters",
            "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts?cursorPaging.limit=2' \\\n  -H 'Authorization: <AUTH>'"],
            "response": ["{\n  \"accounts\":   [\n        {\n      \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n      \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n      \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n      \"points\":       {\n        \"balance\": 15,\n        \"earned\": 10,\n        \"redeemed\": 0,\n        \"adjusted\": 5\n      },\n      \"latestTransaction\":       {\n        \"id\": \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n        \"amount\": 5,\n        \"type\": \"ADJUST\",\n        \"description\": \"\",\n        \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n        \"rewardId\": null,\n        \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n        \"idempotencyKey\": null\n      },\n      \"rewardAvailable\": true,\n      \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n      \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n      \"revision\": \"4\",\n      \"tier\":       {\n        \"id\": \"1415f107-640c-4e04-870f-149cdd562093\",\n        \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n        \"recalculationDate\": null,\n        \"points\": 15\n      },\n      \"lastActivity_date\": \"2021-12-07T07:30:23.749Z\",\n      \"contact\":       {\n        \"id\": \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n        \"name\": \"Johna Linskey\",\n        \"picture\": null,\n        \"email\": \"johna.linskey@yopmail.com\",\n        \"displayName\": \"Johna Linskey\"\n      }\n    },\n        {\n      \"id\": \"73618276-35cc-4d21-8380-bdd2fbebf781\",\n      \"contactId\": \"fb8f125e-bfc3-4d9a-80c2-215494f24731\",\n      \"memberId\": \"ddd5302e-23cf-4fd6-bf6b-461aaae3ab7d\",\n      \"points\":       {\n        \"balance\": 25,\n        \"earned\": 30,\n        \"redeemed\": 5,\n        \"adjusted\": 0\n      },\n      \"latestTransaction\":       {\n        \"id\": \"95dc5eae-9c55-4a94-96fa-d70793af1a1f\",\n        \"amount\": 5,\n        \"type\": \"EARN\",\n        \"description\": \"\",\n        \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n        \"rewardId\": null,\n        \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n        \"idempotencyKey\": null\n      },\n      \"rewardAvailable\": true,\n      \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n      \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n      \"revision\": \"4\",\n      \"tier\":       {\n        \"id\": null,\n        \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n        \"recalculationDate\": null,\n        \"points\": 30\n      },\n      \"lastActivityDate\": \"2021-12-07T07:30:23.749Z\",\n      \"contact\":       {\n        \"id\": \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n        \"name\": \"Aigneis Johnsson\",\n        \"picture\": null,\n        \"email\": \"aigneis.johnsson@yopmail.com\",\n        \"displayName\": \"Aigneis Johnsson\"\n      }\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"offset\": null,\n    \"total\": 6,\n    \"tooManyToCount\": null,\n    \"cursors\":     {\n      \"next\": \"Gh0KDnBvaW50cy5iYWxhbmMlEAEaCREAAAAJJIBhQBorCgxfdXBkYXRlZERhdGUaGyoZChcKCiR0aW1lc3RhbXASCREA4GzcPdl3QiIkYjRkYzAyMzUtMjg2OS00MThjLWJjODQtNDMwNjUxMmMzYjhl\",\n      \"prev\": null\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get a list of accounts, given the provided filters",
            "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts?contactIds[]=88615e02-3e8a-4297-8939-5d0a432b322a&contactIds[]=fb8f125e-bfc3-4d9a-80c2-215494f24731' \\\n  -H 'Authorization: <AUTH>'\n\n{\n  \"accounts\": [\n    {\n      \"id\": \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n      \"contactId\": \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n      \"memberId\": \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n      \"points\": {\n        \"balance\": 15,\n        \"earned\": 10,\n        \"redeemed\": 0,\n        \"adjusted\": 5\n      },\n      \"latestTransaction\": {\n        \"id\": \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n        \"amount\": 5,\n        \"type\": \"ADJUST\",\n        \"description\": \"\",\n        \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n        \"rewardId\": null,\n        \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n        \"idempotencyKey\": null\n      },\n      \"rewardAvailable\": true,\n      \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n      \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n      \"revision\": \"4\",\n      \"tier\": {\n        \"id\": \"1415f107-640c-4e04-870f-149cdd562093\",\n        \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n        \"recalculationDate\": null,\n        \"points\": 15\n      },\n      \"lastActivityDate\": \"2021-12-07T07:30:23.749Z\",\n      \"contact\": {\n        \"id\": \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n        \"name\": \"Johna Linskey\",\n        \"picture\": null,\n        \"email\": \"johna.linskey@yopmail.com\",\n        \"displayName\": \"Johna Linskey\"\n      }\n    },\n    {\n      \"id\": \"73618276-35cc-4d21-8380-bdd2fbebf781\",\n      \"contactId\": \"fb8f125e-bfc3-4d9a-80c2-215494f24731\",\n      \"memberId\": \"ddd5302e-23cf-4fd6-bf6b-461aaae3ab7d\",\n      \"points\": {\n        \"balance\": 25,\n        \"earned\": 30,\n        \"redeemed\": 5,\n        \"adjusted\": 0\n      },\n      \"latestTransaction\": {\n        \"id\": \"95dc5eae-9c55-4a94-96fa-d70793af1a1f\",\n        \"amount\": 5,\n        \"type\": \"EARN\",\n        \"description\": \"\",\n        \"createdDate\": \"2021-12-07T07:30:23.749Z\",\n        \"rewardId\": null,\n        \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n        \"idempotencyKey\": null\n      },\n      \"rewardAvailable\": true,\n      \"createdDate\": \"2021-12-06T14:33:19.114Z\",\n      \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n      \"revision\": \"4\",\n      \"tier\": {\n        \"id\": null,\n        \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n        \"recalculationDate\": null,\n        \"points\": 30\n      },\n      \"lastActivityDate\": \"2021-12-07T07:30:23.749Z\",\n      \"contact\": {\n        \"id\": \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n        \"name\": \"Aigneis Johnsson\",\n        \"picture\": null,\n        \"email\": \"aigneis.johnsson@yopmail.com\",\n        \"displayName\": \"Aigneis Johnsson\"\n      }\n    }\n  ],\n  \"pagingMetadata\": {\n    \"count\": 2,\n    \"offset\": null,\n    \"total\": 2,\n    \"tooManyToCount\": null,\n    \"cursors\": {\n      \"next\": null,\n      \"prev\": null\n    }\n  }\n}\n"],
            "response": ["{} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListAccountsRequest",
        "rpcResponseName": "ListAccountsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Transactions",
      "methodName": "ListTransactions",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["accountId"],
      "params":       [
                {
          "in": "PATH",
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "sort.fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort.order",
          "type": "All APIs.Accounts._wix_common_SortOrder",
          "doc": " Sort order.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "cursorPaging.limit",
          "type": "integer",
          "doc": " Maximum number of items to return in the results.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "cursorPaging.cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListTransactions",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_ListTransactionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of transactions, given the provided filters.\n\nLoyalty transactions include any activities that change a loyalty account point balance, such as adjusting, earning, or redeeming loyalty points.\nTo retrieve a specific transaction, use that transaction's ID and [Get Transaction](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/get-transaction).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/{accountId}/transactions",
        "links": [],
        "examples": [        {
          "title": "Get a list of transactions",
          "body": ["curl -X GET \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/b04a7524-f0cc-435a-981a-b765f758438b/transactions' \\\n  -H 'Authorization: <AUTH>' \\"],
          "response": ["{\"transactions\": [\n    {\n    \"id\": \"03992fc4-8e8c-4406-8d3c-0292ed3be5d8\",\n    \"accountId\": \"b04a7524-f0cc-435a-981a-b765f758438b\",\n    \"contactId\": \"8b4ff9ff-2f9a-41de-901d-9f6ecdb91664\",\n    \"amount\": 150,\n    \"type\": \"ADJUST\",\n    \"description\": \"Signed up as site member.\",\n    \"createdDate\": \"2022-05-23T22:50:49.366Z\",\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\"\n  },\n    {\n    \"id\": \"70f0711b-e16f-44d7-ad03-4301c78d8623\",\n    \"accountId\": \"b04a7524-f0cc-435a-981a-b765f758438b\",\n    \"contactId\": \"8b4ff9ff-2f9a-41de-901d-9f6ecdb91664\",\n    \"amount\": 50,\n    \"type\": \"EARN\",\n    \"description\": \"Shared post on social\",\n    \"createdDate\": \"2022-05-24T09:11:51.274Z\",\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n    \"idempotencyKey\": \"0eb76578-8928-418e-8428-4a330d24186c\"\n  },\n    {\n    \"id\": \"78a5c76e-fe47-4103-bfda-15e05c2ab003\",\n    \"accountId\": \"b04a7524-f0cc-435a-981a-b765f758438b\",\n    \"contactId\": \"8b4ff9ff-2f9a-41de-901d-9f6ecdb91664\",\n    \"amount\": 50,\n    \"type\": \"EARN\",\n    \"description\": \"Shared post on social\",\n    \"createdDate\": \"2022-06-19T22:09:23.434Z\",\n    \"appId\": \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n    \"idempotencyKey\": \"5a036e48-4188-4200-a42e-de37c273c3c1\"\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListTransactionsRequest",
        "rpcResponseName": "ListTransactionsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Search Accounts",
      "methodName": "SearchAccounts",
      "serviceName": "LoyaltyAccounts",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "search",
        "type": "All APIs.Accounts._wix_common_CursorSearch",
        "doc": "",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "SearchAccounts",
          "statusCode": "200",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_SearchAccountsResponse"]
        },
        "doc": " Accounts found through provided search capabilities, along with paging and aggregation data of the results.\n"
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a list of accounts, given the provided filters and search capabilities.\nSearch is executed on the account's name and email values.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-accounts/v1/accounts/search",
        "links": [],
        "examples": [        {
          "title": "Search accounts, given the provided filters",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/loyalty-accounts/v1/accounts/search' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-raw '{\n    \"search\": {\n      \"search\": {\"expression\": \"John\"},\n      \"cursor_paging\": {\"limit\": 2}\n    }\n  }'"],
          "response": ["{\n  \"accounts\":   [\n        {\n      \"id\": \"0d1ce314-084a-4edd-a0c7-8a885c6248ba\",\n      \"contactId\": \"f96d2d30-a267-41e8-832c-615fae1bfee3\",\n      \"memberId\": null,\n      \"points\":       {\n        \"balance\": 573,\n        \"earned\": 0,\n        \"redeemed\": 0,\n        \"adjusted\": 0\n      },\n      \"latestTransaction\":       {\n        \"id\": \"81c738e1-5eff-45de-a072-e08e8ad1d439\",\n        \"amount\": 573,\n        \"type\": \"ADJUST\",\n        \"description\": \"Upsert\",\n        \"createdDate\": \"2023-10-10T15:34:44.861Z\",\n        \"rewardId\": null,\n        \"appId\": \"\",\n        \"idempotencyKey\": null,\n        \"redeemInfo\": null,\n        \"adjust\":         {\n          \"amountBefore\": 0,\n          \"amountAfter\": 573\n        }\n      },\n      \"rewardAvailable\": true,\n      \"createdDate\": \"2023-10-06T11:09:01.443Z\",\n      \"updatedDate\": \"2023-10-19T22:07:15.618Z\",\n      \"revision\": \"14\",\n      \"tier\":       {\n        \"id\": \"1415f107-640c-4e04-870f-149cdd562093\",\n        \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n        \"recalculationDate\": null,\n        \"points\": 15\n      },\n      \"lastActivityDate\": \"2023-10-10T15:34:44.864Z\",\n      \"contact\":       {\n        \"id\": \"f96d2d30-a267-41e8-832c-615fae1bfee3\",\n        \"name\": \"Johna Linskey\",\n        \"picture\": null,\n        \"email\": \"johna.linskey@yopmail.com\",\n        \"displayName\": \"Johna Linskey\"\n      }\n    },\n        {\n      \"id\": \"19b378db-896d-480d-a75e-cb4e5b77bf26\",\n      \"contactId\": \"63f477d4-a278-4a1d-8d4c-2a2786970f90\",\n      \"memberId\": null,\n      \"points\":       {\n        \"balance\": 474,\n        \"earned\": 0,\n        \"redeemed\": 0,\n        \"adjusted\": 0\n      },\n      \"latestTransaction\":       {\n        \"id\": \"f891a9c9-890c-4c09-863f-92c7158ddc24\",\n        \"amount\": 474,\n        \"type\": \"ADJUST\",\n        \"description\": \"Upsert\",\n        \"createdDate\": \"2023-10-10T15:33:34.086Z\",\n        \"rewardId\": null,\n        \"appId\": \"\",\n        \"idempotencyKey\": null,\n        \"redeemInfo\": null,\n        \"adjust\":         {\n          \"amountBefore\": 0,\n          \"amountAfter\": 474\n        }\n      },\n      \"rewardAvailable\": true,\n      \"createdDate\": \"2023-10-05T14:08:44.221Z\",\n      \"updatedDate\": \"2023-10-19T22:06:23.608Z\",\n      \"revision\": \"20\",\n      \"tier\":       {\n        \"id\": null,\n        \"updatedDate\": \"2021-12-07T07:30:23.749Z\",\n        \"recalculationDate\": null,\n        \"points\": 30\n      },\n      \"lastActivityDate\": \"2023-10-10T15:33:34.088Z\",\n      \"contact\":       {\n        \"id\": \"63f477d4-a278-4a1d-8d4c-2a2786970f90\",\n        \"name\": \"Aigneis Johnsson\",\n        \"picture\": null,\n        \"email\": \"aigneis.johnsson@yopmail.com\",\n        \"displayName\": \"Aigneis Johnsson\"\n      }\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 2,\n    \"cursors\":     {\n      \"next\": \"19b378db-896d-480d-a75e-cb4e5b77bf26,1.0\",\n      \"prev\": null\n    },\n    \"hasNext\": true\n  },\n  \"aggregationData\": null\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "SearchAccountsRequest",
        "rpcResponseName": "SearchAccountsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_loyalty_account_RewardAvailabilityUpdatedDomainEvent",
      "name": "Reward Availability Updated Webhook",
      "docs": {"summary": ""},
      "topic": "domain_events_wix.loyalty.v1.account",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.loyalty.v1.account_reward_availability_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_loyalty_account_LoyaltyAccountCreatedDomainEvent",
      "name": "Loyalty Account Created Webhook",
      "docs": {"summary": " Triggered when a loyalty account is created.\n"},
      "topic": "domain_events_wix.loyalty.v1.account",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.account_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_loyalty_account_PointsUpdatedDomainEvent",
      "name": "Points Updated Webhook",
      "docs": {"summary": " Triggered when the points of a loyalty account are adjusted, earned, or redeemed.\n"},
      "topic": "domain_events_wix.loyalty.v1.account",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.account_points_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_loyalty_account_LoyaltyAccountUpdatedDomainEvent",
      "name": "Loyalty Account Updated Webhook",
      "docs": {"summary": " Triggered when a loyalty account is updated, including when points are adjusted, earned, or redeemed.\n"},
      "topic": "domain_events_wix.loyalty.v1.account",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.account_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_loyalty_account_FirstTransactionDomainEvent",
      "name": "First Transaction Webhook",
      "docs": {"summary": " Triggered when first transaction occurs for a loyalty account\n"},
      "topic": "domain_events_wix.loyalty.v1.account",
      "tag": "Account",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.loyalty.v1.account_first_transaction",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccountCreatedDomainEvent",
      "displayName": "Loyalty Account Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"72e7d409-1004-4c0e-aaee-f450d3b7795e\",\n  \"entityFqdn\" : \"wix.loyalty.v1.account\",\n  \"slug\" : \"created\",\n  \"entityId\" : \"9d43c446-f97a-4622-a777-982717e9393f\",\n  \"createdEvent\" : {\n    \"entity\" : {\n      \"rewardAvailable\" : false,\n      \"revision\" : \"2\",\n      \"points\" : {\n        \"balance\" : 50,\n        \"earned\" : 50,\n        \"adjusted\" : 0,\n        \"redeemed\" : 0\n      },\n      \"id\" : \"aa6dd651-066e-4fe4-8f3b-a99a90e5f59b\",\n      \"contactId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n      \"memberId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n      \"latestTransaction\" : {\n        \"description\" : \"Sign Up to the Site & earn Stars\",\n        \"idempotencyKey\" : \"c138c707-029a-461b-a6b7-9ba796e61fca0130d405-8b13-4436-ad3b-42459bdefe6f\",\n        \"amount\" : 49,\n        \"id\" : \"0e921156-73ba-46ec-a311-9063e33eb9c9\",\n        \"type\" : \"EARN\",\n        \"appId\" : \"SiteMembers\",\n        \"createdDate\" : \"2021-12-30T12:13:43.875Z\"\n      },\n      \"updatedDate\" : \"2021-12-30T12:13:43.876Z\",\n      \"createdDate\" : \"2021-12-30T12:13:43.841Z\",\n      \"tier\" : {\n        \"id\" : \"1415f107-640c-4e04-870f-149cdd562093\",\n        \"updatedDate\" : \"2021-12-07T07:30:23.749Z\",\n        \"recalculationDate\" : null,\n        \"points\" : 15\n      },\n      \"lastActivityDate\" : \"2021-12-07T07:30:23.749Z\",\n      \"contact\" : {\n        \"id\" : \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n        \"name\" : \"Johna Linskey\",\n        \"picture\" : null,\n        \"email\" : \"johna.linskey@yopmail.com\",\n        \"displayName\" : \"Johna Linskey\"\n      }\n    }\n  },\n  \"eventTime\" : \"2021-12-30T12:13:43.846444Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.account`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccountEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "LoyaltyAccount ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccountEntityCreatedEvent",
      "displayName": "Loyalty Account Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccountUpdatedDomainEvent",
      "displayName": "Loyalty Account Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"6d93e773-0d52-4e27-85b5-431e9c498633\",\n  \"entityFqdn\" : \"wix.loyalty.v1.account\",\n  \"slug\" : \"updated\",\n  \"entityId\" : \"4951bd93-ddb3-4406-b63f-547d684085bd\",\n  \"updatedEvent\" : {\n    \"currentEntity\" : {\n      \"rewardAvailable\" : false,\n      \"revision\" : \"2\",\n      \"points\" : {\n        \"balance\" : 50,\n        \"earned\" : 50,\n        \"adjusted\" : 0,\n        \"redeemed\" : 0\n      },\n      \"id\" : \"aa6dd651-066e-4fe4-8f3b-a99a90e5f59b\",\n      \"contactId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n      \"memberId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n      \"latestTransaction\" : {\n        \"description\" : \"Sign Up to the Site & earn Stars\",\n        \"idempotencyKey\" : \"c138c707-029a-461b-a6b7-9ba796e61fca0130d405-8b13-4436-ad3b-42459bdefe6f\",\n        \"amount\" : 49,\n        \"id\" : \"0e921156-73ba-46ec-a311-9063e33eb9c9\",\n        \"type\" : \"EARN\",\n        \"appId\" : \"SiteMembers\",\n        \"createdDate\" : \"2021-12-30T12:13:43.875Z\"\n      },\n      \"updatedDate\" : \"2021-12-30T12:13:43.876Z\",\n      \"createdDate\" : \"2021-12-30T12:13:43.841Z\",\n      \"tier\" : {\n        \"id\" : \"1415f107-640c-4e04-870f-149cdd562093\",\n        \"updatedDate\" : \"2021-12-07T07:30:23.749Z\",\n        \"recalculationDate\" : null,\n        \"points\" : 15\n      },\n      \"lastActivityDate\" : \"2021-12-07T07:30:23.749Z\",\n      \"contact\" : {\n        \"id\" : \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n        \"name\" : \"Johna Linskey\",\n        \"picture\" : null,\n        \"email\" : \"johna.linskey@yopmail.com\",\n        \"displayName\" : \"Johna Linskey\"\n      }\n    }\n  },\n  \"eventTime\" : \"2021-12-30T12:13:43.885001Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.account`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccountEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "LoyaltyAccount ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccountEntityUpdatedEvent",
      "displayName": "Loyalty Account Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_PointsUpdatedDomainEvent",
      "displayName": "Points Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"48b171b8-e2c1-46da-92ff-5ce4b173c751\",\n  \"entityFqdn\" : \"wix.loyalty.v1.account\",\n  \"slug\" : \"points_updated\",\n  \"entityId\" : \"2bdbac7d-b121-4191-84bf-a359b20bc8c6\",\n  \"actionEvent\" : {\n    \"body\" : {\n      \"account\" : {\n        \"rewardAvailable\" : false,\n        \"revision\" : \"3\",\n        \"points\" : {\n          \"balance\" : 1,\n          \"earned\" : 0,\n          \"adjusted\" : 1,\n          \"redeemed\" : 0\n        },\n        \"id\" : \"fe0ca230-61a6-4ebf-9199-9c0d238619aa\",\n        \"contactId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n        \"memberId\" : \"87bbd811-f753-4de4-994d-69b24d22cb56\",\n        \"latestTransaction\" : {\n          \"description\" : \"\",\n          \"amount\" : -1,\n          \"id\" : \"7af9dffd-0ae6-4408-a40d-e68093f4694e\",\n          \"type\" : \"ADJUST\",\n          \"appId\" : \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n          \"createdDate\" : \"2021-12-29T14:06:50.091Z\"\n        },\n        \"updatedDate\" : \"2021-12-29T14:06:50.092Z\",\n        \"createdDate\" : \"2021-12-29T13:55:32.505Z\",\n        \"tier\" : {\n          \"id\" : \"1415f107-640c-4e04-870f-149cdd562093\",\n          \"updatedDate\" : \"2021-12-07T07:30:23.749Z\",\n          \"recalculationDate\" : null,\n          \"points\" : 15\n        },\n        \"lastActivityDate\" : \"2021-12-07T07:30:23.749Z\",\n        \"contact\" : {\n          \"id\" : \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n          \"name\" : \"Johna Linskey\",\n          \"picture\" : null,\n          \"email\" : \"johna.linskey@yopmail.com\",\n          \"displayName\" : \"Johna Linskey\"\n        }\n      }\n    }\n  },\n  \"eventTime\" : \"2021-12-29T14:06:50.106622Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.account`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `points_updated`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_PointsUpdatedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "PointsUpdated ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_PointsUpdatedActionEvent",
      "displayName": "Points Updated Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_PointsUpdated",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AccountsMergedDomainEvent",
      "displayName": "Accounts Merged Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.account`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `accounts_merged`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_AccountsMergedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "AccountsMerged ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AccountsMergedActionEvent",
      "displayName": "Accounts Merged Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_AccountsMerged",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_FirstTransactionDomainEvent",
      "displayName": "First Transaction Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.account`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `first_transaction`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_FirstTransactionActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "FirstTransaction ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_FirstTransactionActionEvent",
      "displayName": "First Transaction Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_FirstTransaction",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RewardAvailabilityUpdatedDomainEvent",
      "displayName": "Reward Availability Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.account`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `reward_availability_updated`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_RewardAvailabilityUpdatedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "RewardAvailabilityUpdated ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RewardAvailabilityUpdatedActionEvent",
      "displayName": "Reward Availability Updated Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_RewardAvailabilityUpdated",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_Points",
      "displayName": "Points Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "balance",
          "type": "integer",
          "doc": " Current point balance.\n\nEqual to the sum of `earned` and `adjusted` points, minus `redeemed` points.\n"
        },
                {
          "name": "earned",
          "type": "integer",
          "doc": " Total earned points.\n"
        },
                {
          "name": "adjusted",
          "type": "integer",
          "doc": " Total adjusted points.\n"
        },
                {
          "name": "redeemed",
          "type": "integer",
          "doc": " Total redeemed points.\n"
        },
                {
          "name": "expired",
          "type": "integer",
          "doc": " Total expired points.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RedeemInfo",
      "displayName": "Redeem Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rewardId",
          "type": "string",
          "doc": " ID of the reward that was redeemed.\n",
          "readOnly": true
        },
                {
          "name": "rewardType",
          "type": "string",
          "doc": " Type of reward that was redeemed.\n",
          "readOnly": true
        },
                {
          "name": "referenceEntityId",
          "type": "string",
          "doc": " ID of the specific item that was redeemed in this transaction.\n\nEach reward that is redeemed has a unique `referenceEntityId`.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccount",
      "displayName": "Loyalty Account Object",
      "locations": [],
      "docs":       {
        "summary": " A loyalty account stores a customer's loyalty points balance. A site's customers can earn points to their account\nand redeem those points for rewards.\n",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"account\" : {\n    \"id\" : \"e6f39a5b-a6d0-4556-b889-0cf09d8a84f7\",\n    \"contactId\" : \"88615e02-3e8a-4297-8939-5d0a432b322a\",\n    \"memberId\" : \"a517751b-a1ca-4423-8d91-aaf8f5b34215\",\n    \"points\" : {\n      \"balance\" : 15,\n      \"earned\" : 10,\n      \"redeemed\" : 0,\n      \"adjusted\" : 5\n    },\n    \"latestTransaction\" : {\n      \"id\" : \"262c8eb0-123e-4117-9fe6-4973a3551688\",\n      \"amount\" : 5,\n      \"type\" : \"ADJUST\",\n      \"description\" : \"\",\n      \"createdDate\" : \"2021-12-07T07:30:23.749Z\",\n      \"appId\" : \"553c79f3-5625-4f38-b14b-ef7c0d1e87df\",\n      \"idempotencyKey\" : null\n    },\n    \"rewardAvailable\" : true,\n    \"createdDate\" : \"2021-12-06T14:33:19.114Z\",\n    \"updatedDate\" : \"2021-12-07T07:30:23.749Z\",\n    \"revision\" : \"4\",\n    \"tier\" : {\n      \"id\" : \"1415f107-640c-4e04-870f-149cdd562093\",\n      \"updatedDate\" : \"2021-12-07T07:30:23.749Z\",\n      \"recalculationDate\" : null,\n      \"points\" : 15\n    },\n    \"lastActivityDate\" : \"2021-12-07T07:30:23.749Z\",\n    \"contact\" : {\n      \"id\" : \"7728152f-7deb-45f8-913f-7fdff4abbebe\",\n      \"name\" : \"Johna Linskey\",\n      \"picture\" : null,\n      \"email\" : \"johna.linskey@yopmail.com\",\n      \"displayName\" : \"Johna Linskey\"\n    }\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Account ID.\n",
          "readOnly": true
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Account owner's contact ID. See the Contacts API to [learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object).\n",
          "readOnly": true
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Account owner's member ID. See the Members API to [learn more about a site's members](https://dev.wix.com/api/rest/members/members/member-object).\n",
          "readOnly": true
        },
                {
          "name": "points",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_Points",
          "doc": " Information about the account totals.\n"
        },
                {
          "name": "latestTransaction",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LatestTransaction",
          "doc": " Details of the account's latest transaction.\n"
        },
                {
          "name": "rewardAvailable",
          "type": "boolean",
          "doc": " Whether the account has a reward available. `true` if the amount of points in `points.balance` are enough to redeem for a reward.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the account was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the account was last updated.\n",
          "readOnly": true
        },
                {
          "name": "lastActivityDate",
          "type": "string",
          "doc": " Account's last activity date and time.\n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by 1 each time the loyalty account is updated.\n\nTo prevent conflicting changes, the current `revision` must be passed when updating the loyalty account.\n\nIgnored when creating an account.\n"
        },
                {
          "name": "tier",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_Tier",
          "doc": "\nTier information.\n\nThe Loyalty Tiers API is currently unavailable, but the program may be activated and managed from a site's\n[loyalty dashboard](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Floyalty-accounts/wizard/).\n"
        },
                {
          "name": "contact",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_Contact",
          "doc": " Contact information\n"
        },
                {
          "name": "pointsExpiration",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_PointsExpiration",
          "doc": " Points expiration information\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LatestTransaction",
      "displayName": "Latest Transaction Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Transaction ID.\n"
        },
                {
          "name": "amount",
          "type": "integer",
          "doc": " Amount of earned, adjusted, or redeemed points in the latest transaction.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_TransactionType",
          "doc": " Transaction type.\n\n+ `\"EARN\"`: Points were earned by the customer taking an action. See [Earn Points](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/earn-points).\n+ `\"REDEEM\"`: Points were redeemed by the customer for a reward.\n+ `\"ADJUST\"`: Point balance was manually adjusted to a loyalty account. See [Adjust Points](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/adjust-points).\n+ `\"GIVE\"`: Points were manually added to or subtracted from a loyalty account. See [Adjust Points](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/adjust-points).\n+ `\"REFUND\"`: Points were refunded for a previously redeemed reward. See [Adjust Points](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/adjust-points).\n"
        },
                {
          "name": "typeOptions",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LatestTransaction_TypeOptions",
          "doc": ""
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the latest transaction.\n\nMax: 100 characters\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the transaction was created.\n",
          "readOnly": true
        },
                {
          "name": "appId",
          "type": "string",
          "doc": " ID of the app that initiated the transaction.\n\nOnly present if `type` is `\"ADJUST\"`, `\"EARN\"`, or `\"GIVE\"`.\n\nIf points were earned or adjusted manually, then the `appId` is the Loyalty app's\n`wixAppId` of `553c79f3-5625-4f38-b14b-ef7c0d1e87df`. If points were earned or adjusted in an automatic event,\nthen the `appId` is from that automation's `sourceAppId`.\n",
          "readOnly": true
        },
                {
          "name": "idempotencyKey",
          "type": "string",
          "doc": "Unique string identifier generated by the app. Wix uses this identifier to recognize subsequent retries of the same request.\n\nOnly present if points were added manually using the [Earn Points endpoint](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/earn-points).\n",
          "readOnly": true
        },
                {
          "name": "redeemInfo",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_RedeemInfo",
          "doc": " Additional information for redeemed points.\n\nOnly present if `type` is `\"REDEEM\"`.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LatestTransaction_TypeOptions",
      "displayName": "Type Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_account_Tier",
      "displayName": "Tier Object",
      "locations": [],
      "docs":       {
        "summary": "\nTier information.\n\nThe Tiers API is currently unavailable, but the program may be activated and managed from a site's\n[loyalty dashboard](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Floyalty-accounts/wizard/).\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "\nTier ID.\n\nThis field will not be returned if the account belongs to the base tier.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the tier information was last recalculated.\n",
          "readOnly": true
        },
                {
          "name": "points",
          "type": "integer",
          "doc": "\nPoints earned and adjusted over the tier's current rolling window.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_Contact",
      "displayName": "Contact Object",
      "locations": [],
      "docs":       {
        "summary": "\nLoyalty account's contact information\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Contact's id\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Contact's firstName & lastName concatenated\n",
          "readOnly": true
        },
                {
          "name": "picture",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_Image",
          "doc": " Contact's profile picture\n",
          "readOnly": true
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Contact's email\n",
          "readOnly": true
        },
                {
          "name": "displayName",
          "type": "string",
          "doc": " Contact's firstName & lastName concatenated, or email if name doesn't exist\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n",
          "readOnly": true
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AdjustOptions",
      "displayName": "Adjust Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amountBefore",
          "type": "integer",
          "doc": ""
        },
                {
          "name": "amountAfter",
          "type": "integer",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_EarnOptions",
      "displayName": "Earn Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "activityType",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_PointsExpiration",
      "displayName": "Points Expiration Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "expirationDate",
          "type": "string",
          "doc": " Date at which points are expiring.\n",
          "readOnly": true
        },
                {
          "name": "expiringPointsAmount",
          "type": "integer",
          "doc": " Amount of points that are going to expire at that date.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_PointsUpdated",
      "displayName": "Points Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Updated account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_FirstTransaction",
      "displayName": "First Transaction Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Updated account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AccountsMerged",
      "displayName": "Accounts Merged Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sourceAccounts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount"]
          },
          "doc": " Source accounts.\n",
          "readOnly": true
        },
                {
          "name": "updatedAccount",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
          "doc": " Merged account.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RewardAvailabilityUpdated",
      "displayName": "Reward Availability Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rewardAvailable",
          "type": "boolean",
          "doc": ""
        },
                {
          "name": "updateTrigger",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_RewardAvailabilityUpdated_UpdateTrigger",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "fieldsMapEntry",
      "displayName": "fields Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Unordered map of dynamically typed values.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Accounts._google_protobuf_Value",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Struct",
      "displayName": "Struct Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "fields",
        "type": "All APIs.Accounts.fieldsMapEntry",
        "doc": "Set of key-value pairs. Unordered map of dynamically typed values.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Accounts._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Accounts._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Maximum number of items to return in the results.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Accounts._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPagingMetadata",
      "displayName": "Cursor Paging Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Accounts._wix_common_Cursors",
          "doc": " Cursor strings that point to the next page, previous page, or both.\n"
        },
                {
          "name": "hasNext",
          "type": "boolean",
          "doc": "\nWhether there are more pages to retrieve following the current page.\n\n+ `true`: Another page of results can be retrieved.\n+ `false`: This is the last page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor string pointing to the next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to the previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Accounts._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Accounts._wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Accounts._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Accounts._wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_CursorSearch",
      "displayName": "Cursor Search Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": " A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._wix_common_Sorting"]
          },
          "doc": " Sort object in the form [{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]\n"
        },
                {
          "name": "aggregations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._wix_common_Aggregation"]
          },
          "doc": " Aggregations | Faceted search: refers to a way to explore large amounts of data by displaying summaries about various partitions of the data and later allowing to narrow the navigation to a specific partition.\n"
        },
                {
          "name": "search",
          "type": "All APIs.Accounts._wix_common_SearchDetails",
          "doc": " Free text to match in searchable fields\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Accounts._wix_common_CursorSearch_PagingMethod",
          "doc": ""
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": " UTC offset or IANA time zone. Valid values are\n ISO 8601 UTC offsets, such as +02:00 or -06:00,\n and IANA time zone IDs, such as Europe/Rome\n\n Affects all filters and aggregations returned values.\n You may override this behavior in a specific filter by providing\n timestamps including time zone. e.g. `\"2023-12-20T10:52:34.795Z\"`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorSearch_PagingMethod",
      "displayName": "Paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cursorPaging",
        "type": "All APIs.Accounts._wix_common_CursorPaging",
        "doc": " Cursor pointing to page of results.\n When requesting 'cursor_paging.cursor', no `filter`, `sort` or `search` can be provided.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_SearchDetails",
      "displayName": "Search Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "mode",
          "type": "All APIs.Accounts._wix_common_SearchDetails_Mode",
          "doc": " Defines how separate search terms in `expression` are combined\n"
        },
                {
          "name": "expression",
          "type": "string",
          "doc": " Search term or expression\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Fields to search in. If empty - will search in all searchable fields. Use dot notation to specify json path\n"
        },
                {
          "name": "fuzzy",
          "type": "boolean",
          "doc": " Flag if should use auto fuzzy search (allowing typos by a managed proximity algorithm)\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_RangeAggregation_RangeBucket",
      "displayName": "Range Bucket Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "from",
          "type": "number",
          "doc": " Inclusive lower bound of the range. Required if to is not given\n"
        },
                {
          "name": "to",
          "type": "number",
          "doc": " Exclusive upper bound of the range. Required if from is not given\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_RangeAggregation",
      "displayName": "Range Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "buckets",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Accounts._wix_common_Aggregation_RangeAggregation_RangeBucket"]
        },
        "doc": " List of range buckets, where during aggregation each entity will be placed in the first bucket where its value falls into based on provided range bounds\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation_IncludeMissingValuesOptions",
      "displayName": "Include Missing Values Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "addToBucket",
        "type": "string",
        "doc": " Can specify custom bucket name. Defaults are [string -> \"N/A\"], [int -> \"0\"], [bool -> \"false\"] ...\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation",
      "displayName": "Value Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sortType",
          "type": "All APIs.Accounts._wix_common_Aggregation_ValueAggregation_SortType",
          "doc": " Should sort by number of matches or value of the field\n"
        },
                {
          "name": "sortDirection",
          "type": "All APIs.Accounts._wix_common_Aggregation_ValueAggregation_SortDirection",
          "doc": " Should sort in ascending or descending order\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " How many aggregations would you like to return? Can be between 1 and 250. 10 is the default.\n"
        },
                {
          "name": "missingValues",
          "type": "All APIs.Accounts._wix_common_Aggregation_ValueAggregation_MissingValues",
          "doc": " Should missing values be included or excluded from the aggregation results. Default is EXCLUDE\n"
        },
                {
          "name": "options",
          "type": "All APIs.Accounts._wix_common_Aggregation_ValueAggregation_options",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation_options",
      "displayName": "options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "includeOptions",
        "type": "All APIs.Accounts._wix_common_Aggregation_ValueAggregation_IncludeMissingValuesOptions",
        "doc": " Options for including missing values\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Aggregation_ScalarAggregation",
      "displayName": "Scalar Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "type",
        "type": "All APIs.Accounts._wix_common_ScalarType",
        "doc": " Define the operator for the scalar aggregation\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_GroupByAggregation",
      "displayName": "Group By Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " User-defined name of aggregation, should be unique, will appear in aggregation results\n"
        },
                {
          "name": "fieldPath",
          "type": "string",
          "doc": " Field to aggregate by\n"
        },
                {
          "name": "kind",
          "type": "All APIs.Accounts._wix_common_Aggregation_GroupByAggregation_kind",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_GroupByAggregation_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "value",
        "type": "All APIs.Accounts._wix_common_Aggregation_ValueAggregation",
        "doc": " Value aggregation configuration\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Aggregation_NestedAggregation_NestedAggregationItem",
      "displayName": "Nested Aggregation Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " User-defined name of aggregation, should be unique, will appear in aggregation results\n"
        },
                {
          "name": "type",
          "type": "All APIs.Accounts._wix_common_Aggregation_NestedAggregation_NestedAggregationType",
          "doc": " Type of aggregation, client must provide matching aggregation field below\n"
        },
                {
          "name": "fieldPath",
          "type": "string",
          "doc": " Field to aggregate by, use dont notation to specify json path\n"
        },
                {
          "name": "kind",
          "type": "All APIs.Accounts._wix_common_Aggregation_NestedAggregation_NestedAggregationItem_kind",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_NestedAggregation_NestedAggregationItem_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "All APIs.Accounts._wix_common_Aggregation_ValueAggregation",
          "doc": " Value aggregation\n"
        },
                {
          "name": "range",
          "type": "All APIs.Accounts._wix_common_Aggregation_RangeAggregation",
          "doc": " Range aggregation\n"
        },
                {
          "name": "scalar",
          "type": "All APIs.Accounts._wix_common_Aggregation_ScalarAggregation",
          "doc": " Scalar aggregation\n"
        },
                {
          "name": "dateHistogram",
          "type": "All APIs.Accounts._wix_common_Aggregation_DateHistogramAggregation",
          "doc": " Date histogram aggregation\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Aggregation_NestedAggregation",
      "displayName": "Nested Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": " Nested aggregation expressed through a list of aggregation where each next aggregation is nested within previous one\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "nestedAggregations",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Accounts._wix_common_Aggregation_NestedAggregation_NestedAggregationItem"]
        },
        "doc": " Flattened list of aggregations, where each next aggregation is nested within previous one\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_DateHistogramAggregation",
      "displayName": "Date Histogram Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "interval",
        "type": "All APIs.Accounts._wix_common_Aggregation_DateHistogramAggregation_Interval",
        "doc": " Interval for date histogram aggregation\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation",
      "displayName": "Aggregation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " User-defined name of aggregation, should be unique, will appear in aggregation results\n"
        },
                {
          "name": "type",
          "type": "All APIs.Accounts._wix_common_AggregationType",
          "doc": " Type of aggregation, client must provide matching aggregation field below\n"
        },
                {
          "name": "fieldPath",
          "type": "string",
          "doc": " Field to aggregate by, use dot notation to specify json path\n"
        },
                {
          "name": "kind",
          "type": "All APIs.Accounts._wix_common_Aggregation_kind",
          "doc": ""
        },
                {
          "name": "groupBy",
          "type": "All APIs.Accounts._wix_common_Aggregation_GroupByAggregation",
          "doc": " deprecated, use `nested` instead\n",
          "deprecated": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "All APIs.Accounts._wix_common_Aggregation_ValueAggregation",
          "doc": " Value aggregation\n"
        },
                {
          "name": "range",
          "type": "All APIs.Accounts._wix_common_Aggregation_RangeAggregation",
          "doc": " Range aggregation\n"
        },
                {
          "name": "scalar",
          "type": "All APIs.Accounts._wix_common_Aggregation_ScalarAggregation",
          "doc": " Scalar aggregation\n"
        },
                {
          "name": "dateHistogram",
          "type": "All APIs.Accounts._wix_common_Aggregation_DateHistogramAggregation",
          "doc": " Date histogram aggregation\n"
        },
                {
          "name": "nested",
          "type": "All APIs.Accounts._wix_common_Aggregation_NestedAggregation",
          "doc": " Nested aggregation\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_ValueResults_ValueAggregationResult",
      "displayName": "Value Aggregation Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Value of the field\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Count of entities with this value\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_ValueResults",
      "displayName": "Value Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Accounts._wix_common_AggregationData_AggregationResults_ValueResults_ValueAggregationResult"]
        },
        "doc": " List of value aggregations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_RangeResults_RangeAggregationResult",
      "displayName": "Range Aggregation Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "from",
          "type": "number",
          "doc": " Inclusive lower bound of the range\n"
        },
                {
          "name": "to",
          "type": "number",
          "doc": " Exclusive upper bound of the range\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Count of entities in this range\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_RangeResults",
      "displayName": "Range Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Accounts._wix_common_AggregationData_AggregationResults_RangeResults_RangeAggregationResult"]
        },
        "doc": " List of ranges returned in same order as requested\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_ScalarResult",
      "displayName": "Scalar Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Accounts._wix_common_ScalarType",
          "doc": " Type of scalar aggregation\n"
        },
                {
          "name": "value",
          "type": "number",
          "doc": " Value of the scalar aggregation\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_GroupByValueResults_NestedValueAggregationResult",
      "displayName": "Nested Value Aggregation Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Value of the field\n"
        },
                {
          "name": "nestedResults",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_NestedAggregationResults",
          "doc": " Nested aggregations\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_GroupByValueResults",
      "displayName": "Group By Value Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Accounts._wix_common_AggregationData_AggregationResults_GroupByValueResults_NestedValueAggregationResult"]
        },
        "doc": " List of value aggregations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedAggregationResults",
      "displayName": "Nested Aggregation Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " User-defined name of aggregation, matches the one provided in request\n"
        },
                {
          "name": "type",
          "type": "All APIs.Accounts._wix_common_AggregationType",
          "doc": " Type of aggregation that matches result\n"
        },
                {
          "name": "fieldPath",
          "type": "string",
          "doc": " Field to aggregate by, matches the one provided in request\n"
        },
                {
          "name": "result",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_NestedAggregationResults_result",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedAggregationResults_result",
      "displayName": "result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "values",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_ValueResults",
          "doc": " Value aggregation results\n"
        },
                {
          "name": "ranges",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_RangeResults",
          "doc": " Range aggregation results\n"
        },
                {
          "name": "scalar",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_ScalarResult",
          "doc": " Scalar aggregation results\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_ValueResult",
      "displayName": "Value Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Value of the field\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Count of entities with this value\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_RangeResult",
      "displayName": "Range Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "from",
          "type": "number",
          "doc": " Inclusive lower bound of the range\n"
        },
                {
          "name": "to",
          "type": "number",
          "doc": " Exclusive upper bound of the range\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Count of entities in this range\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_ScalarResult",
      "displayName": "Scalar Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "value",
        "type": "number",
        "doc": " Value of the scalar aggregation\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_NestedResultValue",
      "displayName": "Nested Result Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "result",
        "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_NestedResults_NestedResultValue_result",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_NestedResultValue_result",
      "displayName": "result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_NestedResults_ValueResult",
          "doc": " Value aggregation result\n"
        },
                {
          "name": "range",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_NestedResults_RangeResult",
          "doc": " Range aggregation result\n"
        },
                {
          "name": "scalar",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_NestedResults_ScalarResult",
          "doc": " Scalar aggregation result\n"
        },
                {
          "name": "dateHistogram",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_NestedResults_ValueResult",
          "doc": " Date histogram aggregation result\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "resultsMapEntry",
      "displayName": "results Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. List of nested aggregations\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_NestedResults_NestedResultValue",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults_Results",
      "displayName": "Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type": "All APIs.Accounts.resultsMapEntry",
        "doc": "Set of key-value pairs. List of nested aggregations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_NestedResults",
      "displayName": "Nested Results Object",
      "locations": [],
      "docs":       {
        "summary": " Results of `NESTED` aggregation type in a flattened form\n aggregations in resulting array are keyed by requested aggregation `name`.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Accounts._wix_common_AggregationData_AggregationResults_NestedResults_Results"]
        },
        "doc": " List of nested aggregations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_DateHistogramResults_DateHistogramResult",
      "displayName": "Date Histogram Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Date in ISO 8601 format\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Count of documents in the bucket\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_DateHistogramResults",
      "displayName": "Date Histogram Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Accounts._wix_common_AggregationData_AggregationResults_DateHistogramResults_DateHistogramResult"]
        },
        "doc": " List of date histogram aggregations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults",
      "displayName": "Aggregation Results Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " User-defined name of aggregation as derived from search request\n"
        },
                {
          "name": "type",
          "type": "All APIs.Accounts._wix_common_AggregationType",
          "doc": " Type of aggregation that must match provided kind as derived from search request\n"
        },
                {
          "name": "fieldPath",
          "type": "string",
          "doc": " Field to aggregate by as derived from search request\n"
        },
                {
          "name": "result",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_result",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationData_AggregationResults_result",
      "displayName": "result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "values",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_ValueResults",
          "doc": " Value aggregation results\n"
        },
                {
          "name": "ranges",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_RangeResults",
          "doc": " Range aggregation results\n"
        },
                {
          "name": "scalar",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_ScalarResult",
          "doc": " Scalar aggregation results\n"
        },
                {
          "name": "groupedByValue",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_GroupByValueResults",
          "doc": " Group by value aggregation results\n"
        },
                {
          "name": "dateHistogram",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_DateHistogramResults",
          "doc": " Date histogram aggregation results\n"
        },
                {
          "name": "nested",
          "type": "All APIs.Accounts._wix_common_AggregationData_AggregationResults_NestedResults",
          "doc": " Nested aggregation results\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_AggregationData",
      "displayName": "Aggregation Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Accounts._wix_common_AggregationData_AggregationResults"]
        },
        "doc": " key = aggregation name (as derived from search request)\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deletedEntityAsJson",
        "type": "string",
        "doc": " Entity that was deleted\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Unique event ID.\n Allows clients to ignore duplicate webhooks.\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " ID of the entity associated with the event.\n"
        },
                {
          "name": "body",
          "type": "All APIs.Accounts._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " Event timestamp.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether the event was triggered as a result of a privacy regulation application\n (for example, GDPR).\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        },
                {
          "name": "entityEventSequence",
          "type": "string",
          "doc": " A sequence number defining the order of updates to the underlying entity.\n For example, given that some entity was updated at 16:00 and than again at 16:01,\n  it is guaranteed that the sequence number of the second update is strictly higher than the first.\n As the consumer, you can use this value to ensure that you handle messages in the correct order.\n To do so, you will need to persist this number on your end, and compare the sequence number from the\n  message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Accounts._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Accounts._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Accounts._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Accounts._wix_common_domainevents_ActionEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_account_Transaction",
      "displayName": "Transaction Object",
      "locations": [],
      "docs":       {
        "summary": " Loyalty transaction.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Transaction ID.\n",
          "readOnly": true
        },
                {
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n",
          "readOnly": true
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Account owner's contact ID. See the Contacts API to [learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object).\n",
          "readOnly": true
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Account owner's member ID. See the Members API to [learn more about a site's members](https://dev.wix.com/api/rest/members/members/member-object).\n",
          "readOnly": true
        },
                {
          "name": "amount",
          "type": "integer",
          "doc": " Points earned, adjusted, or redeemed in the latest transaction.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_TransactionType",
          "doc": ""
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Transaction description. Only present for automated transactions of `type` `\"EARN\"` or `\"REDEEM\"`, when set by the site owner in the dashboard.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time of the transaction.\n",
          "readOnly": true
        },
                {
          "name": "appId",
          "type": "string",
          "doc": " ID of the app that initiated the transaction.\n\nOnly present if `type` is `\"ADJUST`, `\"EARN\"`, or `\"GIVE\"`.\n\nIf points were earned or adjusted manually, then the `appId` is the Loyalty app's\n`wixAppId` of `553c79f3-5625-4f38-b14b-ef7c0d1e87df`. If points were earned or adjusted in an automatic event,\nthen the `appId` is from that automation's `sourceAppId`.\n",
          "readOnly": true
        },
                {
          "name": "idempotencyKey",
          "type": "string",
          "doc": " Unique string identifier generated by the app. Wix uses this identifier to recognize subsequent retries of the same request.\n\nOnly present if points were added manually using the [Earn Points endpoint](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/earn-points).\n",
          "readOnly": true
        },
                {
          "name": "redeemInfo",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_RedeemInfo",
          "doc": " Additional redeem information. Only present if `type` is `\"REDEEM\"`.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_api_ApplicationError",
      "displayName": "Application Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Error code.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the error.\n"
        },
                {
          "name": "data",
          "type": "struct",
          "doc": " Data related to the error.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_BulkActionMetadata",
      "displayName": "Bulk Action Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "totalSuccesses",
          "type": "integer",
          "doc": " Number of items that were successfully processed.\n"
        },
                {
          "name": "totalFailures",
          "type": "integer",
          "doc": " Number of items that couldn't be processed.\n"
        },
                {
          "name": "undetailedFailures",
          "type": "integer",
          "doc": " Number of failures without details because detailed failure threshold was exceeded.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_ItemMetadata",
      "displayName": "Item Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Item ID. Should always be available, unless it's impossible (for example, when failing to create an item).\n"
        },
                {
          "name": "originalIndex",
          "type": "integer",
          "doc": " Index of the item within the request array. Allows for correlation between request and response items.\n"
        },
                {
          "name": "success",
          "type": "boolean",
          "doc": " Whether the requested action was successful for this item. When `false`, the `error` field is populated.\n"
        },
                {
          "name": "error",
          "type": "All APIs.Accounts._wix_api_ApplicationError",
          "doc": " Details about the error in case of failure.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n",
          "readOnly": true
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n",
          "readOnly": true
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Image filename.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_tier_TiersProgramSettings",
      "displayName": "Tiers Program Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "status",
          "type": "All APIs.Accounts._com_wixpress_loyalty_tier_StatusEnum_Status",
          "doc": " Tiers program status.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": "\nRevision number, which increments by `\"1\"` each time the loyalty tiers settings are updated.  \n\nTo prevent conflicting changes, the current `revision` must be passed when updating the loyalty tiers settings.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the loyalty tiers program was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the loyalty tiers program was last updated.\n",
          "readOnly": true
        },
                {
          "name": "baseTierDefinition",
          "type": "All APIs.Accounts._com_wixpress_loyalty_tier_TierDefinition",
          "doc": "\nInformation about the base loyalty tier.  \n\nThe base tier is the default tier for any account that is unassigned for not meeting \nthe required points threshold of any other tier.\n"
        },
                {
          "name": "period",
          "type": "All APIs.Accounts._com_wixpress_loyalty_tier_TiersProgramSettings_period",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_tier_TiersProgramSettings_period",
      "displayName": "period Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rollingWindow",
        "type": "All APIs.Accounts._com_wixpress_loyalty_tier_RollingWindow",
        "doc": " \n*Required.** Period of time used to calculate loyalty points for tier assignment.  \n\nThe loyalty points accumulated during this period determine if the account meets a tier's required point threshold.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_tier_TierDefinition",
      "displayName": "Tier Definition Object",
      "locations": [],
      "docs":       {
        "summary": " Information about the tier.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "icon",
          "type": "All APIs.Accounts._wix_common_Image",
          "doc": " Details about the tier icon.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": "\nTier name.  \n\nMin: 2 characters  \n\nMax: 50 characters\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " \nTier desciption.  \n\nMax: 70 characters\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_tier_RollingWindow",
      "displayName": "Rolling Window Object",
      "locations": [],
      "docs":       {
        "summary": " \n*Required.** Period of time used to calculate loyalty points for tier assignment.  \n\nThe loyalty points accumulated during this period determine if the account meets a tier's required point threshold.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "durationInMonths",
        "type": "integer",
        "doc": " \nNumber of months to use for the rolling window period.  \n\nMin: `\"12\"`  \n\nMax: `\"36\"`\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_tier_TiersRollingUpdate",
      "displayName": "Tiers Rolling Update Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_tier_TiersProgramSettingsChanged",
      "displayName": "Tiers Program Settings Changed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "programSettings",
        "type": "All APIs.Accounts._com_wixpress_loyalty_tier_TiersProgramSettings",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_billing_api_v1_Interval",
      "displayName": "Interval Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "unit",
          "type": "All APIs.Accounts._com_wixpress_billing_api_v1_Interval_IntervalUnit",
          "doc": " interval unit of measure\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " number of interval\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_billing_api_v1_OneTime",
      "displayName": "One Time Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_billing_api_v1_Cycle",
      "displayName": "Cycle Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cycleSelector",
        "type": "All APIs.Accounts._com_wixpress_billing_api_v1_Cycle_CycleSelector",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_billing_api_v1_Cycle_CycleSelector",
      "displayName": "Cycle Selector Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "interval",
          "type": "All APIs.Accounts._com_wixpress_billing_api_v1_Interval",
          "doc": " repetitive interval\n"
        },
                {
          "name": "oneTime",
          "type": "All APIs.Accounts._com_wixpress_billing_api_v1_OneTime",
          "doc": " one time\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_BillingReference",
      "displayName": "Billing Reference Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "providerName",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_BillingReference_ProviderName",
          "doc": "\nName of the billing system that manages the subscription.\n\n+ `\"UNKNOWN\"`: Default value.\n+ `\"SBS\"`: [Wix Billing](https://github.com/wix-p/premium-billing/tree/master/sbs).\n+ `\"LICENSER\"`:\n+ `\"BASS\"`: [Billing and Subscriptions System](https://dev.wix.com/docs/rest/internal-only/premium/subscriptions-by-billing-by-wix/introduction).\n+ `\"RESELLER\"`: [External Reseller](https://dev.wix.com/api/rest/account-level-apis/resellers/introduction).\n"
        },
                {
          "name": "providerReferenceId",
          "type": "string",
          "doc": "\nCurrent provider reference ID.\n"
        },
                {
          "name": "previousProviderReferenceIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "\nPrevious provider reference IDs. Used for when a subscription is extended, specifically for domains.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "metadataMapEntry",
      "displayName": "metadata Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.\nCustom metadata about the subscription.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
      "displayName": "Subscription Object",
      "locations": [],
      "docs":       {
        "summary": "\nA subscription holds information about a Premium product that a Wix account\nowner has purchased including details about the billing.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "\nID of the subscription.\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": "\nID of the Wix account that purchased the subscription.\n"
        },
                {
          "name": "productId",
          "type": "string",
          "doc": "\nID of the [product](https://bo.wix.com/wix-docs/rest/premium/premium-product-catalog-v2/products/product-object)\nfor which the subscription was purchased.\n"
        },
                {
          "name": "createdAt",
          "type": "string",
          "doc": "\nDate and time the subscription was created in\n[UTC datetime](https://en.wikipedia.org/wiki/Coordinated_Universal_Time)\n`YYYY-MM-DDThh:mm:ss.sssZ` format.\n"
        },
                {
          "name": "updatedAt",
          "type": "string",
          "doc": "\nDate and time the subscription was last updated in\n[UTC datetime](https://en.wikipedia.org/wiki/Coordinated_Universal_Time)\n`YYYY-MM-DDThh:mm:ss.sssZ` format.\n"
        },
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": "\nID of the metasite that the subscription is assigned to.\nAvailable only when the subscription is assigned to a Wix site.\nSubscriptions for account level products can't be assigned to a Wix site.\n"
        },
                {
          "name": "billingReference",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_BillingReference",
          "doc": "\nInformation about the system that manages the subscription's billing.\n"
        },
                {
          "name": "cycle",
          "type": "All APIs.Accounts._com_wixpress_billing_api_v1_Cycle",
          "doc": "\nInformation about the billing cycle of the subscription.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionStatusEnum_SubscriptionStatus",
          "doc": "\nSubscription status.\n\n+ `UNKNOWN`: Default status.\n+ `AUTO_RENEW_ON`: Subscription is active and automatically renews at the end of the current billing cycle.\n+ `AUTO_RENEW_OFF`: Subscription is active but expires at the end of the current billing cycle.\n+ `MANUAL_RECURRING`: Subscription is active and renews at the end of the current billing cycle, in case the customer takes an action related to the payment.\n+ `CANCELLED`: Subscription isn't active because it has been canceled.\n+ `TRANSFERRED`: Subscription isn't active because it has been transferred to a different account. A different active subscription was created for the target account.\n"
        },
                {
          "name": "transferredAt",
          "type": "string",
          "doc": "\nDate and time the subscription was last transferred from one Wix account to\nanother in\n[UTC datetime](https://en.wikipedia.org/wiki/Coordinated_Universal_Time)\n`YYYY-MM-DDThh:mm:ss.sssZ` format.\n"
        },
                {
          "name": "productTypeId",
          "type": "string",
          "doc": "\nID of the [product type](https://bo.wix.com/wix-docs/rest/premium/premium-product-catalog-v2/product-types/product-type-object)\nthat the product, for which the subscription was purchased, belongs to.\n"
        },
                {
          "name": "version",
          "type": "integer",
          "doc": "\nVersion number, which increments by 1 each time the subscription is updated.\n"
        },
                {
          "name": "active",
          "type": "boolean",
          "doc": "\nWhether the subscription is active. Includes the statuses\n`\"AUTO_RENEW_ON\"`, `\"AUTO_RENEW_OFF\"`, and `\"MANUAL_RECURRING\"`.\n"
        },
                {
          "name": "originalCreationDate",
          "type": "string",
          "doc": "\nDate and time the subscription was originally created in\n[UTC datetime](https://en.wikipedia.org/wiki/Coordinated_Universal_Time)\n`YYYY-MM-DDThh:mm:ss.sssZ` format.\nDiffers from `createdAt` in case the subscription was originally created for a different Wix account and has been transferred.\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Accounts.metadataMapEntry",
          "doc": "Set of key-value pairs.\nCustom metadata about the subscription.\n"
        },
                {
          "name": "countryCode",
          "type": "string",
          "doc": "\n2-letter country code in\n[ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements)\nformat.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "metadataMapEntry",
      "displayName": "metadata Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.\nMetadata for the `created` event.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionCreated",
      "displayName": "Subscription Created Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when a subscription is created.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subscription",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
          "doc": "\nCreated subscription.\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Accounts.metadataMapEntry",
          "doc": "Set of key-value pairs.\nMetadata for the `created` event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionCancelled",
      "displayName": "Subscription Cancelled Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when a subscription is canceled.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subscription",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
          "doc": "\nCanceled subscription.\n"
        },
                {
          "name": "cancellationDetails",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_CancellationDetails",
          "doc": "\nDetails about the cancellation including who canceled the subscription and why.\n"
        },
                {
          "name": "immediateCancel",
          "type": "boolean",
          "doc": "\nWhether the subscription is canceled immediately or expires at the end of the current billing cycle.\n\nDefault: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionAutoRenewTurnedOn",
      "displayName": "Subscription Auto Renew Turned On Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when the subscription's auto renew is turned on.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subscription",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
          "doc": "\nSubscription for which auto renew is turned on.\n"
        },
                {
          "name": "initiator",
          "type": "string",
          "doc": "\nSupported values: `USER`, `APP`.\n\nInformation about who turned auto renew on. \n+ `\"USER\"`: The site owner who purchased the subscription has turned auto renew on.\n+ `\"APP\"`: The service provider has turned auto renew on.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionAutoRenewTurnedOff",
      "displayName": "Subscription Auto Renew Turned Off Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when the subscription's auto renew is turned off.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subscription",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
          "doc": "\nSubscription for which auto renew is turned off.\n"
        },
                {
          "name": "cancellationDetails",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_CancellationDetails",
          "doc": "\nDetails about the cancellation including who canceled the subscription and why.\n"
        },
                {
          "name": "immediateCancel",
          "type": "boolean",
          "doc": "\nWhether the subscription is immediately canceled or expires at the end of the current billing cycle.\n\nDefault: `false`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_CancellationDetails",
      "displayName": "Cancellation Details Object",
      "locations": [],
      "docs":       {
        "summary": "\nInformation about the cancellation flow including who canceled the subscription and why it was canceled.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "cancellationCode",
          "type": "integer",
          "doc": "    \nCancellation code. \n\nValues supported for cancellations on behalf of the billing system: `-1`, `-2`, `-3`, `-4`, `-5`, `-6`, `-7`, `-8`.  \nFor cancellations on behalf of the site owner or the service provider `cancellationCode`\nis taken from the request of\n[Cancel Immediately Offline](https://bo.wix.com/wix-docs/rest/premium/premium-subscriptions-manager/cancel-immediately-offline).\n\n+ `-1`: The subscription has been cancelled by the billing system but none of the listed cancellation reasons applies.\n+ `-2`: There were payment problems.\n+ `-3`: There was a chargeback.\n+ `-4`: Customer support has canceled the subscription and issued a refund.\n+ `-5`: The site owner has changed their existing subscription.\n+ `-6`: The subscription has been transferred to a different Wix account.\n+ `-7`: The subscription has been canceled because the site owner hasn't manually authenticated the recurring payment during the subscription's grace period. For example, site owners must manually confirm recurring payments within 40 days when paying with boleto.\n+ `-8`: The Wix account that the subscription belonged to has been deleted.\n"
        },
                {
          "name": "cancellationReason",
          "type": "string",
          "doc": "\nCancellation reason. For cancellations on behalf of the site owner or the service provider `cancellationReason`\nis taken from the request of\n[Cancel Immediately Offline](https://bo.wix.com/wix-docs/rest/premium/premium-subscriptions-manager/cancel-immediately-offline).\nFor cancellations on behalf of the billing system `cancellationReason` is `null` or an empty string.\n"
        },
                {
          "name": "initiator",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_CancellationInitiatorEnum_Initiator",
          "doc": "\nInitiator of the cancellation. For `\"USER_REQUESTED\"` and `\"APP_MANAGED\"`,\n`cancellationCode` and `cancellationReason` are taken from the request of\n[Cancel Immediately](https://bo.wix.com/wix-docs/rest/premium/premium-subscriptions-manager/cancel-immediately)\nor [Cancel Immediately Offline](https://bo.wix.com/wix-docs/rest/premium/premium-subscriptions-manager/cancel-immediately-offline).\nFor `\"PASSIVE\"`, cancellations `cancellationCode` is automatically calculated and `cancellationReason` \nis `null` or an empty string.\n\n+ `\"UNKNOWN`: Default value.\n+ `\"USER_REQUESTED\"`:  The Wix account owner has canceled the subscription.\n+ `\"APP_MANAGED\"`: The service provider has canceled the subscription.\n+ `\"PASSIVE\"`: The billing system has canceled the subscription. For example, in case of payment failure or fraud.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionAssigned",
      "displayName": "Subscription Assigned Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when a subscription is assigned to a Wix site, including the initial\nassignment of a floating subscription or a re-assignement from a different site.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subscription",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
          "doc": "\nAssigned subscription.\n"
        },
                {
          "name": "previousMetaSiteId",
          "type": "string",
          "doc": "\nID of the metasite that the subscription has been assigned to before the update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionUnassigned",
      "displayName": "Subscription Unassigned Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when a subscription is unassigned from a Wix site and becomes\nfloating.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subscription",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
          "doc": "\nUnassigned subscription.\n"
        },
                {
          "name": "previousMetaSiteId",
          "type": "string",
          "doc": "\nID of the metasite that the subscription has been assigned to before the event.\n"
        },
                {
          "name": "unassignReason",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionUnassigned_UnassignReason",
          "doc": "\nReason why the subscription is unassigned.\n\n+ `\"UNKNOWN\"`: Default value.\n+ `\"USER_REQUESTED\"`: The Wix account owner has unassigned the subscription.\n+ `\"REPLACED_BY_ANOTHER_SUBSCRIPTION\"`: A different subscription that replaces this subscription is assigned to the site.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionTransferred",
      "displayName": "Subscription Transferred Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when a subscription is transferred from one Wix account to another.\nA transfer includes cancelling the original subscription and creating a new\nsubscription for the target account. The event returns both the original\nand the new subscription.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "originSubscription",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
          "doc": "\nOriginal subscription that was canceled for the transfer.\n"
        },
                {
          "name": "targetSubscription",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
          "doc": "\nNewly created subscription for the target account.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_RecurringChargeSucceeded",
      "displayName": "Recurring Charge Succeeded Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when a recurring charge succeeds for a subscription.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "subscription",
        "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
        "doc": "\nSubscription for which the recurring charge has succeeded.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionNearEndOfPeriod",
      "displayName": "Subscription Near End Of Period Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when a subscription gets close to the end of its billing cycle.\nThe exact number of days is defined in the billing system.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "subscription",
        "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
        "doc": "\nSubscription that got close to the end of its billing cycle.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_ContractSwitched",
      "displayName": "Contract Switched Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when a subscription was updated including when its product has been\nup- or downgraded or the billing cycle is changed.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subscription",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
          "doc": "\nUpdated subscription.\n"
        },
                {
          "name": "previousCycle",
          "type": "All APIs.Accounts._com_wixpress_billing_api_v1_Cycle",
          "doc": "\nBilling cycle before the update.\n"
        },
                {
          "name": "previousProductId",
          "type": "string",
          "doc": "\nID of the product belonging to the subscription before the update.\n"
        },
                {
          "name": "previousProductTypeId",
          "type": "string",
          "doc": "\nID of the product type that the subscription's original product belonged to before the update.\n"
        },
                {
          "name": "contractSwitchType",
          "type": "All APIs.Accounts._com_wixpress_premium_billingnotifications_api_v1_ContractSwitchType",
          "doc": "\nUpdate type. __Note__: Doesn't include information about a product adjustment.\nFor that purpose, see `productAdjustment`.\n\n+ `\"NOT_APPLICABLE\"`: Default value.\n+ `\"ADDITIONAL_QUANTITY\"`: An increased usage quota is added to the subscription. For example, a second mailbox is added to a subscription that previously included a single mailbox.\n+ `\"CREDIT_UNUSED_PERIOD\"`: The subscription is upgraded and the new price is less than the regular price. The new price applies to every billing cycle, not just the first cycle.\n+ `\"REFUND_PRICE_DIFF\"`: Not implemented.\n+ `\"ADJUST_PERIOD_END\"`: Not implemented.\n+ `\"DOWNGRADE_GRACE_PERIOD\"`: For downgrades during the grace period. In this situation, the site owner hasn’t paid yet and must immediately pay for the downgraded subscription.\n+ `\"FULL_AMOUNT_PERIOD\"`: For upgrades in which the site owner retains unused benefits. For example, site owners upgrading a Facebook Ads subscription retain their unused FB Ads credit. The unused credit is added to the new credit.\n+ `\"END_OF_PERIOD\"`: The subscription's billing current cycle is extended because of a downgrade.\n+ `\"PENDING_CHANGES\"`: The subscription's billing is updated, but the change doesn't apply immediately. Instead, the update becomes effective at the end of current billing cycle.\n+ `\"DOWNGRADE_RENEWAL\"`: The subscription is downgraded because of a declined payment. This prevents subscriptions from churning.\n\n"
        },
                {
          "name": "previousMetaSiteId",
          "type": "string",
          "doc": "\nID of the metasite the subscription has been assigned to previously.\nAvailable only in case the subscription is assigned to a different site.\n"
        },
                {
          "name": "contractSwitchReason",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_ContractSwitchReason_ContractSwitchReason",
          "doc": "\nUpdate reason.\n\n+ `\"PRICE_INCREASE\"`: The subscription's price has been increased.\n+ `\"EXTERNAL_PROVIDER_TRIGGER\"`: Any reason other than a price increase.\n"
        },
                {
          "name": "productPriceIncreaseData",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_ProductPriceIncreaseData",
          "doc": "\nInformation about the price update. Available only for updates with a price increase.\n"
        },
                {
          "name": "productAdjustment",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_ProductAdjustment",
          "doc": "\nInformation about a product adjustment. For example, a downgrade.\n__Note__: This isn't the same as `contractSwitchType`.\n\n+ `NOT_APPLICABLE`: There is no information about whether the product has been up- or downgraded.\n+ `DOWNGRADE`: The product has been downgraded.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_ProductPriceIncreaseData",
      "displayName": "Product Price Increase Data Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when a subscription's price is increased.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "previousPrice",
          "type": "string",
          "doc": "\nPrice of the subscription before the update.\n"
        },
                {
          "name": "emailTemplateSelector",
          "type": "string",
          "doc": "\nA value that is used in order to select the correct email template to send the user regarding the price increase.\n"
        },
                {
          "name": "segmentName",
          "type": "string",
          "doc": "\nUsed to differentiate between migration segments. Does not have to be unique per segment.\n"
        },
                {
          "name": "priceIncreaseTrigger",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_PriceIncreaseTrigger",
          "doc": "\nUsed to determine how the price increase was triggered.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionPendingChange",
      "displayName": "Subscription Pending Change Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when a subscription is updated and the change doesn't happen\nimmediately but at the end of the current billing cycle.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "subscription",
        "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_Subscription",
        "doc": "\nSubscription for which a pending update is triggered.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionEvent",
      "displayName": "Subscription Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": "\nID of the subscription's event.\n"
        },
                {
          "name": "eventDate",
          "type": "string",
          "doc": "\nDate and time of the event in\n[UTC datetime](https://en.wikipedia.org/wiki/Coordinated_Universal_Time)\n`YYYY-MM-DDThh:mm:ss.sssZ` format.\n"
        },
                {
          "name": "event",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionEvent_event",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionEvent_event",
      "displayName": "event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "created",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionCreated",
          "doc": "\nTriggered when a subscription is created.\n"
        },
                {
          "name": "assigned",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionAssigned",
          "doc": "\nTriggered when a subscription is assigned to a Wix site, including the initial\nassignment of a floating subscription or a re-assignement from a different site.\n"
        },
                {
          "name": "cancelled",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionCancelled",
          "doc": "\nTriggered when a subscription is canceled.\n"
        },
                {
          "name": "autoRenewTurnedOn",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionAutoRenewTurnedOn",
          "doc": "\nTriggered when the subscription's auto renew is turned on.\n"
        },
                {
          "name": "autoRenewTurnedOff",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionAutoRenewTurnedOff",
          "doc": "\nTriggered when the subscription's auto renew is turned off.\n"
        },
                {
          "name": "unassigned",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionUnassigned",
          "doc": "\nTriggered when a subscription is unassigned from a Wix site and becomes\nfloating.\n"
        },
                {
          "name": "transferred",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionTransferred",
          "doc": "\nTriggered when a subscription is transferred from one Wix account to another.\nA transfer includes cancelling the original subscription and creating a new\nsubscription for the target account. The event returns both the original\nand the new subscription.\n"
        },
                {
          "name": "recurringChargeSucceeded",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_RecurringChargeSucceeded",
          "doc": "\nTriggered when a recurring charge succeeds for a subscription.\n"
        },
                {
          "name": "contractSwitched",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_ContractSwitched",
          "doc": "\nTriggered when a subscription was updated including when its product has been\nup- or downgraded or the billing cycle is changed.\n"
        },
                {
          "name": "nearEndOfPeriod",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionNearEndOfPeriod",
          "doc": "\nTriggered when a subscription gets close to the end of its billing cycle.\nThe exact number of days is defined in the billing system.\n"
        },
                {
          "name": "pendingChange",
          "type": "All APIs.Accounts._com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionPendingChange",
          "doc": "\nTriggered when a subscription is updated and the change doesn't happen\nimmediately but at the end of the current billing cycle.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_account_ContactSyncRequest",
      "displayName": "Contact Sync Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "contactIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_CreateAccountRequest",
      "displayName": "Create Account Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "contactId",
        "type": "string",
        "doc": " Contact ID for a Wix site contact. See the Contacts API to\n[learn more about a site's contacts](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_CreateAccountResponse",
      "displayName": "Create Account Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_BulkUpsertAccountsRequest",
      "displayName": "Bulk Upsert Accounts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accounts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_AccountToUpsert"]
          },
          "doc": " List of contactIds + points to either insert as new loyalty accounts, or update if contacts already exist as loyalty accounts\n"
        },
                {
          "name": "returnAccounts",
          "type": "boolean",
          "doc": " If true, the upserted accounts are returned in response\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the action\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_BulkUpsertAccountsResponse",
      "displayName": "Bulk Upsert Accounts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "result",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_BulkAccountResult"]
          },
          "doc": " Loyalty accounts that were created or updated\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Accounts._wix_common_BulkActionMetadata",
          "doc": " Numbers of successes and failures\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_BulkAccountResult",
      "displayName": "Bulk Account Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "account",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
          "doc": " The created/updated account is returned if specified so in request message.\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Accounts._wix_common_ItemMetadata",
          "doc": " LoyaltyAccount metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AccountToUpsert",
      "displayName": "Account To Upsert Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "contactId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "pointsBalance",
          "type": "integer",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetAccountRequest",
      "displayName": "Get Account Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the account to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetAccountResponse",
      "displayName": "Get Account Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_SetMissingMemberIdRequest",
      "displayName": "Set Missing Member Id Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "accountId",
        "type": "string",
        "doc": " ID of the account to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_SetMissingMemberIdResponse",
      "displayName": "Set Missing Member Id Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListUserAccountsRequest",
      "displayName": "List User Accounts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load. Minimum `1`, maximum `50`.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListUserAccountsResponse",
      "displayName": "List User Accounts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "accounts",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccountForMetaSite"]
        },
        "doc": " Loyalty accounts.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_LoyaltyAccountForMetaSite",
      "displayName": "Loyalty Account For Meta Site Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "account",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
          "doc": " Loyalty account.\n"
        },
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": " Metasite ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetProgramTotalsRequest",
      "displayName": "Get Program Totals Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetProgramTotalsResponse",
      "displayName": "Get Program Totals Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "points",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_Points",
        "doc": " Point totals for the entire program.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetCurrentMemberAccountRequest",
      "displayName": "Get Current Member Account Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetCurrentMemberAccountResponse",
      "displayName": "Get Current Member Account Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetAccountBySecondaryIdRequest",
      "displayName": "Get Account By Secondary Id Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_GetAccountBySecondaryIdRequest_id",
        "doc": " ID of the account to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetAccountBySecondaryIdRequest_id",
      "displayName": "id Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "contactId",
          "type": "string",
          "doc": " Account owner's contact ID. See the [Contacts API](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object) to learn more.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Account owner's member ID. See the [Members API](https://dev.wix.com/api/rest/members/members/member-object) to learn more.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_account_GetAccountBySecondaryIdResponse",
      "displayName": "Get Account By Secondary Id Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListAccountsRequest",
      "displayName": "List Accounts Request Object",
      "locations": [],
      "docs":       {
        "summary": " Options to use when retrieving a list of loyalty accounts.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "contactIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of contact IDs. See the [Contacts API](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/contact-object) to learn more.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Accounts._wix_common_CursorPaging",
          "doc": " Pagination options.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListAccountsResponse",
      "displayName": "List Accounts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accounts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount"]
          },
          "doc": " Loyalty accounts.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Accounts._wix_common_PagingMetadataV2",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_EarnPointsRequest",
      "displayName": "Earn Points Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n"
        },
                {
          "name": "amount",
          "type": "integer",
          "doc": " Amount of points to earn. Must be a positive, whole number.\n\nMin: `1`\n\nMax: `9999999`\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of how the points were earned.\n\nMax: 100 characters\n"
        },
                {
          "name": "appId",
          "type": "string",
          "doc": " ID of the app that initiated the transaction.\n\nIf points were earned manually, then the `appId` is the Loyalty app's\n`wixAppId` of `553c79f3-5625-4f38-b14b-ef7c0d1e87df`. If points were earned in an automatic event,\nthen the `appId` is from that automation's `sourceAppId`.\n"
        },
                {
          "name": "idempotencyKey",
          "type": "string",
          "doc": " Unique string identifier generated by the app. Wix uses this identifier to recognize subsequent retries of the same request.\n"
        },
                {
          "name": "activityType",
          "type": "string",
          "doc": " Activity type\n\nIf points were earned through automation it should be set to trigger key.\n"
        },
                {
          "name": "orderId",
          "type": "string",
          "doc": " Order id which was source of this transaction.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_EarnPointsResponse",
      "displayName": "Earn Points Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Updated loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AdjustPointsRequest",
      "displayName": "Adjust Points Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description to explain the reason for the points adjustment.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Accounts._com_wixpress_loyalty_account_AdjustPointsRequest_type",
          "doc": " Type of the `Adjust Points` call.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Each time the loyalty account is updated, `revision` increments by 1.\n\nThe current `revision` must be passed when adjusting points in the loyalty account. This\nensures you're working with the latest version of the loyalty account and prevents unintended overwrites.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_AdjustPointsRequest_type",
      "displayName": "type Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "balance",
          "type": "integer",
          "doc": " Sets the account's point balance to this amount. Must be a positive, whole number or zero.\n\nThe net difference between this new balance and the previous balance will be reflected in the `adjusted` field of the customer's account.\n\nMin: `0`\n\nMax: `999999999`\n"
        },
                {
          "name": "amount",
          "type": "integer",
          "doc": " Adjusts the account's point balance by this amount. Must be a whole number with a maximum of 7 digits.\nThe amount can be negative, but cannot be `0`.\n\nMin: `-9999999`\n\nMax: `9999999`\n"
        },
                {
          "name": "refund",
          "type": "integer",
          "doc": " Adjusts the account's point balance by this amount. Also account's \"redeemed points\" is reduced by this amount.\nMust be a whole number with a maximum of 7 digits.\nThe amount can be negative, but cannot be `0`.\n\nMin: `-9999999`\n\nMax: `9999999`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_account_AdjustPointsResponse",
      "displayName": "Adjust Points Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RedeemPointsRequest",
      "displayName": "Redeem Points Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n"
        },
                {
          "name": "rewardId",
          "type": "string",
          "doc": " Reward ID. See [Rewards API](https://dev.wix.com/api/rest/loyalty/rewards/rewards-object) for more details.\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of times the given reward will be redeemed. Must be a positive whole number.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by 1 each time points are redeemed.\nTo prevent conflicting changes, the existing `revision` must be used when redeeming points.\n"
        },
                {
          "name": "referenceEntityId",
          "type": "string",
          "doc": " Id of the entity that is being redeemed (e.g. orderId for order discount, couponId for coupon reward).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RedeemPointsResponse",
      "displayName": "Redeem Points Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RedeemDeterminedAmountOfPointsRequest",
      "displayName": "Redeem Determined Amount Of Points Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n"
        },
                {
          "name": "rewardId",
          "type": "string",
          "doc": " Reward ID. See [Rewards API](https://dev.wix.com/api/rest/loyalty/rewards/rewards-object) for more details.\n"
        },
                {
          "name": "points",
          "type": "integer",
          "doc": " Number of points to be redeemed off the account.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by 1 each time points are redeemed.\nTo prevent conflicting changes, the existing `revision` must be used when redeeming points.\n"
        },
                {
          "name": "referenceEntityId",
          "type": "string",
          "doc": " Id of the entity that is being redeemed (e.g. orderId for order discount, couponId for coupon reward).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RedeemDeterminedAmountOfPointsResponse",
      "displayName": "Redeem Determined Amount Of Points Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount",
        "doc": " Loyalty account.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetTransactionRequest",
      "displayName": "Get Transaction Request Object",
      "locations": [],
      "docs":       {
        "summary": " Retrieves a transaction.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " Transaction ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_GetTransactionResponse",
      "displayName": "Get Transaction Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "transaction",
        "type": "All APIs.Accounts._com_wixpress_loyalty_account_Transaction",
        "doc": " Retrieved transaction.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListTransactionsRequest",
      "displayName": "List Transactions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Loyalty account ID.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Accounts._wix_common_CursorPaging",
          "doc": " Pagination options.\n"
        },
                {
          "name": "sort",
          "type": "All APIs.Accounts._wix_common_Sorting",
          "doc": " Sorting options.\n Only `createdDate` field is supported.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ListTransactionsResponse",
      "displayName": "List Transactions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "transactions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_Transaction"]
          },
          "doc": " Retrieved transactions.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Accounts._wix_common_PagingMetadataV2",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_SearchAccountsRequest",
      "displayName": "Search Accounts Request Object",
      "locations": [],
      "docs":       {
        "summary": " Options to use when search for loyalty accounts.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "search",
        "type": "All APIs.Accounts._wix_common_CursorSearch",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_SearchAccountsResponse",
      "displayName": "Search Accounts Response Object",
      "locations": [],
      "docs":       {
        "summary": " Accounts found through provided search capabilities, along with paging and aggregation data of the results.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accounts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount"]
          },
          "doc": ""
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Accounts._wix_common_CursorPagingMetadata",
          "doc": ""
        },
                {
          "name": "aggregationData",
          "type": "All APIs.Accounts._wix_common_AggregationData",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ExportAccountsRequest",
      "displayName": "Export Accounts Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Accounts._wix_common_QueryV2",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_ExportAccountsResponse",
      "displayName": "Export Accounts Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accounts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Accounts._com_wixpress_loyalty_account_LoyaltyAccount"]
          },
          "doc": ""
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Accounts._wix_common_CursorPagingMetadata",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_CountAccountsRequest",
      "displayName": "Count Accounts Request Object",
      "locations": [],
      "docs":       {
        "summary": " Options to use when looking up count of loyalty accounts.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": ""
        },
                {
          "name": "search",
          "type": "All APIs.Accounts._wix_common_SearchDetails",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_CountAccountsResponse",
      "displayName": "Count Accounts Response Object",
      "locations": [],
      "docs":       {
        "summary": " Count of accounts found for given search query\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "count",
        "type": "integer",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_TierTotal",
      "displayName": "Tier Total Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "If None, Account belongs to base Tier\n",
          "readOnly": true
        },
                {
          "name": "numberOfAccounts",
          "type": "integer",
          "doc": "Total number of loyalty accounts, that belongs to particular Tier\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_TransactionType",
      "displayName": "Transaction Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> EARN <\/code><\/li><li><code> REDEEM <\/code><\/li><li><code> ADJUST <\/code><\/li><li><code> GIVE <\/code><\/li><li><code> REFUND <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "EARN",
        "REDEEM",
        "ADJUST",
        "GIVE",
        "REFUND"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_account_RewardAvailabilityUpdated_UpdateTrigger",
      "displayName": "Update Trigger Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> REWARD_UPDATED <\/code><\/li><li><code> BALANCE_UPDATED <\/code><\/li><li><code> TIERS_RECALCULATED <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "REWARD_UPDATED",
        "BALANCE_UPDATED",
        "TIERS_RECALCULATED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AggregationType",
      "displayName": "Aggregation Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_AGGREGATION_TYPE <\/code><\/li><li><code> VALUE -  An aggregation where result buckets are dynamically built - one per unique value\n <\/code><\/li><li><code> RANGE -  An aggregation, where user can define set of ranges - each representing a bucket\n <\/code><\/li><li><code> SCALAR -  A single-value metric aggregation - e.g. min, max, sum, avg\n <\/code><\/li><li><code> DATE_HISTOGRAM -  An aggregation, where result buckets are dynamically built - one per time interval (hour, day, week, etc.)\n <\/code><\/li><li><code> NESTED -  Multi-level aggregation, where each next aggregation is nested within previous one\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_AGGREGATION_TYPE",
        "VALUE",
        "RANGE",
        "SCALAR",
        "DATE_HISTOGRAM",
        "NESTED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_ScalarType",
      "displayName": "Scalar Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SCALAR_TYPE <\/code><\/li><li><code> COUNT_DISTINCT -  Count of distinct values\n <\/code><\/li><li><code> MIN -  Minimum value\n <\/code><\/li><li><code> MAX -  Maximum value\n <\/code><\/li><li><code> SUM -  Sum of values\n <\/code><\/li><li><code> AVG -  Average of values\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SCALAR_TYPE",
        "COUNT_DISTINCT",
        "MIN",
        "MAX",
        "SUM",
        "AVG"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SearchDetails_Mode",
      "displayName": "Mode Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> OR -  Any of the search terms must be present\n <\/code><\/li><li><code> AND -  All search terms must be present\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "OR",
        "AND"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation_SortType",
      "displayName": "Sort Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> COUNT -  Should sort by number of matches\n <\/code><\/li><li><code> VALUE -  Should sort by value of the field alphabetically\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "COUNT",
        "VALUE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation_SortDirection",
      "displayName": "Sort Direction Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> DESC -  Should sort in descending order\n <\/code><\/li><li><code> ASC -  Should sort in ascending order\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "DESC",
        "ASC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_ValueAggregation_MissingValues",
      "displayName": "Missing Values Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> EXCLUDE -  Should missing values be excluded from the aggregation results\n <\/code><\/li><li><code> INCLUDE -  Should missing values be included in the aggregation results\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "EXCLUDE",
        "INCLUDE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_NestedAggregation_NestedAggregationType",
      "displayName": "Nested Aggregation Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_AGGREGATION_TYPE <\/code><\/li><li><code> VALUE -  An aggregation where result buckets are dynamically built - one per unique value\n <\/code><\/li><li><code> RANGE -  An aggregation, where user can define set of ranges - each representing a bucket\n <\/code><\/li><li><code> SCALAR -  A single-value metric aggregation - e.g. min, max, sum, avg\n <\/code><\/li><li><code> DATE_HISTOGRAM -  An aggregation, where result buckets are dynamically built - one per time interval (hour, day, week, etc.)\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_AGGREGATION_TYPE",
        "VALUE",
        "RANGE",
        "SCALAR",
        "DATE_HISTOGRAM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Aggregation_DateHistogramAggregation_Interval",
      "displayName": "Interval Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_INTERVAL <\/code><\/li><li><code> YEAR -  Yearly interval\n <\/code><\/li><li><code> MONTH -  Monthly interval\n <\/code><\/li><li><code> WEEK -  Weekly interval\n <\/code><\/li><li><code> DAY -  Daily interval\n <\/code><\/li><li><code> HOUR -  Hourly interval\n <\/code><\/li><li><code> MINUTE -  Minute interval\n <\/code><\/li><li><code> SECOND -  Second interval\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_INTERVAL",
        "YEAR",
        "MONTH",
        "WEEK",
        "DAY",
        "HOUR",
        "MINUTE",
        "SECOND"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_tier_StatusEnum_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> DISABLED -  Tiers are disabled\n <\/code><\/li><li><code> DRAFT -  Tiers are enabled but not yet active\n <\/code><\/li><li><code> ACTIVE -  Tiers are active\n <\/code><\/li><li><code> PAUSED -  Tiers are paused\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "DISABLED",
        "DRAFT",
        "ACTIVE",
        "PAUSED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_billing_api_v1_Interval_IntervalUnit",
      "displayName": "Interval Unit Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN -  unknown interval unit\n <\/code><\/li><li><code> DAY -  day\n <\/code><\/li><li><code> WEEK -  week\n <\/code><\/li><li><code> MONTH -  month\n <\/code><\/li><li><code> YEAR -  year\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "DAY",
        "WEEK",
        "MONTH",
        "YEAR"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_BillingReference_ProviderName",
      "displayName": "Provider Name Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> SBS <\/code><\/li><li><code> LICENSER <\/code><\/li><li><code> BASS <\/code><\/li><li><code> RESELLER <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "SBS",
        "LICENSER",
        "BASS",
        "RESELLER"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionStatusEnum_SubscriptionStatus",
      "displayName": "Subscription Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> AUTO_RENEW_ON <\/code><\/li><li><code> AUTO_RENEW_OFF <\/code><\/li><li><code> MANUAL_RECURRING <\/code><\/li><li><code> CANCELLED <\/code><\/li><li><code> TRANSFERRED <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "AUTO_RENEW_ON",
        "AUTO_RENEW_OFF",
        "MANUAL_RECURRING",
        "CANCELLED",
        "TRANSFERRED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_billingnotifications_api_v1_ContractSwitchType",
      "displayName": "Contract Switch Type Object",
      "locations": [],
      "docs":       {
        "summary": " Copied from SBS\n \n Possible values are: <li><code> NOT_APPLICABLE <\/code><\/li><li><code> ADDITIONAL_QUANTITY <\/code><\/li><li><code> CREDIT_UNUSED_PERIOD <\/code><\/li><li><code> REFUND_PRICE_DIFF <\/code><\/li><li><code> ADJUST_PERIOD_END <\/code><\/li><li><code> DOWNGRADE_GRACE_PERIOD <\/code><\/li><li><code> FULL_AMOUNT_PERIOD <\/code><\/li><li><code> END_OF_PERIOD <\/code><\/li><li><code> PENDING_CHANGES <\/code><\/li><li><code> DOWNGRADE_RENEWAL <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NOT_APPLICABLE",
        "ADDITIONAL_QUANTITY",
        "CREDIT_UNUSED_PERIOD",
        "REFUND_PRICE_DIFF",
        "ADJUST_PERIOD_END",
        "DOWNGRADE_GRACE_PERIOD",
        "FULL_AMOUNT_PERIOD",
        "END_OF_PERIOD",
        "PENDING_CHANGES",
        "DOWNGRADE_RENEWAL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_ProductAdjustment",
      "displayName": "Product Adjustment Object",
      "locations": [],
      "docs":       {
        "summary": "\nTriggered when a subscription's product is adusted.\n \n Possible values are: <li><code> NOT_APPLICABLE -  flag to show that the ContractSwitchedEvent is not applicable / needed\n <\/code><\/li><li><code> DOWNGRADE - flag to show that the ContractSwitchedEvent is a Downgrade\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NOT_APPLICABLE",
        "DOWNGRADE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_PriceIncreaseTrigger",
      "displayName": "Price Increase Trigger Object",
      "locations": [],
      "docs":       {
        "summary": "\nReason for Price Increase Trigger\n \n Possible values are: <li><code> NEAR_RENEWAL <\/code><\/li><li><code> RECURRING_SUCCESS <\/code><\/li><li><code> MANUAL <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NEAR_RENEWAL",
        "RECURRING_SUCCESS",
        "MANUAL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_CancellationInitiatorEnum_Initiator",
      "displayName": "Initiator Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> USER_REQUESTED <\/code><\/li><li><code> APP_MANAGED <\/code><\/li><li><code> PASSIVE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "USER_REQUESTED",
        "APP_MANAGED",
        "PASSIVE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_SubscriptionUnassigned_UnassignReason",
      "displayName": "Unassign Reason Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> USER_REQUESTED <\/code><\/li><li><code> REPLACED_BY_ANOTHER_SUBSCRIPTION <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "USER_REQUESTED",
        "REPLACED_BY_ANOTHER_SUBSCRIPTION"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_subscriptionsmanager_api_v1_ContractSwitchReason_ContractSwitchReason",
      "displayName": "Contract Switch Reason Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> EXTERNAL_PROVIDER_TRIGGER <\/code><\/li><li><code> PRICE_INCREASE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "EXTERNAL_PROVIDER_TRIGGER",
        "PRICE_INCREASE"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.loyalty.loyalty-accounts"}
}
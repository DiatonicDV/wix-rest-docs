{
  "name": "Order Invoices",
  "client_id": "https://github.com/wix-private/ecom/tree/master/server/wix-ecommerce-server/ecom-platform-orders/api/wix-ecom-orders-invoices-api/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Manage eCommerce order invoices",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Order Invoices",
    "entity": ""
  }],
  "relatedGuides": [  {
    "path": "../guides/order-invoices/docs/intro.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Add Invoice To Order",
      "methodName": "AddInvoiceToOrder",
      "serviceName": "Invoices",
      "tag": "Order Invoices",
      "permissions":       [
                {
          "name": "Manage eCommerce - all permissions",
          "description": "Request permission to read, create and modify the site's Wix eCommerce data, including cart, checkout, and order data. This permission scope contains all of the eCommerce permissions.\n"
        },
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "orderId",
        "invoiceInfo",
        "invoiceInfo.id",
        "invoiceInfo.appId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "orderId",
          "type": "string",
          "doc": " Order ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "invoiceInfo",
          "type": "All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_Invoice",
          "doc": " Invoice info.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "AddInvoiceToOrder",
          "statusCode": "200",
          "typeParams": ["All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_AddInvoiceToOrderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Adds an invoice to a specified order.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/ecom/v1/invoices/orders/{orderId}/add-invoice",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "AddInvoiceToOrderRequest",
        "rpcResponseName": "AddInvoiceToOrderResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Bulk Generate Invoices",
      "methodName": "BulkGenerateInvoices",
      "serviceName": "Invoices",
      "tag": "Order Invoices",
      "permissions":       [
                {
          "name": "Manage eCommerce - all permissions",
          "description": "Request permission to read, create and modify the site's Wix eCommerce data, including cart, checkout, and order data. This permission scope contains all of the eCommerce permissions.\n"
        },
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["orderIds"],
      "params": [      {
        "in": "BODY",
        "name": "orderIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " Order IDs.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "BulkGenerateInvoices",
          "statusCode": "200",
          "typeParams": ["All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_BulkGenerateInvoicesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Generates and adds invoices to all specified orders.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/ecom/v1/bulk/invoices/generate",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkGenerateInvoicesRequest",
        "rpcResponseName": "BulkGenerateInvoicesResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Generate Invoice",
      "methodName": "GenerateInvoice",
      "serviceName": "Invoices",
      "tag": "Order Invoices",
      "permissions":       [
                {
          "name": "Manage eCommerce - all permissions",
          "description": "Request permission to read, create and modify the site's Wix eCommerce data, including cart, checkout, and order data. This permission scope contains all of the eCommerce permissions.\n"
        },
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["orderId"],
      "params": [      {
        "in": "PATH",
        "name": "orderId",
        "type": "string",
        "doc": " Order ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GenerateInvoice",
          "statusCode": "200",
          "typeParams": ["All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_GenerateInvoiceResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Generates and adds an invoice to a specified order.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/ecom/v1/invoices/orders/{orderId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GenerateInvoiceRequest",
        "rpcResponseName": "GenerateInvoiceResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "List Invoices For Multiple Orders",
      "methodName": "ListInvoicesForMultipleOrders",
      "serviceName": "Invoices",
      "tag": "Order Invoices",
      "permissions":       [
                {
          "name": "Manage eCommerce - all permissions",
          "description": "Request permission to read, create and modify the site's Wix eCommerce data, including cart, checkout, and order data. This permission scope contains all of the eCommerce permissions.\n"
        },
                {
          "name": "Read eCommerce - all read permissions",
          "description": "Request permission to read the site's Wix eCommerce (ecom) data, including cart, checkout, and order data. This permission scope contains all of the read eCommerce permissions."
        },
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and modify the site's Wix Stores orders."
        },
                {
          "name": "Read Orders",
          "description": "Request permission to read the site's Wix Stores order info."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["orderIds"],
      "params": [      {
        "in": "BODY",
        "name": "orderIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " Order IDs for which to retrieve invoices.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "ListInvoicesForMultipleOrders",
          "statusCode": "200",
          "typeParams": ["All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_ListInvoicesForMultipleOrdersResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves the IDs of invoices associated with all specified orders.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/ecom/v1/invoices/list-by-ids",
        "links": [],
        "examples": [        {
          "title": "List Invoices For Multiple Orders",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/ecom/v1/invoices/list-by-ids' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: <AUTH>' \\\n  --data-binary '{\n    \"orderIds\": [\n      \"ba2553e1-548e-4b84-96d8-4978e74d7b3b\",\n      \"5887eb1a-d695-4a8b-965a-b2a9dec463a9\"\n    ]\n  }'"],
          "response": ["{\"invoicesForOrder\": [\n    {\n    \"orderId\": \"5887eb1a-d695-4a8b-965a-b2a9dec463a9\",\n    \"invoicesInfo\": [    {\n      \"id\": \"5887eb1a-d695-4a8b-965a-b2a9dec463a9\",\n      \"appId\": \"1380b703-ce81-ff05-f115-39571d94dfcd\"\n    }]\n  },\n    {\n    \"orderId\": \"ba2553e1-548e-4b84-96d8-4978e74d7b3b\",\n    \"invoicesInfo\": [    {\n      \"id\": \"ba2553e1-548e-4b84-96d8-4978e74d7b3b\",\n      \"appId\": \"1380b703-ce81-ff05-f115-39571d94dfcd\"\n    }]\n  }\n]} "],
          "type": "curl",
          "extra": {"description": "Retrieves invoices of the 2 requested order IDs"}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListInvoicesForMultipleOrdersRequest",
        "rpcResponseName": "ListInvoicesForMultipleOrdersResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events": [  {
    "type": "_com_wix_ecom_orders_invoices_v1_InvoiceCreatedDomainEvent",
    "name": "Invoice Created Webhook",
    "docs":     {
      "summary": " Triggered when an invoice is created.\n",
      "src": "https://github.com/wix-private/ecom/tree/master/server/wix-ecommerce-server/ecom-platform-orders/api/wix-ecom-orders-invoices-api/proto/com/wix/ecom/orders/invoices/v1/invoices.proto"
    },
    "topic": "domain_events_wix.ecom.orders.v1.invoice",
    "tag": "Order Invoices",
    "permissions":     [
            {
        "name": "Manage eCommerce - all permissions",
        "description": "Request permission to read, create and modify the site's Wix eCommerce data, including cart, checkout, and order data. This permission scope contains all of the eCommerce permissions.\n"
      },
            {
        "name": "Read eCommerce - all read permissions",
        "description": "Request permission to read the site's Wix eCommerce (ecom) data, including cart, checkout, and order data. This permission scope contains all of the read eCommerce permissions."
      },
            {
        "name": "Manage Orders",
        "description": "Request permission to read, create and modify the site's Wix Stores orders."
      },
            {
        "name": "Read Orders",
        "description": "Request permission to read the site's Wix Stores order info."
      }
    ],
    "customLabels": [{"id": "maturity-alpha"}],
    "eventType": "wix.ecom.orders.v1.invoice_created",
    "extra": {"isDomainEvent": true}
  }],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wix_ecom_orders_invoices_v1_InvoiceCreatedDomainEvent",
      "displayName": "Invoice Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.ecom.orders.v1.invoice`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_InvoiceEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Invoice ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_InvoiceEntityCreatedEvent",
      "displayName": "Invoice Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_Invoice",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_Invoice",
      "displayName": "Invoice Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Invoice ID.\n"
        },
                {
          "name": "appId",
          "type": "string",
          "doc": " ID of the app that set the invoice.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Order Invoices._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Order Invoices._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Order Invoices._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_api_ApplicationError",
      "displayName": "Application Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Error code.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the error.\n"
        },
                {
          "name": "data",
          "type": "struct",
          "doc": " Data related to the error.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_BulkActionMetadata",
      "displayName": "Bulk Action Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "totalSuccesses",
          "type": "integer",
          "doc": " Number of items that were successfully processed.\n"
        },
                {
          "name": "totalFailures",
          "type": "integer",
          "doc": " Number of items that couldn't be processed.\n"
        },
                {
          "name": "undetailedFailures",
          "type": "integer",
          "doc": " Number of failures without details because detailed failure threshold was exceeded.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_ItemMetadata",
      "displayName": "Item Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Item ID. Should always be available, unless it's impossible (for example, when failing to create an item).\n"
        },
                {
          "name": "originalIndex",
          "type": "integer",
          "doc": " Index of the item within the request array. Allows for correlation between request and response items.\n"
        },
                {
          "name": "success",
          "type": "boolean",
          "doc": " Whether the requested action was successful for this item. When `false`, the `error` field is populated.\n"
        },
                {
          "name": "error",
          "type": "All APIs.Order Invoices._wix_api_ApplicationError",
          "doc": " Details about the error in case of failure.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deletedEntityAsJson",
        "type": "string",
        "doc": " Entity that was deleted\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Unique event ID.\n Allows clients to ignore duplicate webhooks.\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " ID of the entity associated with the event.\n"
        },
                {
          "name": "body",
          "type": "All APIs.Order Invoices._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " Event timestamp.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether the event was triggered as a result of a privacy regulation application\n (for example, GDPR).\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        },
                {
          "name": "entityEventSequence",
          "type": "string",
          "doc": " A sequence number defining the order of updates to the underlying entity.\n For example, given that some entity was updated at 16:00 and than again at 16:01,\n  it is guaranteed that the sequence number of the second update is strictly higher than the first.\n As the consumer, you can use this value to ensure that you handle messages in the correct order.\n To do so, you will need to persist this number on your end, and compare the sequence number from the\n  message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Order Invoices._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Order Invoices._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Order Invoices._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Order Invoices._wix_common_domainevents_ActionEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_ListInvoicesForSingleOrderRequest",
      "displayName": "List Invoices For Single Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "orderId",
        "type": "string",
        "doc": " Order ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_ListInvoicesForSingleOrderResponse",
      "displayName": "List Invoices For Single Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "invoices",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_Invoice"]
        },
        "doc": " List of invoices.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_ListInvoicesForMultipleOrdersRequest",
      "displayName": "List Invoices For Multiple Orders Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "orderIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " Order IDs for which to retrieve invoices.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_ListInvoicesForMultipleOrdersResponse",
      "displayName": "List Invoices For Multiple Orders Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "invoicesForOrder",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_InvoicesForOrder"]
        },
        "doc": " List of order IDs and their associated invoices.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_InvoicesForOrder",
      "displayName": "Invoices For Order Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "orderId",
          "type": "string",
          "doc": " Order ID.\n"
        },
                {
          "name": "invoicesInfo",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_Invoice"]
          },
          "doc": " Invoices info.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_AddInvoiceToOrderRequest",
      "displayName": "Add Invoice To Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "orderId",
          "type": "string",
          "doc": " Order ID.\n"
        },
                {
          "name": "invoiceInfo",
          "type": "All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_Invoice",
          "doc": " Invoice info.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_AddInvoiceToOrderResponse",
      "displayName": "Add Invoice To Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "orderInvoices",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_Invoice"]
        },
        "doc": " List of order invoices.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_GenerateInvoiceRequest",
      "displayName": "Generate Invoice Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "orderId",
        "type": "string",
        "doc": " Order ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_GenerateInvoiceResponse",
      "displayName": "Generate Invoice Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "invoiceId",
        "type": "string",
        "doc": " Invoice ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_BulkGenerateInvoicesRequest",
      "displayName": "Bulk Generate Invoices Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "orderIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " Order IDs.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_BulkGenerateInvoicesResponse",
      "displayName": "Bulk Generate Invoices Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_BulkInvoiceResult"]
          },
          "doc": ""
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Order Invoices._wix_common_BulkActionMetadata",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_BulkInvoiceResult",
      "displayName": "Bulk Invoice Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemMetadata",
          "type": "All APIs.Order Invoices._wix_common_ItemMetadata",
          "doc": ""
        },
                {
          "name": "item",
          "type": "All APIs.Order Invoices._com_wix_ecom_orders_invoices_v1_InvoiceForOrder",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_ecom_orders_invoices_v1_InvoiceForOrder",
      "displayName": "Invoice For Order Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "orderId",
          "type": "string",
          "doc": " Order ID.\n"
        },
                {
          "name": "invoiceId",
          "type": "string",
          "doc": " Invoice ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.ecom.ep-invoices"}
}
{
  "name": "Rewards",
  "client_id": "https://github.com/wix-private/app-market/tree/master/loyalty/loyalty-rewards#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Rewards",
    "entity": "_com_wixpress_loyalty_reward_Reward",
    "src": "https://github.com/wix-private/app-market/blob/master/loyalty/loyalty-rewards/com/wixpress/loyalty/reward/loyalty_rewards.proto"
  }],
  "relatedGuides": [  {
    "path": "../guides/rewards/docs/introduction.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Create Reward",
      "methodName": "CreateReward",
      "serviceName": "LoyaltyRewards",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Manage Loyalty",
        "description": "Request permission to manage the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "reward",
        "reward.name",
        "reward.typeDetails"
      ],
      "params": [      {
        "in": "BODY",
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Reward to create.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreateReward",
          "statusCode": "200",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_CreateRewardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nCreates a reward that can be redeemed with loyalty points.  \n\nWhen a customer [redeems a reward](/coupons/redeem-points-for-coupon), a loyalty coupon is created \nbased on the specifications detailed in either the `discountAmount` or `couponReward` fields. This coupon can \nthen be used by the customer to receive the discount. Note that while the Rewards API uses coupon scopes and specifications, \nno coupon is actually created until a [reward is redeemed](/coupons/redeem-points-for-coupon) with points. \nSee the [Coupons API](https://dev.wix.com/api/rest/coupons) for more information about coupons. The `type` of reward \ncannot be updated.  \n\nA reward's `active` status defaults to `false`. To make the reward available to customers, \neither set the `active` field to `true` during creation or call [Update Reward](/update-reward) \nto change the status.  \n\nTo customize a reward for each [loyalty tier](/tiers), use the `configsByTier` parameter. \nThis allows you to specify the amount of the earned discount, the cost in loyalty points \nto redeem the reward, and the tier to which this configuration applies. Each tier requires its own \n`configsByTier` configuration. To create a reward that is available to loyalty accounts in the base tier, \nleave the `tierId` field empty. See the [Tiers API](/tiers) for more information on tiers.\n\n>**Note:**\n>This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-rewards/v1/rewards",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateRewardRequest",
        "rpcResponseName": "CreateRewardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Reward",
      "methodName": "DeleteReward",
      "serviceName": "LoyaltyRewards",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Manage Loyalty",
        "description": "Request permission to manage the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the reward to delete.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by `\"1\"` each time the reward is updated.  \n\nTo prevent conflicting changes, the current `revision` must be passed when deleting the reward.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteReward",
          "statusCode": "200",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_DeleteRewardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nDeletes a reward.\n\n>**Note:**\n>This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/loyalty-rewards/v1/rewards/{id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteRewardRequest",
        "rpcResponseName": "DeleteRewardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Reward",
      "methodName": "GetReward",
      "serviceName": "LoyaltyRewards",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the reward to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetReward",
          "statusCode": "200",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_GetRewardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a reward.\n\n>**Note:**\n>This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-rewards/v1/rewards/{id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetRewardRequest",
        "rpcResponseName": "GetRewardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Rewards",
      "methodName": "ListRewards",
      "serviceName": "LoyaltyRewards",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "cursorPaging.limit",
          "type": "integer",
          "doc": " Maximum number of items to return in the results.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "cursorPaging.cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListRewards",
          "statusCode": "200",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_ListRewardsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " \nRetrieves a list of rewards.\n\nOnly rewards with `\"active\"` set to `\"true\"` will be retrieved. The list includes rewards that are currently \nunredeemable due to insufficient points held by any customers.\n\n>**Note:**\n>This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/loyalty-rewards/v1/rewards",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListRewardsRequest",
        "rpcResponseName": "ListRewardsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Rewards",
      "methodName": "QueryRewards",
      "serviceName": "LoyaltyRewards",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Rewards._wix_common_CursorQuery",
        "doc": "",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "QueryRewards",
          "statusCode": "200",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_QueryRewardsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nQuery Rewards using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/loyalty-rewards/v1/rewards/query",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryRewardsRequest",
        "rpcResponseName": "QueryRewardsResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Update Reward",
      "methodName": "UpdateReward",
      "serviceName": "LoyaltyRewards",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Manage Loyalty",
        "description": "Request permission to manage the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "reward",
        "reward.id",
        "reward.name",
        "reward.typeDetails",
        "reward.revision"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "reward.id",
          "type": "string",
          "doc": " Reward ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "reward",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
          "doc": " Reward information to update.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateReward",
          "statusCode": "200",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_UpdateRewardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " \nUpdates a loyalty reward.  \n\nUse this endpoint to update details of a reward, such as the name, whether or not a reward is active, \nor the amount of points it costs to redeem. Also use this endpoint to add new tiers that are eligible to redeem a reward.\n\nYou may not change the `type` of a reward. That is set upon creation and cannot be updated.\n\n>**Note:**\n>This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).\n \n",
        "description": [],
        "request": "PUT",
        "url": "https://www.wixapis.com/loyalty-rewards/v1/rewards/{reward.id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateRewardRequest",
        "rpcResponseName": "UpdateRewardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_loyalty_reward_RewardDeletedDomainEvent",
      "name": "Reward Deleted Webhook",
      "docs":       {
        "summary": " Triggered when a reward is deleted.\n",
        "src": "https://github.com/wix-private/app-market/blob/master/loyalty/loyalty-rewards/src/main/proto/com/wixpress/loyalty/reward/loyalty_rewards.proto"
      },
      "topic": "domain_events_wix.loyalty.v1.reward",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.reward_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_loyalty_reward_RewardUpdatedDomainEvent",
      "name": "Reward Updated Webhook",
      "docs":       {
        "summary": " Triggered when a reward is updated.\n",
        "src": "https://github.com/wix-private/app-market/blob/master/loyalty/loyalty-rewards/src/main/proto/com/wixpress/loyalty/reward/loyalty_rewards.proto"
      },
      "topic": "domain_events_wix.loyalty.v1.reward",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.reward_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_loyalty_reward_RewardCreatedDomainEvent",
      "name": "Reward Created Webhook",
      "docs":       {
        "summary": " Triggered when a reward is created.\n",
        "src": "https://github.com/wix-private/app-market/blob/master/loyalty/loyalty-rewards/src/main/proto/com/wixpress/loyalty/reward/loyalty_rewards.proto"
      },
      "topic": "domain_events_wix.loyalty.v1.reward",
      "tag": "Rewards",
      "permissions": [      {
        "name": "Read Loyalty",
        "description": "Request permission to read the site's installed Wix Loyalty Program, including program and accounts."
      }],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.loyalty.v1.reward_created",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_loyalty_reward_RewardDeletedDomainEvent",
      "displayName": "Reward Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"06ddeb75-41e6-4045-940e-05ebe5542195\",\n  \"entityFqdn\" : \"wix.loyalty.v1.reward\",\n  \"slug\" : \"deleted\",\n  \"entityId\" : \"37afb59f-01a1-4255-945f-837c89569e63\",\n  \"deletedEvent\" : { },\n  \"eventTime\" : \"2022-01-04T07:07:04.153082Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.reward`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_RewardEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Reward ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardEntityDeletedEvent",
      "displayName": "Reward Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardUpdatedDomainEvent",
      "displayName": "Reward Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"0890d8e0-0334-4fc3-bec6-18a49a922b53\",\n  \"entityFqdn\" : \"wix.loyalty.v1.reward\",\n  \"slug\" : \"updated\",\n  \"entityId\" : \"00000000-0000-0000-0001-000000000000\",\n  \"updatedEvent\" : {\n    \"currentEntity\" : {\n      \"requiredPoints\" : 15,\n      \"name\" : \"Order Discount\",\n      \"revision\" : \"4\",\n      \"id\" : \"00000000-0000-0000-0001-000000000000\",\n      \"type\" : \"DISCOUNT_AMOUNT\",\n      \"discountAmount\" : {\n        \"amount\" : \"2\"\n      },\n      \"active\" : true\n    }\n  },\n  \"eventTime\" : \"2022-01-04T06:56:37.131580Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.reward`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_RewardEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Reward ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardEntityUpdatedEvent",
      "displayName": "Reward Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardCreatedDomainEvent",
      "displayName": "Reward Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.reward`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_RewardEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Reward ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardEntityCreatedEvent",
      "displayName": "Reward Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardDisabledDomainEvent",
      "displayName": "Reward Disabled Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.loyalty.v1.reward`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `reward_disabled`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_RewardDisabledActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "RewardDisabled ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardDisabledActionEvent",
      "displayName": "Reward Disabled Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_RewardDisabled",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Rewards._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Rewards._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Rewards._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_api_ApplicationError",
      "displayName": "Application Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Error code.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Description of the error.\n"
        },
                {
          "name": "data",
          "type": "struct",
          "doc": " Data related to the error.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_BulkActionMetadata",
      "displayName": "Bulk Action Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "totalSuccesses",
          "type": "integer",
          "doc": " Number of items that were successfully processed.\n"
        },
                {
          "name": "totalFailures",
          "type": "integer",
          "doc": " Number of items that couldn't be processed.\n"
        },
                {
          "name": "undetailedFailures",
          "type": "integer",
          "doc": " Number of failures without details because detailed failure threshold was exceeded.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_ItemMetadata",
      "displayName": "Item Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Item ID. Should always be available, unless it's impossible (for example, when failing to create an item).\n"
        },
                {
          "name": "originalIndex",
          "type": "integer",
          "doc": " Index of the item within the request array. Allows for correlation between request and response items.\n"
        },
                {
          "name": "success",
          "type": "boolean",
          "doc": " Whether the requested action was successful for this item. When `false`, the `error` field is populated.\n"
        },
                {
          "name": "error",
          "type": "All APIs.Rewards._wix_api_ApplicationError",
          "doc": " Details about the error in case of failure.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deletedEntityAsJson",
        "type": "string",
        "doc": " Entity that was deleted\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Unique event ID.\n Allows clients to ignore duplicate webhooks.\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " ID of the entity associated with the event.\n"
        },
                {
          "name": "body",
          "type": "All APIs.Rewards._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " Event timestamp.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether the event was triggered as a result of a privacy regulation application\n (for example, GDPR).\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        },
                {
          "name": "entityEventSequence",
          "type": "string",
          "doc": " A sequence number defining the order of updates to the underlying entity.\n For example, given that some entity was updated at 16:00 and than again at 16:01,\n  it is guaranteed that the sequence number of the second update is strictly higher than the first.\n As the consumer, you can use this value to ensure that you handle messages in the correct order.\n To do so, you will need to persist this number on your end, and compare the sequence number from the\n  message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Rewards._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Rewards._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Rewards._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Rewards._wix_common_domainevents_ActionEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Maximum number of items to return in the results.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Rewards._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPagingMetadata",
      "displayName": "Cursor Paging Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Rewards._wix_common_Cursors",
          "doc": " Cursor strings that point to the next page, previous page, or both.\n"
        },
                {
          "name": "hasNext",
          "type": "boolean",
          "doc": "\nWhether there are more pages to retrieve following the current page.\n\n+ `true`: Another page of results can be retrieved.\n+ `false`: This is the last page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor string pointing to the next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to the previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Rewards._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorQuery",
      "displayName": "Cursor Query Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Rewards._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Rewards._wix_common_CursorQuery_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorQuery_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cursorPaging",
        "type": "All APIs.Rewards._wix_common_CursorPaging",
        "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_reward_Reward",
      "displayName": "Reward Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Reward ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Reward name.\n"
        },
                {
          "name": "active",
          "type": "boolean",
          "doc": " \nWhether the reward is active.  \n\nDefault: `\"false\"`\n"
        },
                {
          "name": "type",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_RewardTypeEnum_RewardType",
          "doc": "\nReward type.\n\n+ `\"DISCOUNT_AMOUNT\"`: Discount reward. Only available for Wix Restaurants. [Learn more about discounts.](https://support.wix.com/en/article/wix-restaurants-creating-discounts-for-your-customers)\n+ `\"COUPON_REWARD\"`: Coupon reward. [Learn more about coupons.](https://support.wix.com/en/article/using-coupons-as-loyalty-rewards)  \n+ `\"COUPON\"`: **Deprecated.** Use `\"COUPON_REWARD\"` instead.\n"
        },
                {
          "name": "typeDetails",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward_TypeDetails",
          "doc": " Available reward types.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " \nRevision number, which increments by `\"1\"` each time the loyalty reward is updated.  \n\nTo prevent conflicting changes, the current `revision` must be passed when updating the loyalty reward.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the reward was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the reward was last updated.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_Reward_TypeDetails",
      "displayName": "Type Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "discountAmount",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_DiscountAmount",
          "doc": " Discount details.\n"
        },
                {
          "name": "couponReward",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_CouponReward",
          "doc": " Coupon details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_reward_DiscountAmount",
      "displayName": "Discount Amount Object",
      "locations": [],
      "docs":       {
        "summary": "TODO add [(wix.api.minSize) = 1, (wix.api.maxSize) = 20] to DiscountAmount;\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configsByTier",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_DiscountAmountConfig"]
        },
        "doc": " Discount details for each tier.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_Coupon",
      "displayName": "Coupon Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "templateId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "deleted",
          "type": "boolean",
          "doc": "",
          "readOnly": true
        },
                {
          "name": "configs",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_CouponConfig"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_CouponReward",
      "displayName": "Coupon Reward Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "discountType",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_CouponReward_DiscountType",
          "doc": ""
        },
                {
          "name": "scopeOrMinSubtotal",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_CouponReward_ScopeOrMinSubtotal",
          "doc": ""
        },
                {
          "name": "limitedToOneItem",
          "type": "boolean",
          "doc": " Whether the coupon is limited to one item.\n"
        },
                {
          "name": "appliesToSubscriptions",
          "type": "boolean",
          "doc": " Whether the coupon also applies to subscriptions.\n"
        },
                {
          "name": "discountedCycleCount",
          "type": "integer",
          "doc": " \nSpecifies the amount of discounted cycles for a subscription item.  \n\nCan only be set when `appliesToSubscriptions` is `true` and `scope.namespace` is `pricingPlans`. \nIf `discountedCycleCount` is empty, the coupon applies to all available cycles.  \n\nMin: `1`  \nMax: `999`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_CouponReward_DiscountType",
      "displayName": "Discount Type Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fixedAmount",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_FixedAmountDiscount",
          "doc": " Discount as a fixed amount.\n"
        },
                {
          "name": "percentage",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_PercentageDiscount",
          "doc": " Discount as a percentage.\n"
        },
                {
          "name": "freeShipping",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_FreeShippingDiscount",
          "doc": " Free shipping.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_reward_CouponReward_ScopeOrMinSubtotal",
      "displayName": "Scope Or Min Subtotal Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "minimumSubtotal",
          "type": "number",
          "doc": " Limit the coupon to carts with a subtotal greater than this number.\n"
        },
                {
          "name": "scope",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_CouponScope",
          "doc": " Specifies the type of line items this coupon will apply to. \nFor more information, see [valid scope values](https://dev.wix.com/api/rest/coupons/coupons/valid-scope-values).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_loyalty_reward_FixedAmountDiscount",
      "displayName": "Fixed Amount Discount Object",
      "locations": [],
      "docs":       {
        "summary": "TODO add [(wix.api.minSize) = 1, (wix.api.maxSize) = 20]\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configsByTier",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_FixedAmountDiscountConfig"]
        },
        "doc": " Discount details for each tier.    \n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_FixedAmountDiscountConfig",
      "displayName": "Fixed Amount Discount Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tierId",
          "type": "string",
          "doc": " Tier ID, or empty if config applies to the base tier.\n"
        },
                {
          "name": "costInPoints",
          "type": "integer",
          "doc": " Amount of points required to redeem the reward.\n"
        },
                {
          "name": "amount",
          "type": "number",
          "doc": " Discount amount.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_PercentageDiscount",
      "displayName": "Percentage Discount Object",
      "locations": [],
      "docs":       {
        "summary": "TODO add [(wix.api.minSize) = 1, (wix.api.maxSize) = 20]\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configsByTier",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_PercentageDiscountConfig"]
        },
        "doc": " Discount details for each tier.    \n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_PercentageDiscountConfig",
      "displayName": "Percentage Discount Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tierId",
          "type": "string",
          "doc": " Tier ID, or empty if config applies to the base tier.\n"
        },
                {
          "name": "costInPoints",
          "type": "integer",
          "doc": " Amount of points required to redeem the reward.\n"
        },
                {
          "name": "percentage",
          "type": "number",
          "doc": " Percentage discount.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_FreeShippingDiscount",
      "displayName": "Free Shipping Discount Object",
      "locations": [],
      "docs":       {
        "summary": "TODO add [(wix.api.minSize) = 1, (wix.api.maxSize) = 20]\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configsByTier",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_FreeShippingDiscountConfig"]
        },
        "doc": " Discount details for each tier.    \n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_FreeShippingDiscountConfig",
      "displayName": "Free Shipping Discount Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tierId",
          "type": "string",
          "doc": " Tier ID, or empty if config applies to the base tier.\n"
        },
                {
          "name": "costInPoints",
          "type": "integer",
          "doc": " Amount of points required to redeem the reward.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_CouponScope",
      "displayName": "Coupon Scope Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "namespace",
          "type": "string",
          "doc": "\nScope namespace. \n\nSee [valid scope values](https://dev.wix.com/api/rest/coupons/coupons/valid-scope-values) for valid namespaces.\n"
        },
                {
          "name": "group",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Group",
          "doc": "\nCoupon scope's applied group.\n\nSee [valid scope values](https://dev.wix.com/api/rest/coupons/coupons/valid-scope-values) for valid groups.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_Group",
      "displayName": "Group Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": "\nName of coupon scope's group.  \n\nSee [valid scope values](https://dev.wix.com/api/rest/coupons/coupons/valid-scope-values) for valid groups.\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "\nEntity ID, if the coupon scope is limited to just one item.  \n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_DiscountAmountConfig",
      "displayName": "Discount Amount Config Object",
      "locations": [],
      "docs":       {
        "summary": "TODO after migration for cost_in_points use [(wix.api.min) = 1, (wix.api.max) = 9999999];\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "string",
          "doc": " Discount amount. Must be a positive value.\n"
        },
                {
          "name": "tierId",
          "type": "string",
          "doc": " Tier ID, or empty if config applies to the base tier.\n"
        },
                {
          "name": "costInPoints",
          "type": "integer",
          "doc": " Amount of points required to redeem the reward.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_CouponConfig",
      "displayName": "Coupon Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "requiredPoints",
          "type": "integer",
          "doc": " Amount of points required to receive the reward.\n"
        },
                {
          "name": "tierId",
          "type": "string",
          "doc": " Tier ID, or empty if config applies to the base tier.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_CreateRewardRequest",
      "displayName": "Create Reward Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Reward to create.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_CreateRewardResponse",
      "displayName": "Create Reward Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Created reward.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_BulkCreateRewardsRequest",
      "displayName": "Bulk Create Rewards Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rewards",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_Reward"]
        },
        "doc": " Rewards to create.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_BulkCreateRewardsResponse",
      "displayName": "Bulk Create Rewards Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_BulkRewardResult"]
          },
          "doc": " Created rewards.\n"
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Rewards._wix_common_BulkActionMetadata",
          "doc": " Total successes and failures of the bulk create rewards action.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_BulkRewardResult",
      "displayName": "Bulk Reward Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemMetadata",
          "type": "All APIs.Rewards._wix_common_ItemMetadata",
          "doc": ""
        },
                {
          "name": "item",
          "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_GetRewardRequest",
      "displayName": "Get Reward Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the reward to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_GetRewardResponse",
      "displayName": "Get Reward Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Retrieved reward.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_BulkGetRewardsRequest",
      "displayName": "Bulk Get Rewards Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "metaSiteIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_BulkGetRewardsResponse",
      "displayName": "Bulk Get Rewards Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rewardsInSite",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_RewardsInSite"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardsInSite",
      "displayName": "Rewards In Site Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "rewards",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_Reward"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_UpdateRewardRequest",
      "displayName": "Update Reward Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Reward information to update.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_UpdateRewardResponse",
      "displayName": "Update Reward Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reward",
        "type": "All APIs.Rewards._com_wixpress_loyalty_reward_Reward",
        "doc": " Updated reward.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_DeleteRewardRequest",
      "displayName": "Delete Reward Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the reward to delete.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by `\"1\"` each time the reward is updated.  \n\nTo prevent conflicting changes, the current `revision` must be passed when deleting the reward.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_DeleteRewardResponse",
      "displayName": "Delete Reward Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_ListRewardsRequest",
      "displayName": "List Rewards Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cursorPaging",
        "type": "All APIs.Rewards._wix_common_CursorPaging",
        "doc": " Pagination options.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_ListRewardsResponse",
      "displayName": "List Rewards Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rewards",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_Reward"]
          },
          "doc": " Retrieved loyalty rewards.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Rewards._wix_common_PagingMetadataV2",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_ListRewardsInTierRequest",
      "displayName": "List Rewards In Tier Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tierId",
          "type": "string",
          "doc": "",
          "readOnly": true
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Rewards._wix_common_CursorPaging",
          "doc": " Pagination options.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_ListRewardsInTierResponse",
      "displayName": "List Rewards In Tier Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rewards",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_Reward"]
          },
          "doc": " Retrieved loyalty rewards.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Rewards._wix_common_PagingMetadataV2",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardDisabled",
      "displayName": "Reward Disabled Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_QueryRewardsRequest",
      "displayName": "Query Rewards Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Rewards._wix_common_CursorQuery",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_QueryRewardsResponse",
      "displayName": "Query Rewards Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rewards",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Rewards._com_wixpress_loyalty_reward_Reward"]
          },
          "doc": " Retrieved loyalty rewards.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Rewards._wix_common_CursorPagingMetadata",
          "doc": " Details on the paged set of results returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_loyalty_reward_RewardTypeEnum_RewardType",
      "displayName": "Reward Type Object",
      "locations": [],
      "docs":       {
        "summary": " Available reward types.\n \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> DISCOUNT_AMOUNT <\/code><\/li><li><code> COUPON <\/code><\/li><li><code> COUPON_REWARD -         DISCOUNT_PERCENTAGE = 2;\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "DISCOUNT_AMOUNT",
        "COUPON",
        "COUPON_REWARD"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.loyalty.loyalty-rewards"}
}
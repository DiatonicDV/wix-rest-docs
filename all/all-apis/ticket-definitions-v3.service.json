{
  "name": "Ticket Definitions v3",
  "client_id": "https://github.com/wix-private/events/tree/master/events-services/events-ticket-definitions#public",
  "memberOf": "All APIs",
  "category": "business-service",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Manage ticket definitions details.",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Ticket Definitions",
    "entity": "_wix_events_ticketdef_v3_TicketDefinition",
    "src": "https://github.com/wix-private/events/tree/master/events-services/events-ticket-definitions/wix/events/ticketdef/v3/ticket_definition.proto"
  }],
  "relatedGuides":   [
        {
      "path": "../guides/ticket-definitions-v3/docs/intro.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/ticket-definitions-v3/docs/sample-use-cases-and-flows.md",
      "name": "Sample Use Cases and Flows"
    },
        {
      "path": "../guides/ticket-definitions-v3/docs/filter-and-sort.md",
      "name": "Filter and Sort"
    }
  ],
  "operations":   [
        {
      "name": "Bulk Delete Ticket Definitions By Filter",
      "methodName": "BulkDeleteTicketDefinitionsByFilter",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["filter"],
      "params": [      {
        "in": "BODY",
        "name": "filter",
        "type": "struct",
        "doc": " Filter object in the following format: <br/> `\"filter\" : { \"fieldName1\": \"value1\" }`. <br/> <br/> **Example:** <br/> `\"filter\" : { \"eventId\": \"3d3d5c04-ece0-45a8-85f0-11a58edaa192\" }`\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "BulkDeleteTicketDefinitionsByFilter",
          "statusCode": "200",
          "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_BulkDeleteTicketDefinitionsByFilterResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes multiple ticket definitions. <br> <br>\n All ticket definitions that meet the specified `filter` criteria are deleted.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/bulk/ticket-definitions/delete",
        "links": [],
        "examples": [        {
          "title": "Bulk delete ticket definitions by filter",
          "body": ["curl -X POST 'https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/bulk/ticket-definitions/delete' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n  \"filter\": {\n    \"eventId\": \"9d720f99-1b5a-4141-9877-d32985391e18\"\n  }\n}'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkDeleteTicketDefinitionsByFilterRequest",
        "rpcResponseName": "BulkDeleteTicketDefinitionsByFilterResponse"
      },
      "customLabels": []
    },
        {
      "name": "Create Ticket Definition",
      "methodName": "CreateTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "ticketDefinition",
        "ticketDefinition.eventId",
        "ticketDefinition.name",
        "ticketDefinition.pricingMethod.price",
        "ticketDefinition.pricingMethod",
        "ticketDefinition.feeType"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "ticketDefinition",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition",
          "doc": " Ticket definition info.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_RequestedFields_Field"]
          },
          "doc": " Requested fields.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_CreateTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a ticket definition. Allowed to create up to 100 definitions per event.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions",
        "links": [],
        "examples":         [
                    {
            "title": "Create ticket definition with a fixed price",
            "body": ["curl -X POST 'cv3/ticket-definitions' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d '{\n  \"ticketDefinition\": {\n    \"eventId\": \"9d720f99-1b5a-4141-9877-d32985391e18\",\n    \"name\": \"Leather Workshop\",\n    \"description\": \"Step into the world of fine craftsmanship and explore the artistry of handcrafted leather goods at our captivating Leather Workshop. Join us for a hands-on experience that delves into the intricate process of transforming raw leather into exquisite creations. Immerse yourself in a creative atmosphere where seasoned leather artisans will guide you through the journey of mastering age-old techniques and unlocking your inner artisan.\",\n    \"policyText\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n    \"hidden\": false,\n    \"initial_limit\": 3,\n    \"pricingMethod\": {\n      \"fixedPrice\": {\n        \"value\": \"200\",\n        \"currency\": \"USD\"\n      }\n    },\n    \"feeType\": \"FEE_INCLUDED\",\n    \"salePeriod\": {\n      \"startDate\": \"2023-06-07T10:00:00Z\",\n      \"endDate\": \"2023-06-30T00:00:00Z\",\n      \"displayNotOnSale\": false\n    }\n  }\n}'"],
            "response": ["{\"ticketDefinition\": {\n  \"id\": \"aaf51c30-a61c-473e-96be-a42dfa5064c0\",\n  \"eventId\": \"9d720f99-1b5a-4141-9877-d32985391e18\",\n  \"revision\": \"1\",\n  \"createdDate\": \"2023-05-25T11:39:26.108Z\",\n  \"updatedDate\": \"2023-05-25T11:39:26.108Z\",\n  \"name\": \"Leather Workshop\",\n  \"description\": \"Step into the world of fine craftsmanship and explore the artistry of handcrafted leather goods at our captivating Leather Workshop. Join us for a hands-on experience that delves into the intricate process of transforming raw leather into exquisite creations. Immerse yourself in a creative atmosphere where seasoned leather artisans will guide you through the journey of mastering age-old techniques and unlocking your inner artisan.\",\n  \"policy_text\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"hidden\": false,\n  \"limited\": true,\n  \"initialLimit\": 3,\n  \"actualLimit\": 3,\n  \"pricingMethod\":   {\n    \"fixedPrice\":     {\n      \"value\": \"200.00\",\n      \"currency\": \"USD\"\n    },\n    \"pricingType\": \"STANDARD\",\n    \"free\": false\n  },\n  \"feeType\": \"FEE_INCLUDED\",\n  \"salePeriod\":   {\n    \"startDate\": \"2023-06-07T10:00:00Z\",\n    \"endDate\": \"2023-06-30T00:00:00Z\",\n    \"displayNotOnSale\": false\n  },\n  \"saleStatus\": \"SALE_ENDED\",\n  \"salesDetails\": null\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Create ticket definition with donation",
            "body": ["curl -X POST 'https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d '{\n  \"ticketDefinition\": {\n    \"eventId\": \"39d16ecc-0ec8-4764-8077-8e991f20ef9d\",\n    \"name\": \"Gospel Concert\",\n    \"description\": \"Experience the uplifting power of gospel music at our awe-inspiring Gospel Concert. Join us for an unforgettable evening filled with soul-stirring melodies, powerful harmonies, and heartfelt performances by renowned gospel artists. Let your spirit soar as you immerse yourself in the joyous celebration of faith, music, and unity at this not-to-be-missed event.\",\n    \"policyText\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n    \"hidden\": false,\n    \"initialLimit\": 50,\n    \"pricingMethod\": {\n      \"guestPrice\": {\n        \"value\": \"2.00\",\n        \"currency\": \"USD\"\n      }\n    },\n    \"feeType\": \"FEE_ADDED_AT_CHECKOUT\",\n    \"salePeriod\": {\n      \"startDate\": \"2023-06-28T10:00:00Z\",\n      \"endDate\": \"2023-07-08T00:00:00Z\",\n      \"displayNotOnSale\": false\n    }\n  }\n}'"],
            "response": ["{\"ticketDefinition\": {\n  \"id\": \"7ffbabb4-708c-449b-a956-78d153cd1faa\",\n  \"eventId\": \"39d16ecc-0ec8-4764-8077-8e991f20ef9d\",\n  \"revision\": \"1\",\n  \"createdDate\": \"2023-05-25T12:06:15.815Z\",\n  \"updatedDate\": \"2023-05-25T12:06:15.815Z\",\n  \"name\": \"Gospel Concert\",\n  \"description\": \"Experience the uplifting power of gospel music at our awe-inspiring Gospel Concert. Join us for an unforgettable evening filled with soul-stirring melodies, powerful harmonies, and heartfelt performances by renowned gospel artists. Let your spirit soar as you immerse yourself in the joyous celebration of faith, music, and unity at this not-to-be-missed event.\",\n  \"policyText\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"hidden\": false,\n  \"limited\": true,\n  \"initialLimit\": 50,\n  \"actualLimit\": 50,\n  \"pricingMethod\":   {\n    \"guestPrice\":     {\n      \"value\": \"2.00\",\n      \"currency\": \"USD\"\n    },\n    \"pricingType\": \"DONATION\",\n    \"free\": false\n  },\n  \"feeType\": \"FEE_ADDED_AT_CHECKOUT\",\n  \"salePeriod\":   {\n    \"startDate\": \"2023-06-28T10:00:00Z\",\n    \"endDate\": \"2023-07-08T00:00:00Z\",\n    \"displayNotOnSale\": false\n  },\n  \"saleStatus\": \"SALE_ENDED\",\n  \"salesDetails\": null\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Create ticket definition with with adult/student prices",
            "body": ["curl -X POST 'https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d '{\n  \"ticketDefinition\": {\n    \"eventId\": \"9d720f99-1b5a-4141-9877-d32985391e18\",\n    \"name\": \"Shoemaking for Beginners\",\n    \"description\": \"Embark on a fascinating journey into the world of shoemaking at our Shoemaking for Beginners event. Discover the art and craftsmanship behind creating your own pair of shoes as our expert instructors guide you through each step of the process. From designing to pattern-making and assembling, this hands-on workshop is your gateway to mastering the fundamentals of shoemaking and unleashing your inner designer.\",\n    \"policyText\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n    \"hidden\": false,\n    \"initialLimit\": 12,\n    \"\"pricingMethod\": {\n      \"pricingOptions\": {\n        \"optionDetails\": [\n          {\n            \"id\": \"e63f7f77-ce5d-487b-b585-af30d103fbc8\",\n            \"name\": \"Regular Ticket\",\n            \"price\": {\n              \"value\": \"50.00\",\n              \"currency\": \"USD\"\n            }\n          },\n          {\n            \"optionId\": \"6e409caa-6183-47f1-b0d6-c78b7047f3b2\",\n            \"name\": \"Student Ticket\",\n            \"price\": {\n              \"value\": \"25.00\",\n              \"currency\": \"USD\"\n            }\n          }\n        ]\n      },\n    \"feeType\": \"FEE_INCLUDED\",\n    \"salePeriod\": {\n      \"startDate\": \"2023-07-14T10:00:00Z\",\n      \"endDate\": \"2023-07-22T00:00:00Z\",\n      \"displayNotOnSale\": false\n    }\n  }\n}'"],
            "response": ["{\"ticketDefinition\": {\n  \"id\": \"625115fd-31cb-4f64-b7bd-06c3137486c0\",\n  \"eventId\": \"9d720f99-1b5a-4141-9877-d32985391e18\",\n  \"revision\": \"1\",\n  \"createdDate\": \"2023-05-25T12:41:24.422Z\",\n  \"updatedDate\": \"2023-05-25T12:41:24.422Z\",\n  \"name\": \"Shoemaking for Beginners\",\n  \"description\": \"Embark on a fascinating journey into the world of shoemaking at our Shoemaking for Beginners event. Discover the art and craftsmanship behind creating your own pair of shoes as our expert instructors guide you through each step of the process. From designing to pattern-making and assembling, this hands-on workshop is your gateway to mastering the fundamentals of shoemaking and unleashing your inner designer.\",\n  \"policy_text\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"hidden\": false,\n  \"limited\": true,\n  \"initialLimit\": 12,\n  \"actualLimit\": 12,\n  \"pricingMethod\":   {\n    \"pricingOptions\": {\"optionDetails\":     [\n            {\n        \"optionId\": \"e63f7f77-ce5d-487b-b585-af30d103fbc8\",\n        \"name\": \"Regular Ticket\",\n        \"price\":         {\n          \"value\": \"50.00\",\n          \"currency\": \"USD\"\n        }\n      },\n            {\n        \"optionId\": \"6e409caa-6183-47f1-b0d6-c78b7047f3b2\",\n        \"name\": \"Student Ticket\",\n        \"price\":         {\n          \"value\": \"25.00\",\n          \"currency\": \"USD\"\n        }\n      }\n    ]},\n    \"pricingType\": \"STANDARD\",\n    \"free\": false\n  },\n  \"feeType\": \"FEE_INCLUDED\",\n  \"salePeriod\":   {\n    \"startDate\": \"2023-07-14T10:00:00Z\",\n    \"endDate\": \"2023-07-22T00:00:00Z\",\n    \"displayNotOnSale\": false\n  },\n  \"saleStatus\": \"SALE_ENDED\",\n  \"salesDetails\": null\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateTicketDefinitionRequest",
        "rpcResponseName": "CreateTicketDefinitionResponse"
      },
      "customLabels": []
    },
        {
      "name": "Delete Ticket Definition",
      "methodName": "DeleteTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["ticketDefinitionId"],
      "params": [      {
        "in": "PATH",
        "name": "ticketDefinitionId",
        "type": "string",
        "doc": " ID of the ticket definition to delete.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_DeleteTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Permanently deletes a ticket definition.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions/{ticketDefinitionId}",
        "links": [],
        "examples": [        {
          "title": "Delete ticket definition",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions/625115fd-31cb-4f64-b7bd-06c3137486c0' \\\n-H 'Authorization: <AUTH TOKEN>' \\"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteTicketDefinitionRequest",
        "rpcResponseName": "DeleteTicketDefinitionResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Ticket Definition",
      "methodName": "GetTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["ticketDefinitionId"],
      "params":       [
                {
          "in": "PATH",
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_RequestedFields_Field"]
          },
          "doc": " Predefined sets of fields to return.\n- `SALES_DETAILS`: Returns `salesDetails`.\n Requested fields.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_GetTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a ticket definition.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions/{ticketDefinitionId}",
        "links": [],
        "examples": [        {
          "title": "Get ticket definition",
          "body": ["curl -X GET 'https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions/aaf51c30-a61c-473e-96be-a42dfa5064c0' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"ticket_definition\": {\n  \"id\": \"aaf51c30-a61c-473e-96be-a42dfa5064c0\",\n  \"event_id\": \"9d720f99-1b5a-4141-9877-d32985391e18\",\n  \"revision\": \"1\",\n  \"created_date\": \"2023-05-25T11:39:26.108Z\",\n  \"updated_date\": \"2023-05-25T11:39:26.108Z\",\n  \"name\": \"Leather Workshop\",\n  \"description\": \"Step into the world of fine craftsmanship and explore the artistry of handcrafted leather goods at our captivating Leather Workshop. Join us for a hands-on experience that delves into the intricate process of transforming raw leather into exquisite creations. Immerse yourself in a creative atmosphere where seasoned leather artisans will guide you through the journey of mastering age-old techniques and unlocking your inner artisan.\",\n  \"policyText\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"hidden\": false,\n  \"limited\": true,\n  \"initialLimit\": 3,\n  \"actualLimit\": 3,\n  \"pricingMethod\":   {\n    \"fixedPrice\":     {\n      \"value\": \"200.00\",\n      \"currency\": \"USD\"\n    },\n    \"pricingType\": \"STANDARD\",\n    \"free\": false\n  },\n  \"feeType\": \"FEE_INCLUDED\",\n  \"salePeriod\":   {\n    \"startDate\": \"2023-06-07T10:00:00Z\",\n    \"endDate\": \"2023-06-30T00:00:00Z\",\n    \"displayNotOnSale\": false\n  },\n  \"saleStatus\": \"SALE_ENDED\",\n  \"salesDetails\": null\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTicketDefinitionRequest",
        "rpcResponseName": "GetTicketDefinitionResponse"
      },
      "customLabels": []
    },
        {
      "name": "Query Ticket Definitions",
      "methodName": "QueryTicketDefinitions",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params":       [
                {
          "in": "BODY",
          "name": "query",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_QueryV2",
          "doc": " Query options. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language) for more details.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_RequestedFields_Field"]
          },
          "doc": " Predefined sets of fields to return.\n- `SALES_DETAILS`: Returns `salesDetails`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryTicketDefinitions",
          "statusCode": "200",
          "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_QueryTicketDefinitionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of ticket definitions, given the provided paging, filtering, and sorting.  \nQuery Ticket Definitions runs with these defaults, which you can override:  \n- `createdDate` is sorted in `ASC` order\n- `paging.limit` is `100`\n- `paging.offset` is `0`\nFor field support for filters and sorting, see [Ticket Definitions: Supported Filters and Sorting](https://dev.wix.com/api/rest/wix-events/ticket-definitions-v3/filter-and-sort).    \nTo learn about working with _Query_ endpoints, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language), [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/pagination), and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions/query",
        "links": [],
        "examples": [        {
          "title": "Query ticket definitions by created date with sales details",
          "body": ["curl -X POST 'https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d '{\n  \"query\": {\n    \"filter\": {\n      \"createdDate\": {\n        \"$gt\": \"2023-05-25T00:00:00.000Z\"\n      }\n    },\n    \"fields\": [ \"SALES_DETAILS\" ]\n  }\n}'"],
          "response": ["{\n  \"ticketDefinitions\":   [\n        {\n      \"id\": \"625115fd-31cb-4f64-b7bd-06c3137486c0\",\n      \"eventId\": \"9d720f99-1b5a-4141-9877-d32985391e18\",\n      \"revision\": \"1\",\n      \"createdDate\": \"2023-05-25T12:41:24.422Z\",\n      \"updatedDate\": \"2023-05-25T12:41:24.422Z\",\n      \"name\": \"Shoemaking for Beginners\",\n      \"description\": \"Embark on a fascinating journey into the world of shoemaking at our Shoemaking for Beginners event. Discover the art and craftsmanship behind creating your own pair of shoes as our expert instructors guide you through each step of the process. From designing to pattern-making and assembling, this hands-on workshop is your gateway to mastering the fundamentals of shoemaking and unleashing your inner designer.\",\n      \"policyText\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n      \"hidden\": false,\n      \"limited\": true,\n      \"initialLimit\": 12,\n      \"actualLimit\": 12,\n      \"pricingMethod\":       {\n        \"pricingOptions\": {\"optionDetails\":         [\n                    {\n            \"optionId\": \"e63f7f77-ce5d-487b-b585-af30d103fbc8\",\n            \"name\": \"Regular Ticket\",\n            \"price\":             {\n              \"value\": \"50.00\",\n              \"currency\": \"USD\"\n            }\n          },\n                    {\n            \"optionId\": \"6e409caa-6183-47f1-b0d6-c78b7047f3b2\",\n            \"name\": \"Student Ticket\",\n            \"price\":             {\n              \"value\": \"25.00\",\n              \"currency\": \"USD\"\n            }\n          }\n        ]},\n        \"pricingType\": \"STANDARD\",\n        \"free\": false\n      },\n      \"feeType\": \"FEE_INCLUDED\",\n      \"salePeriod\":       {\n        \"startDate\": \"2023-07-14T10:00:00Z\",\n        \"endDate\": \"2023-07-22T00:00:00Z\",\n        \"displayNotOnSale\": false\n      },\n      \"saleStatus\": \"SALE_ENDED\",\n      \"salesDetails\":       {\n        \"unsoldCount\": 12,\n        \"soldCount\": 0,\n        \"reservedCount\": 0,\n        \"soldOut\": false\n      }\n    },\n        {\n      \"id\": \"7ffbabb4-708c-449b-a956-78d153cd1faa\",\n      \"eventId\": \"39d16ecc-0ec8-4764-8077-8e991f20ef9d\",\n      \"revision\": \"1\",\n      \"createdDate\": \"2023-05-25T12:06:15.815Z\",\n      \"updatedDate\": \"2023-05-25T12:06:15.815Z\",\n      \"name\": \"Gospel Concert\",\n      \"description\": \"Experience the uplifting power of gospel music at our awe-inspiring Gospel Concert. Join us for an unforgettable evening filled with soul-stirring melodies, powerful harmonies, and heartfelt performances by renowned gospel artists. Let your spirit soar as you immerse yourself in the joyous celebration of faith, music, and unity at this not-to-be-missed event.\",\n      \"policyText\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n      \"hidden\": false,\n      \"limited\": true,\n      \"initialLimit\": 50,\n      \"actualLimit\": 50,\n      \"pricingMethod\":       {\n        \"guestPrice\":         {\n          \"value\": \"2.00\",\n          \"currency\": \"USD\"\n        },\n        \"pricingType\": \"DONATION\",\n        \"free\": false\n      },\n      \"feeType\": \"FEE_ADDED_AT_CHECKOUT\",\n      \"salePeriod\":       {\n        \"startDate\": \"2023-06-28T10:00:00Z\",\n        \"endDate\": \"2023-07-08T00:00:00Z\",\n        \"displayNotOnSale\": false\n      },\n      \"saleStatus\": \"SALE_ENDED\",\n      \"salesDetails\":       {\n        \"unsoldCount\": 3,\n        \"soldCount\": 0,\n        \"reservedCount\": 0,\n        \"soldOut\": false\n      }\n    }\n  ],\n  \"metadata\":   {\n    \"count\": 2,\n    \"offset\": null,\n    \"total\": null,\n    \"tooManyToCount\": null,\n    \"cursors\":     {\n      \"next\": null,\n      \"prev\": null\n    }\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryTicketDefinitionsRequest",
        "rpcResponseName": "QueryTicketDefinitionsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Reorder Ticket Definitions",
      "methodName": "ReorderTicketDefinitions",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "ticketDefinitionId",
        "eventId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "referenceDefinition",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_ReorderTicketDefinitionsRequest_ReferenceDefinition",
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ReorderTicketDefinitions",
          "statusCode": "200",
          "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_ReorderTicketDefinitionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Changes ticket definitions order in an event dashboard and the list of available tickets in the ticket picker.  \n> **Note:** It is possible to use both `beforeTicketDefinitionId` and `afterTicketDefinitionId` at the same time but only the last one defined will be executed.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions/reorder",
        "links": [],
        "examples": [        {
          "title": "Reorder ticket definitions",
          "body": ["curl -X POST 'https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions/reorder' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d '{\n  \"eventId\": \"9d720f99-1b5a-4141-9877-d32985391e18\",\n  \"ticketDefinitionId\": \"625115fd-31cb-4f64-b7bd-06c3137486c0\",\n  \"beforeTicketDefinitionId\": \"7ffbabb4-708c-449b-a956-78d153cd1faa\"\n}'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ReorderTicketDefinitionsRequest",
        "rpcResponseName": "ReorderTicketDefinitionsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Update Ticket Definition",
      "methodName": "UpdateTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "ticketDefinition",
        "ticketDefinition.revision"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "ticketDefinition.id",
          "type": "string",
          "doc": " Ticket definition ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "ticketDefinition",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition",
          "doc": " Ticket definition to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "mask",
          "type": "All APIs.Ticket Definitions v3._google_protobuf_FieldMask",
          "doc": " List of exact fields to update. For example, if you define only the `name`, all other fields are ignored.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_RequestedFields_Field"]
          },
          "doc": " Requested fields.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_UpdateTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates a ticket definition.  \n Each time the ticket definition is updated, `revision` increments by 1. The existing `revision` must be included when updating the ticket definition. This ensures you're working with the latest ticket definition and prevents unintended overwrites.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions/{ticketDefinition.id}",
        "links": [],
        "examples": [        {
          "title": "Update ticket definition",
          "body": ["curl -X PATCH 'https://www.wixapis.com/events-ticket-definitions/events-ticket-definitions/v3/ticket-definitions/aaf51c30-a61c-473e-96be-a42dfa5064c0' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d '{\n  \"ticketDefinition\": {\n    \"id\": \"aaf51c30-a61c-473e-96be-a42dfa5064c0\",\n    \"eventId\": \"9d720f99-1b5a-4141-9877-d32985391e18\",\n    \"revision\": \"1\",\n    \"name\": \"Leather Workshop\",\n    \"pricingMethod\": {\n      \"fixedPrice\": {\n        \"value\": \"200.00\",\n        \"currency\": \"USD\"\n      }\n    },\n    \"feeType\": \"FEE_INCLUDED\",\n    \"salePeriod\": {\n      \"startDate\": \"2023-06-08T10:00:00Z\"\n    },\n  },\n  \"mask\": {\n    \"salePeriod.startDate\"\n  }\n}'"],
          "response": ["{\"ticketDefinition\": {\n  \"id\": \"aaf51c30-a61c-473e-96be-a42dfa5064c0\",\n  \"eventId\": \"9d720f99-1b5a-4141-9877-d32985391e18\",\n  \"revision\": \"2\",\n  \"createdDate\": \"2023-05-25T11:39:26.108Z\",\n  \"updatedDate\": \"2023-05-25T13:44:58.775Z\",\n  \"name\": \"Leather Workshop\",\n  \"description\": \"Step into the world of fine craftsmanship and explore the artistry of handcrafted leather goods at our captivating Leather Workshop. Join us for a hands-on experience that delves into the intricate process of transforming raw leather into exquisite creations. Immerse yourself in a creative atmosphere where seasoned leather artisans will guide you through the journey of mastering age-old techniques and unlocking your inner artisan.\",\n  \"policyText\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"hidden\": false,\n  \"limited\": true,\n  \"initialLimit\": 3,\n  \"actualLimit\": 3,\n  \"pricingMethod\":   {\n    \"fixedPrice\":     {\n      \"value\": \"200.00\",\n      \"currency\": \"USD\"\n    },\n    \"pricingType\": \"STANDARD\",\n    \"free\": false\n  },\n  \"feeType\": \"FEE_INCLUDED\",\n  \"salePeriod\":   {\n    \"startDate\": \"2023-06-08T10:00:00Z\",\n    \"endDate\": \"2023-06-30T00:00:00Z\",\n    \"displayNotOnSale\": false\n  },\n  \"saleStatus\": \"SALE_STARTED\",\n  \"salesDetails\": null\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateTicketDefinitionRequest",
        "rpcResponseName": "UpdateTicketDefinitionResponse"
      },
      "customLabels": []
    }
  ],
  "events":   [
        {
      "type": "_wix_events_ticketdef_v3_TicketDefinitionUpdatedDomainEvent",
      "name": "Ticket Definition Updated Webhook",
      "docs":       {
        "summary": " Triggered when a ticket definition is updated.\n",
        "src": "https://github.com/wix-private/events/tree/master/events-services/events-ticket-definitions/src/main/proto/wix/events/ticketdef/v3/ticket_definition_management.proto"
      },
      "topic": "domain_events_wix.events.v3.ticket_definition",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "customLabels": [],
      "eventType": "wix.events.v3.ticket_definition_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_wix_events_ticketdef_v3_TicketDefinitionDeletedDomainEvent",
      "name": "Ticket Definition Deleted Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/events-services/events-ticket-definitions/src/main/proto/wix/events/ticketdef/v3/ticket_definition_management.proto"
      },
      "topic": "domain_events_wix.events.v3.ticket_definition",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "customLabels": [],
      "eventType": "wix.events.v3.ticket_definition_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_wix_events_ticketdef_v3_TicketDefinitionCreatedDomainEvent",
      "name": "Ticket Definition Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/events-services/events-ticket-definitions/src/main/proto/wix/events/ticketdef/v3/ticket_definition_management.proto"
      },
      "topic": "domain_events_wix.events.v3.ticket_definition",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "customLabels": [],
      "eventType": "wix.events.v3.ticket_definition_created",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_wix_events_ticketdef_v3_TicketDefinitionUpdatedDomainEvent",
      "displayName": "Ticket Definition Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"7cf9dc1b-be64-4394-b748-21de6bed31f1\",\n  \"entityFqdn\" : \"wix.events.ticketdef.v3.ticket_definition\",\n  \"slug\" : \"sale_period_updated\",\n  \"entityId\" : \"aaf51c30-a61c-473e-96be-a42dfa5064c0\",\n  \"actionEvent\" : {\n    \"bodyAsJson\" : {\n      \"afterUpdate\" : {\n        \"startDate\" : \"2023-06-08T10:00:00Z\",\n        \"endDate\" : \"2023-06-30T00:00:00Z\",\n        \"displayNotOnSale\" : false\n      }\n    }\n  },\n  \"eventTime\" : \"2023-05-25T13:44:59.129216Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v3.ticket_definition`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinitionEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "TicketDefinition ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_TicketDefinitionEntityUpdatedEvent",
      "displayName": "Ticket Definition Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_SalePeriodUpdatedDomainEvent",
      "displayName": "Sale Period Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v3.ticket_definition`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `sale_period_updated`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_SalePeriodUpdatedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "SalePeriodUpdated ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_SalePeriodUpdatedActionEvent",
      "displayName": "Sale Period Updated Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_SalePeriodUpdated",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_TicketDefinitionDeletedDomainEvent",
      "displayName": "Ticket Definition Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"85deb868-5896-4a44-8f0a-3544eb432216\",\n  \"entityFqdn\" : \"wix.events.ticketdef.v3.ticket_definition\",\n  \"slug\" : \"deleted\",\n  \"entityId\" : \"077766f0-ffa4-4fa1-bdf8-dbb0439c1892\",\n  \"deletedEvent\" : { },\n  \"eventTime\" : \"2023-05-25T10:57:03.945444Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v3.ticket_definition`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinitionEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "TicketDefinition ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_TicketDefinitionEntityDeletedEvent",
      "displayName": "Ticket Definition Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_TicketDefinitionCreatedDomainEvent",
      "displayName": "Ticket Definition Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"9aca3895-8c58-48b7-84a5-35bcd431c125\",\n  \"entityFqdn\" : \"wix.events.ticketdef.v3.ticket_definition\",\n  \"slug\" : \"created\",\n  \"entityId\" : \"aaf51c30-a61c-473e-96be-a42dfa5064c0\",\n  \"createdEvent\" : {\n    \"entityAsJson\" : {\n      \"id\" : \"aaf51c30-a61c-473e-96be-a42dfa5064c0\",\n      \"eventId\" : \"9d720f99-1b5a-4141-9877-d32985391e18\",\n      \"revision\" : \"1\",\n      \"createdDate\" : \"2023-05-25T11:39:26.108Z\",\n      \"updatedDate\" : \"2023-05-25T11:39:26.108Z\",\n      \"name\" : \"Leather Workshop\",\n      \"hidden\" : false,\n      \"limited\" : true,\n      \"initialLimit\" : 3,\n      \"actualLimit\" : 3,\n      \"pricingMethod\" : {\n        \"fixedPrice\" : {\n          \"value\" : \"200.00\",\n          \"currency\" : \"USD\"\n        },\n        \"pricingType\" : \"STANDARD\",\n        \"free\" : false\n      },\n      \"feeType\" : \"FEE_INCLUDED\",\n      \"salePeriod\" : {\n        \"startDate\" : \"2023-06-07T10:00:00Z\",\n        \"endDate\" : \"2023-06-30T00:00:00Z\",\n        \"displayNotOnSale\" : false\n      },\n      \"saleStatus\" : \"SALE_SCHEDULED\"\n    }\n  },\n  \"eventTime\" : \"2023-05-25T11:39:26.278160Z\",\n  \"triggeredByAnonymizeRequest\" : false,\n  \"entityEventSequence\" : \"1\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v3.ticket_definition`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinitionEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "TicketDefinition ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_TicketDefinitionEntityCreatedEvent",
      "displayName": "Ticket Definition Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_upstream_wix_common_Money",
      "displayName": "Money Object",
      "locations": [],
      "docs":       {
        "summary": " Money.\n Default format to use. Sufficiently compliant with majority of standards: w3c, ISO 4217, ISO 20022, ISO 8583:2003.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative.\n"
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " Currency code. Must be a valid [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) currency code (e.g., USD).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_TicketDefinition",
      "displayName": "Ticket Definition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"ticketDefinition\" : {\n    \"id\" : \"aaf51c30-a61c-473e-96be-a42dfa5064c0\",\n    \"eventId\" : \"9d720f99-1b5a-4141-9877-d32985391e18\",\n    \"revision\" : \"1\",\n    \"createdDate\" : \"2023-05-25T11:39:26.108Z\",\n    \"updatedDate\" : \"2023-05-25T11:39:26.108Z\",\n    \"name\" : \"Leather Workshop\",\n    \"description\" : \"Step into the world of fine craftsmanship and explore the artistry of handcrafted leather goods at our captivating Leather Workshop. Join us for a hands-on experience that delves into the intricate process of transforming raw leather into exquisite creations. Immerse yourself in a creative atmosphere where seasoned leather artisans will guide you through the journey of mastering age-old techniques and unlocking your inner artisan.\",\n    \"policy_text\" : \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n    \"hidden\" : false,\n    \"limited\" : true,\n    \"initialLimit\" : 3,\n    \"actualLimit\" : 3,\n    \"pricingMethod\" : {\n      \"fixedPrice\" : {\n        \"value\" : \"200.00\",\n        \"currency\" : \"USD\"\n      },\n      \"pricingType\" : \"STANDARD\",\n      \"free\" : false\n    },\n    \"feeType\" : \"FEE_INCLUDED\",\n    \"salePeriod\" : {\n      \"startDate\" : \"2023-06-07T10:00:00Z\",\n      \"endDate\" : \"2023-06-30T00:00:00Z\",\n      \"displayNotOnSale\" : false\n    },\n    \"saleStatus\" : \"SALE_ENDED\",\n    \"salesDetails\" : {\n      \"unsoldCount\" : 3,\n      \"soldCount\" : 0,\n      \"reservedCount\" : 0,\n      \"soldOut\" : false\n    }\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Ticket definition ID.\n",
          "readOnly": true
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID to which the ticket definition belongs.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Revision number, which increments by 1 each time the ticket definition is updated. To prevent conflicting changes, the existing revision must be used when updating a ticket definition.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time when the ticket definition was created in `yyyy-mm-ddThh:mm:sssZ` format.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time of the ticket definition's latest update in `yyyy-mm-ddThh:mm:sssZ` format.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Ticket definition name.\n\nMin: 1 character  \nMax: 30 characters\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Ticket definition description.\n\nMin: 1 character  \nMax: 500 characters\n"
        },
                {
          "name": "policyText",
          "type": "string",
          "doc": " Ticket definition policy.\n\nMin: 1 character  \nMax: 1000 characters\n"
        },
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Whether this ticket definition is hidden to customers and cannot be purchased.\n"
        },
                {
          "name": "limited",
          "type": "boolean",
          "doc": " Whether the ticket has a limited maximum quantity.\n",
          "readOnly": true
        },
                {
          "name": "initialLimit",
          "type": "integer",
          "doc": " The maximum number of tickets that can be sold for the event when first defining the event. If a seating map is defined after you created a ticket definition, this property is ignored and `actualLimit` is used instead.\n"
        },
                {
          "name": "actualLimit",
          "type": "integer",
          "doc": " The maximum number of tickets that can be sold for the event after adding a seating map to the event. If no seating map is defined, this property is the same as `initialLimit`.\n",
          "readOnly": true
        },
                {
          "name": "pricingMethod",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_PricingMethod",
          "doc": " Ticket pricing method.\n"
        },
                {
          "name": "feeType",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_FeeTypeEnum_Type",
          "doc": " Whether fee is included in the ticket price or customer pays it additionally at checkout. <br> <br> `FEE_INCLUDED`: The fee is deducted from the ticket price for a seller. For example, if you're selling tickets for $10, then a service fee of $0.25 will be deducted from the price and you'll get $9.75 <br> <br> `FEE_ADDED_AT_CHECKOUT`: The fee is shown in addition to the ticket price at checkout and a guest pays the fee. For example, if you sell tickets for $10, a customer will see a service fee of $0.25 and will pay $10.25 in total.\n"
        },
                {
          "name": "salePeriod",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_SalePeriod",
          "doc": " Ticket sale period.\n"
        },
                {
          "name": "saleStatus",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_SaleStatusEnum_Status",
          "doc": " Ticket sale status. <br> <br> `SALE_SCHEDULED`: Tickets are not on sale yet. <br> <br> `SALE_STARTED`: Tickets are on sale. <br> <br> `SALE_ENDED`: Tickets are not on sale.\n",
          "readOnly": true
        },
                {
          "name": "salesDetails",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_SalesDetails",
          "doc": " Ticket sales information.\n"
        },
                {
          "name": "limitPerCheckout",
          "type": "integer",
          "doc": " Limit of tickets that can be purchased per checkout.\n Takes the smaller value between event ticket_limit_per_order, actual_limit and sales_details.unsold_count values.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_PricingMethod",
      "displayName": "Pricing Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "price",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_PricingMethod_price",
          "doc": ""
        },
                {
          "name": "pricingType",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_PricingTypeEnum_Type",
          "doc": " Ticket price type. <br> <br> `STANDARD`: All money goes to a seller. Applies to all ticket pricing methods except for `guestPrice`. <br> <br> `DONATION`: All collected money is a donation. This pricing type is automatically assigned when the `guestPrice` pricing method is selected.\n",
          "readOnly": true
        },
                {
          "name": "free",
          "type": "boolean",
          "doc": " Whether the ticket is free. To create a free ticket, enter `0` in the `pricingMethod.fixedPrice.value` field. \n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_PricingMethod_price",
      "displayName": "price Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fixedPrice",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_Money",
          "doc": " Same ticket price for everyone.\n"
        },
                {
          "name": "guestPrice",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_Money",
          "doc": " Minimum price guests must pay for a ticket. The price can be updated to a higher amount by a guest during the checkout.\n"
        },
                {
          "name": "pricingOptions",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_PricingOptions",
          "doc": " Sets of various ticket prices. For example, you can charge different prices for children and adults.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketdef_v3_PricingOptions",
      "displayName": "Pricing Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "optionDetails",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_OptionDetails"]
        },
        "doc": " Ticket price option details.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_OptionDetails",
      "displayName": "Option Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "optionId",
          "type": "string",
          "doc": " Ticket price option ID.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Ticket price option name, such as \"Child Ticket\".\n"
        },
                {
          "name": "price",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_Money",
          "doc": " Ticket price.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_SalePeriod",
      "displayName": "Sale Period Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "startDate",
          "type": "string",
          "doc": " Ticket sale start timestamp in `yyyy-mm-ddThh:mm:sssZ` format.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Ticket sale end timestamp in `yyyy-mm-ddThh:mm:sssZ` format.\n"
        },
                {
          "name": "displayNotOnSale",
          "type": "boolean",
          "doc": " Whether to display the ticket if it's not available to buy.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_SalesDetails",
      "displayName": "Sales Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "unsoldCount",
          "type": "integer",
          "doc": " Number of tickets that have not been purchased yet. The field is `null` if the ticket quantity is unlimited.\n",
          "readOnly": true
        },
                {
          "name": "soldCount",
          "type": "integer",
          "doc": " Number of purchased tickets.\n",
          "readOnly": true
        },
                {
          "name": "reservedCount",
          "type": "integer",
          "doc": " Number of reserved tickets.\n",
          "readOnly": true
        },
                {
          "name": "soldOut",
          "type": "boolean",
          "doc": " Whether the tickets are sold out.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Ticket Definitions v3._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Ticket Definitions v3._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deletedEntityAsJson",
        "type": "string",
        "doc": " Entity that was deleted\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Unique event ID.\n Allows clients to ignore duplicate webhooks.\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " ID of the entity associated with the event.\n"
        },
                {
          "name": "body",
          "type": "All APIs.Ticket Definitions v3._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " Event timestamp.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether the event was triggered as a result of a privacy regulation application\n (for example, GDPR).\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        },
                {
          "name": "entityEventSequence",
          "type": "string",
          "doc": " A sequence number defining the order of updates to the underlying entity.\n For example, given that some entity was updated at 16:00 and than again at 16:01,\n  it is guaranteed that the sequence number of the second update is strictly higher than the first.\n As the consumer, you can use this value to ensure that you handle messages in the correct order.\n To do so, you will need to persist this number on your end, and compare the sequence number from the\n  message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Ticket Definitions v3._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Ticket Definitions v3._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Ticket Definitions v3._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Ticket Definitions v3._wix_common_domainevents_ActionEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_events_EventDeleted",
      "displayName": "Event Deleted Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": "Event deleted timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": " Event creator user ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Money",
      "displayName": "Money Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "string",
          "doc": " **Deprecated:** Use `value` instead.\n",
          "deprecated": true
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " ISO 4217 format of the currency i.e. `USD`.\n"
        },
                {
          "name": "value",
          "type": "string",
          "doc": " Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_SiteUrl",
      "displayName": "Site Url Object",
      "locations": [],
      "docs":       {
        "summary": " Site URL components\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "base",
          "type": "string",
          "doc": " Base URL. For premium sites, this will be the domain.\n For free sites, this would be site URL (e.g `mysite.wixsite.com/mysite`)\n"
        },
                {
          "name": "path",
          "type": "string",
          "doc": " The path to that page - e.g `/my-events/weekly-meetup-2`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Agenda",
      "displayName": "Agenda Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether the schedule is enabled for the event.\n"
        },
                {
          "name": "pageUrl",
          "type": "All APIs.Ticket Definitions v3._wix_events_SiteUrl",
          "doc": " Agenda page URL.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_Category",
      "displayName": "Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Category ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Category name.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Category creation timestamp.\n",
          "readOnly": true
        },
                {
          "name": "assignedEventsCount",
          "type": "integer",
          "doc": " Assigned events count. Deleted events are excluded.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "counts",
          "type": "All APIs.Ticket Definitions v3._wix_events_categories_CategoryCounts",
          "doc": " Assigned and assigned draft event counts.\n",
          "readOnly": true
        },
                {
          "name": "states",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_CategoryState_State"]
          },
          "doc": " Category state. Default - MANUAL.\n WIX_EVENTS.MANAGE_AUTO_CATEGORIES permission is required to use other states.\n Field will be ignored on update requests.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_CategoryCounts",
      "displayName": "Category Counts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "assignedEventsCount",
          "type": "integer",
          "doc": " Assigned events count. Deleted events are excluded.\n"
        },
                {
          "name": "assignedDraftEventsCount",
          "type": "integer",
          "doc": " Assigned draft events count.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_Form",
      "displayName": "Form Object",
      "locations": [],
      "docs":       {
        "summary": " The form defines which elements are rendered in the Wix UI during the registration process (RSVP or checkout).\n It also contains customizable messages and labels.\n\n\n A form is an ordered list of controls (blocks), which accept guest information into a field input.\n\n Each control contains one or more nested inputs. For example, `Name` control has two inputs:\n - First Name\n - Last Name\n\n By default, name and email controls are always required and are pinned to the top of the form.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "controls",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_form_InputControl"]
          },
          "doc": " Nested fields as an ordered list.\n"
        },
                {
          "name": "messages",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_FormMessages",
          "doc": " Set of configured form messages.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "additionalLabelsMapEntry",
      "displayName": "additional Labels Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Additional labels for multi-valued fields such as address.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_Input",
      "displayName": "Input Object",
      "locations": [],
      "docs":       {
        "summary": " An input of one or multiple text values\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Field name.\n"
        },
                {
          "name": "array",
          "type": "boolean",
          "doc": " Deprecated: use `ValueType.TEXT_ARRAY`.\n",
          "deprecated": true
        },
                {
          "name": "label",
          "type": "string",
          "doc": " Main field label\n"
        },
                {
          "name": "additionalLabels",
          "type": "All APIs.Ticket Definitions v3.additionalLabelsMapEntry",
          "doc": "Set of key-value pairs. Additional labels for multi-valued fields such as address.\n"
        },
                {
          "name": "options",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Predefined choice options for fields, such as dropdown.\n"
        },
                {
          "name": "mandatory",
          "type": "boolean",
          "doc": " Whether field is mandatory.\n"
        },
                {
          "name": "maxLength",
          "type": "integer",
          "doc": " Maximum number of accepted characters (relevant for text fields).\n"
        },
                {
          "name": "type",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_ValueType",
          "doc": " Type which determines field format.\n Used to validate submitted response.\n"
        },
                {
          "name": "maxSize",
          "type": "integer",
          "doc": " A maximum accepted values for array input.\n Only applicable for inputs of valueType: TEXT_ARRAY.\n"
        },
                {
          "name": "defaultOptionSelection",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_OptionSelection",
          "doc": " Preselected option.\n Currently only applicable for dropdown.\n"
        },
                {
          "name": "labels",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_form_Label"]
          },
          "doc": " Additional labels for multi-valued fields such as address.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_OptionSelection",
      "displayName": "Option Selection Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "selectedOption",
        "type": "All APIs.Ticket Definitions v3._wix_events_form_OptionSelection_SelectedOption",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_OptionSelection_SelectedOption",
      "displayName": "Selected Option Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "optionIndex",
          "type": "integer",
          "doc": " 0-based index from predefined `input.options` which is selected initially.\n"
        },
                {
          "name": "placeholderText",
          "type": "string",
          "doc": " Placeholder hint describing expected choices (such as \"Please select\").\n Considered an empty choice.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_form_Label",
      "displayName": "Label Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Field name.\n"
        },
                {
          "name": "label",
          "type": "string",
          "doc": " Field label.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_InputControl",
      "displayName": "Input Control Object",
      "locations": [],
      "docs":       {
        "summary": " A block of nested fields.\n Used to aggregate similar inputs like First Name and Last Name.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_InputControlType",
          "doc": " Field control type.\n"
        },
                {
          "name": "system",
          "type": "boolean",
          "doc": " Whether control is mandatory (such as name & email). When true, only label can be changed.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Deprecated: Use `id`.\n",
          "deprecated": true
        },
                {
          "name": "inputs",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_form_Input"]
          },
          "doc": " Child inputs.\n"
        },
                {
          "name": "label",
          "type": "string",
          "doc": " Deprecated: use `inputs.label`.\n",
          "deprecated": true
        },
                {
          "name": "orderIndex",
          "type": "integer",
          "doc": " Field controls are sorted by this value in ascending order.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Unique control ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_FormMessages",
      "displayName": "Form Messages Object",
      "locations": [],
      "docs":       {
        "summary": " Defines form messages shown in UI before, during, and after registration flow.\n It enables configuration of form titles, response labels, \"thank you\" messages, and call-to-action texts.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rsvp",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_RsvpFormMessages",
          "doc": " RSVP form messages.\n"
        },
                {
          "name": "checkout",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_CheckoutFormMessages",
          "doc": " Checkout form messages.\n"
        },
                {
          "name": "registrationClosed",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_RegistrationClosedMessages",
          "doc": " Messages shown when event registration is closed.\n"
        },
                {
          "name": "ticketsUnavailable",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_TicketsUnavailableMessages",
          "doc": " Messages shown when event tickets are unavailable.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RsvpFormMessages_Positive_ResponseConfirmation",
      "displayName": "Response Confirmation Object",
      "locations": [],
      "docs":       {
        "summary": " Confirmation messages shown after registration.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Confirmation message title.\n"
        },
                {
          "name": "message",
          "type": "string",
          "doc": " Confirmation message text.\n"
        },
                {
          "name": "addToCalendarActionLabel",
          "type": "string",
          "doc": " \"Add to calendar\" call-to-action label text.\n"
        },
                {
          "name": "shareActionLabel",
          "type": "string",
          "doc": " \"Share event\" call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RsvpFormMessages_Positive",
      "displayName": "Positive Object",
      "locations": [],
      "docs":       {
        "summary": " Set of messages shown during registration when RSVP response is positive.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Main form title for positive response.\n"
        },
                {
          "name": "confirmation",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_RsvpFormMessages_Positive_ResponseConfirmation",
          "doc": " Confirmation messages shown after registration.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RsvpFormMessages_Negative_ResponseConfirmation",
      "displayName": "Response Confirmation Object",
      "locations": [],
      "docs":       {
        "summary": " Confirmation messages shown after registration.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Confirmation message title.\n"
        },
                {
          "name": "shareActionLabel",
          "type": "string",
          "doc": " \"Share event\" call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RsvpFormMessages_Negative",
      "displayName": "Negative Object",
      "locations": [],
      "docs":       {
        "summary": " A set of messages shown during registration with negative response\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Main form title for negative response.\n"
        },
                {
          "name": "confirmation",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_RsvpFormMessages_Negative_ResponseConfirmation",
          "doc": " Confirmation messages shown after registration.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RsvpFormMessages",
      "displayName": "Rsvp Form Messages Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rsvpYesOption",
          "type": "string",
          "doc": " Label text indicating RSVP `YES` response.\n"
        },
                {
          "name": "rsvpNoOption",
          "type": "string",
          "doc": " Label text indicating RSVP `NO` response.\n"
        },
                {
          "name": "positiveMessages",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_RsvpFormMessages_Positive",
          "doc": " Messages shown for RSVP = `YES`.\n"
        },
                {
          "name": "waitlistMessages",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_RsvpFormMessages_Positive",
          "doc": " Messages shown for RSVP = `WAITING` (when event is full and waitlist is available).\n"
        },
                {
          "name": "negativeMessages",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_RsvpFormMessages_Negative",
          "doc": " Messages shown for RSVP = `NO`.\n"
        },
                {
          "name": "submitActionLabel",
          "type": "string",
          "doc": " \"Submit form\" call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_CheckoutFormMessages_ResponseConfirmation",
      "displayName": "Response Confirmation Object",
      "locations": [],
      "docs":       {
        "summary": " Confirmation messages shown after checkout.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Confirmation message title.\n"
        },
                {
          "name": "message",
          "type": "string",
          "doc": " Confirmation message text.\n"
        },
                {
          "name": "downloadTicketsLabel",
          "type": "string",
          "doc": " \"Download tickets\" call-to-action label text.\n"
        },
                {
          "name": "addToCalendarLabel",
          "type": "string",
          "doc": " \"Add to calendar\" call-to-action label text.\n"
        },
                {
          "name": "shareEventLabel",
          "type": "string",
          "doc": " \"Share event\" call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_CheckoutFormMessages",
      "displayName": "Checkout Form Messages Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Main form title for response.\n"
        },
                {
          "name": "submitActionLabel",
          "type": "string",
          "doc": " Submit form call-to-action label text.\n"
        },
                {
          "name": "confirmation",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_CheckoutFormMessages_ResponseConfirmation",
          "doc": " Confirmation messages shown after checkout.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RegistrationClosedMessages",
      "displayName": "Registration Closed Messages Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "message",
          "type": "string",
          "doc": " Message shown when event registration is closed.\n"
        },
                {
          "name": "exploreEventsActionLabel",
          "type": "string",
          "doc": " \"Explore other events\" call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_TicketsUnavailableMessages",
      "displayName": "Tickets Unavailable Messages Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "message",
          "type": "string",
          "doc": " Message shown when event tickets are unavailable.\n"
        },
                {
          "name": "exploreEventsActionLabel",
          "type": "string",
          "doc": " \"Explore other events\" call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CalendarLinks",
      "displayName": "Calendar Links Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "google",
          "type": "string",
          "doc": " \"Add to Google calendar\" URL.\n"
        },
                {
          "name": "ics",
          "type": "string",
          "doc": " \"Download ICS calendar file\" URL.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Tag",
      "displayName": "Tag Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "string",
          "doc": " SEO tag type. \n\n\n Supported values: `title`, `meta`, `script`, `link`.\n"
        },
                {
          "name": "props",
          "type": "struct",
          "doc": " A `{'key':'value'}` pair object where each SEO tag property (`'name'`, `'content'`, `'rel'`, `'href'`) contains a value.\n For example: `{'name': 'description', 'content': 'the description itself'}`.\n"
        },
                {
          "name": "meta",
          "type": "struct",
          "doc": " SEO tag meta data. For example, `{height: 300, width: 240}`.\n"
        },
                {
          "name": "children",
          "type": "string",
          "doc": " SEO tag inner content. For example, `<title> inner content <\/title>`.\n"
        },
                {
          "name": "custom",
          "type": "boolean",
          "doc": " Whether the tag is a custom tag.\n"
        },
                {
          "name": "disabled",
          "type": "boolean",
          "doc": " Whether the tag is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Settings",
      "displayName": "Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "preventAutoRedirect",
          "type": "boolean",
          "doc": " Whether the Auto Redirect feature, which creates `301 redirects` on a slug change, is enabled. \n\n\n Default: `false` (Auto Redirect is enabled.)\n"
        },
                {
          "name": "keywords",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._com_wixpress_advanced_seo_SeoSchema_Keyword"]
          },
          "doc": " User-selected keyword terms for a specific page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Keyword",
      "displayName": "Keyword Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "term",
          "type": "string",
          "doc": " Keyword value.\n"
        },
                {
          "name": "isMain",
          "type": "boolean",
          "doc": " Whether the keyword is the main focus keyword.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema",
      "displayName": "Seo Schema Object",
      "locations": [],
      "docs":       {
        "summary": " The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\n The search engines use this information for ranking purposes, or to display snippets in the search results.\n This data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._com_wixpress_advanced_seo_SeoSchema_Tag"]
          },
          "doc": " SEO tag information.\n"
        },
                {
          "name": "settings",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_advanced_seo_SeoSchema_Settings",
          "doc": " SEO general settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_SeoSettings",
      "displayName": "Seo Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "slug",
          "type": "string",
          "doc": " URL slug\n"
        },
                {
          "name": "advancedSeoData",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_advanced_seo_SeoSchema",
          "doc": " Advanced SEO data\n"
        },
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Hidden from SEO Site Map\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Address",
      "displayName": "Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": " country code\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " subdivision (usually state or region) code according to ISO 3166-2\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " city name\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " zip/postal code\n"
        },
                {
          "name": "street",
          "type": "All APIs.Ticket Definitions v3._com_wix_events_upstream_wix_common_Address_street",
          "doc": ""
        },
                {
          "name": "addressLine2",
          "type": "string",
          "doc": " Free text providing more detailed address info. Usually contains Apt, Suite, Floor\n"
        },
                {
          "name": "formattedAddress",
          "type": "string",
          "doc": " A string containing the human-readable address of this location\n"
        },
                {
          "name": "hint",
          "type": "string",
          "doc": " Free text for human-to-human textual orientation aid purposes\n"
        },
                {
          "name": "geocode",
          "type": "All APIs.Ticket Definitions v3._com_wix_events_upstream_wix_common_AddressLocation",
          "doc": " coordinates of the physical address\n"
        },
                {
          "name": "countryFullname",
          "type": "string",
          "doc": " country full-name\n"
        },
                {
          "name": "subdivisions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._com_wix_events_upstream_wix_common_Subdivision"]
          },
          "doc": " multi-level subdivisions from top to bottom\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Address_street",
      "displayName": "street Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "streetAddress",
          "type": "All APIs.Ticket Definitions v3._com_wix_events_upstream_wix_common_StreetAddress",
          "doc": " a break down of the street to number and street name\n"
        },
                {
          "name": "addressLine",
          "type": "string",
          "doc": " Main address line (usually street and number) as free text\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Subdivision",
      "displayName": "Subdivision Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " subdivision short code\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " subdivision full-name\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": " street number\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " street name\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_AddressLocation",
      "displayName": "Address Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": " address latitude coordinates\n"
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": " address longitude coordinates\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n"
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text. Optional.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Event",
      "displayName": "Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Event ID.\n",
          "readOnly": true
        },
                {
          "name": "location",
          "type": "All APIs.Ticket Definitions v3._wix_events_Location",
          "doc": " Event location.\n"
        },
                {
          "name": "scheduling",
          "type": "All APIs.Ticket Definitions v3._wix_events_Scheduling",
          "doc": " Event scheduling.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Event description.\n"
        },
                {
          "name": "about",
          "type": "string",
          "doc": " Rich-text content displayed in Wix UI - \"About Event\" section (HTML).\n"
        },
                {
          "name": "mainImage",
          "type": "All APIs.Ticket Definitions v3._com_wix_events_upstream_wix_common_Image",
          "doc": " Main event image.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " Event slug URL (generated from event title).\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " ISO 639-1 language code of the event (used in content translations).\n"
        },
                {
          "name": "created",
          "type": "string",
          "doc": " Event creation timestamp.\n"
        },
                {
          "name": "modified",
          "type": "string",
          "doc": " Event modified timestamp.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Ticket Definitions v3._wix_events_EventStatus",
          "doc": " Event status.\n"
        },
                {
          "name": "registration",
          "type": "All APIs.Ticket Definitions v3._wix_events_Registration",
          "doc": " RSVP or ticketing registration details.\n"
        },
                {
          "name": "calendarLinks",
          "type": "All APIs.Ticket Definitions v3._wix_events_CalendarLinks",
          "doc": " \"Add to calendar\" URLs.\n"
        },
                {
          "name": "eventPageUrl",
          "type": "All APIs.Ticket Definitions v3._wix_events_SiteUrl",
          "doc": " Event page URL components.\n"
        },
                {
          "name": "form",
          "type": "All APIs.Ticket Definitions v3._wix_events_form_Form",
          "doc": " Event registration form.\n"
        },
                {
          "name": "dashboard",
          "type": "All APIs.Ticket Definitions v3._wix_events_Dashboard",
          "doc": " Event dashboard summary of RSVP / ticket sales.\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": " Instance ID of the site where event is hosted.\n"
        },
                {
          "name": "guestListConfig",
          "type": "All APIs.Ticket Definitions v3._wix_events_GuestListConfig",
          "doc": " Guest list configuration.\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": " Event creator user ID.\n"
        },
                {
          "name": "feed",
          "type": "All APIs.Ticket Definitions v3._wix_events_Feed",
          "doc": " Event discussion feed. For internal use.\n"
        },
                {
          "name": "onlineConferencing",
          "type": "All APIs.Ticket Definitions v3._wix_events_OnlineConferencing",
          "doc": " Online conferencing details.\n"
        },
                {
          "name": "seoSettings",
          "type": "All APIs.Ticket Definitions v3._wix_events_SeoSettings",
          "doc": " SEO settings.\n"
        },
                {
          "name": "assignedContactsLabel",
          "type": "string",
          "doc": " Assigned contacts label key.\n"
        },
                {
          "name": "agenda",
          "type": "All APIs.Ticket Definitions v3._wix_events_Agenda",
          "doc": " Agenda details.\n"
        },
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_categories_Category"]
          },
          "doc": " Categories this event is assigned to.\n"
        },
                {
          "name": "eventDisplaySettings",
          "type": "All APIs.Ticket Definitions v3._wix_events_EventDisplaySettings",
          "doc": " Visual settings for event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_MapCoordinates",
      "displayName": "Map Coordinates Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "lat",
          "type": "number",
          "doc": " Latitude.\n"
        },
                {
          "name": "lng",
          "type": "number",
          "doc": " Longitude.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Location",
      "displayName": "Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Location name.\n"
        },
                {
          "name": "coordinates",
          "type": "All APIs.Ticket Definitions v3._wix_events_MapCoordinates",
          "doc": " Location map coordinates.\n"
        },
                {
          "name": "address",
          "type": "string",
          "doc": " Single line address representation.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Ticket Definitions v3._wix_events_Location_LocationType",
          "doc": " Location type.\n"
        },
                {
          "name": "fullAddress",
          "type": "All APIs.Ticket Definitions v3._com_wix_events_upstream_wix_common_Address",
          "doc": " Full address derived from formatted single line `address`.\n When `full_address` is used to create or update the event, deprecated `address` and `coordinates` are ignored.\n If provided `full_address` has empty `formatted_address` or `coordinates`, it will be auto-completed using Atlas service.\n\n Migration notes:\n - `full_address.formatted_address` is equivalent to `address`.\n - `full_address.geocode` is equivalent to `coordinates`.\n"
        },
                {
          "name": "tbd",
          "type": "boolean",
          "doc": " Defines event location as TBD (To Be Determined).\n When event location is not yet defined, `name` is displayed instead of location address.\n `coordinates`, `address`, `type` and `full_address` are not required when location is TBD.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ScheduleConfig",
      "displayName": "Schedule Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleTbd",
          "type": "boolean",
          "doc": " Defines event as TBD (To Be Determined) schedule.\n When event time is not yet defined, TBD message is displayed instead of event start and end times.\n `startDate`, `endDate` and `timeZoneId` are not required when schedule is TBD.\n"
        },
                {
          "name": "scheduleTbdMessage",
          "type": "string",
          "doc": " TBD message.\n"
        },
                {
          "name": "startDate",
          "type": "string",
          "doc": " Event start timestamp.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Event end timestamp.\n"
        },
                {
          "name": "timeZoneId",
          "type": "string",
          "doc": " Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`.\n"
        },
                {
          "name": "endDateHidden",
          "type": "boolean",
          "doc": " Whether end date is hidden in the formatted schedule.\n"
        },
                {
          "name": "showTimeZone",
          "type": "boolean",
          "doc": " Whether time zone is displayed in formatted schedule.\n"
        },
                {
          "name": "recurrences",
          "type": "All APIs.Ticket Definitions v3._wix_events_Recurrences",
          "doc": " Event recurrences.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Recurrences",
      "displayName": "Recurrences Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "occurrences",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_Occurrence"]
          },
          "doc": " Event occurrences.\n"
        },
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Recurring event category ID.\n",
          "readOnly": true
        },
                {
          "name": "status",
          "type": "All APIs.Ticket Definitions v3._wix_events_RecurrenceStatus_Status",
          "doc": " Recurrence status.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Occurrence",
      "displayName": "Occurrence Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "startDate",
          "type": "string",
          "doc": " Event start timestamp.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Event end timestamp.\n"
        },
                {
          "name": "timeZoneId",
          "type": "string",
          "doc": " Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`.\n"
        },
                {
          "name": "showTimeZone",
          "type": "boolean",
          "doc": " Whether time zone is displayed in formatted schedule.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Scheduling",
      "displayName": "Scheduling Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "config",
          "type": "All APIs.Ticket Definitions v3._wix_events_ScheduleConfig",
          "doc": " Schedule configuration.\n"
        },
                {
          "name": "formatted",
          "type": "string",
          "doc": " Formatted schedule representation.\n"
        },
                {
          "name": "startDateFormatted",
          "type": "string",
          "doc": " Formatted start date of the event (empty for TBD schedules).\n"
        },
                {
          "name": "startTimeFormatted",
          "type": "string",
          "doc": " Formatted start time of the event (empty for TBD schedules).\n"
        },
                {
          "name": "endDateFormatted",
          "type": "string",
          "doc": " Formatted end date of the event (empty for TBD schedules or when end date is hidden).\n"
        },
                {
          "name": "endTimeFormatted",
          "type": "string",
          "doc": " Formatted end time of the event (empty for TBD schedules or when end date is hidden).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RsvpCollectionConfig",
      "displayName": "Rsvp Collection Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rsvpStatusOptions",
          "type": "All APIs.Ticket Definitions v3._wix_events_RsvpCollectionConfig_RsvpStatusOptions",
          "doc": " Defines the supported RSVP statuses.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Total guest limit available to register to the event.\n Additional guests per RSVP are counted towards total guests.\n"
        },
                {
          "name": "waitlist",
          "type": "boolean",
          "doc": " Whether a waitlist is opened when total guest limit is reached, allowing guests to create RSVP with WAITING RSVP status.\n"
        },
                {
          "name": "startDate",
          "type": "string",
          "doc": " Registration start timestamp.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Registration end timestamp.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RsvpCollection",
      "displayName": "Rsvp Collection Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "config",
        "type": "All APIs.Ticket Definitions v3._wix_events_RsvpCollectionConfig",
        "doc": " RSVP collection configuration.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Ticketing",
      "displayName": "Ticketing Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "lowestPrice",
          "type": "string",
          "doc": " Deprecated.\n",
          "deprecated": true
        },
                {
          "name": "highestPrice",
          "type": "string",
          "doc": " Deprecated.\n",
          "deprecated": true
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " Currency used in event transactions.\n"
        },
                {
          "name": "config",
          "type": "All APIs.Ticket Definitions v3._wix_events_TicketingConfig",
          "doc": " Ticketing configuration.\n"
        },
                {
          "name": "lowestTicketPrice",
          "type": "All APIs.Ticket Definitions v3._wix_events_Money",
          "doc": " Price of lowest priced ticket.\n",
          "readOnly": true
        },
                {
          "name": "highestTicketPrice",
          "type": "All APIs.Ticket Definitions v3._wix_events_Money",
          "doc": " Price of highest priced ticket.\n",
          "readOnly": true
        },
                {
          "name": "lowestTicketPriceFormatted",
          "type": "string",
          "doc": " Formatted price of lowest priced ticket.\n",
          "readOnly": true
        },
                {
          "name": "highestTicketPriceFormatted",
          "type": "string",
          "doc": " Formatted price of highest priced ticket.\n",
          "readOnly": true
        },
                {
          "name": "soldOut",
          "type": "boolean",
          "doc": " Whether all tickets are sold for this event.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_TaxConfig",
      "displayName": "Tax Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Ticket Definitions v3._wix_events_TaxType",
          "doc": " Tax application settings.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Tax name.\n"
        },
                {
          "name": "rate",
          "type": "string",
          "doc": " Tax rate (e.g.,`21.55`).\n"
        },
                {
          "name": "appliesToDonations",
          "type": "boolean",
          "doc": " Applies taxes for donations, default true.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_TicketingConfig",
      "displayName": "Ticketing Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "guestAssignedTickets",
          "type": "boolean",
          "doc": " Whether the form must be filled out separately for each ticket.\n"
        },
                {
          "name": "taxConfig",
          "type": "All APIs.Ticket Definitions v3._wix_events_TaxConfig",
          "doc": " Tax configuration.\n"
        },
                {
          "name": "ticketLimitPerOrder",
          "type": "integer",
          "doc": " Limit of tickets that can be purchased per order, default 20.\n"
        },
                {
          "name": "reservationDurationInMinutes",
          "type": "integer",
          "doc": " Duration for which the tickets being bought are reserved.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ExternalEvent",
      "displayName": "External Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "registration",
        "type": "string",
        "doc": " External event registration URL.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Registration",
      "displayName": "Registration Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Ticket Definitions v3._wix_events_EventType",
          "doc": " Event type.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Ticket Definitions v3._wix_events_RegistrationStatus",
          "doc": " Event registration status.\n"
        },
                {
          "name": "rsvpCollection",
          "type": "All APIs.Ticket Definitions v3._wix_events_RsvpCollection",
          "doc": " RSVP collection details.\n"
        },
                {
          "name": "ticketing",
          "type": "All APIs.Ticket Definitions v3._wix_events_Ticketing",
          "doc": " Ticketing details.\n"
        },
                {
          "name": "external",
          "type": "All APIs.Ticket Definitions v3._wix_events_ExternalEvent",
          "doc": " External registration details.\n"
        },
                {
          "name": "restrictedTo",
          "type": "All APIs.Ticket Definitions v3._wix_events_VisitorType",
          "doc": " Types of users allowed to register.\n"
        },
                {
          "name": "initialType",
          "type": "All APIs.Ticket Definitions v3._wix_events_EventType",
          "doc": " Initial event type which was set when creating an event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Dashboard_RsvpSummary",
      "displayName": "Rsvp Summary Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of RSVPs.\n"
        },
                {
          "name": "yes",
          "type": "integer",
          "doc": " Number of RSVPs with status `YES`.\n"
        },
                {
          "name": "no",
          "type": "integer",
          "doc": " Number of RSVPs with status `NO`.\n"
        },
                {
          "name": "waitlist",
          "type": "integer",
          "doc": " Number of RSVPs in waitlist.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Dashboard_TicketingSummary",
      "displayName": "Ticketing Summary Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tickets",
          "type": "integer",
          "doc": " Number of tickets sold.\n"
        },
                {
          "name": "revenue",
          "type": "All APIs.Ticket Definitions v3._wix_events_Money",
          "doc": " Total revenue, excluding fees.\n (taxes and payment provider fees are not deducted.)\n"
        },
                {
          "name": "currencyLocked",
          "type": "boolean",
          "doc": " Whether currency is locked and cannot be changed (generally occurs after the first order in the specified currency has been created).\n"
        },
                {
          "name": "orders",
          "type": "integer",
          "doc": " Number of orders placed.\n"
        },
                {
          "name": "totalSales",
          "type": "All APIs.Ticket Definitions v3._wix_events_Money",
          "doc": " Total balance of confirmed transactions.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Dashboard",
      "displayName": "Dashboard Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rsvpSummary",
          "type": "All APIs.Ticket Definitions v3._wix_events_Dashboard_RsvpSummary",
          "doc": " Guest RSVP summary.\n"
        },
                {
          "name": "ticketingSummary",
          "type": "All APIs.Ticket Definitions v3._wix_events_Dashboard_TicketingSummary",
          "doc": " Summary of revenue and tickets sold.\n (Archived orders are not included).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_GuestListConfig",
      "displayName": "Guest List Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "publicGuestList",
        "type": "boolean",
        "doc": " Whether members can see other members attending the event (defaults to true).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Feed",
      "displayName": "Feed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "token",
        "type": "string",
        "doc": " Event discussion feed token.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_OnlineConferencingConfig",
      "displayName": "Online Conferencing Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether online conferencing is enabled (not supported for TBD schedules).\n When enabled, links to join conferencing are generated and provided to guests.\n"
        },
                {
          "name": "providerId",
          "type": "string",
          "doc": " Conferencing provider ID.\n"
        },
                {
          "name": "conferenceType",
          "type": "All APIs.Ticket Definitions v3._wix_events_ConferenceType",
          "doc": " Conference type\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_OnlineConferencingSession",
      "displayName": "Online Conferencing Session Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "hostLink",
          "type": "string",
          "doc": " Link for event host to start the online conference session.\n",
          "readOnly": true
        },
                {
          "name": "guestLink",
          "type": "string",
          "doc": " Link for guests to join the online conference session.\n",
          "readOnly": true
        },
                {
          "name": "password",
          "type": "string",
          "doc": " The password required to join online conferencing session (when relevant).\n",
          "readOnly": true
        },
                {
          "name": "sessionCreated",
          "type": "boolean",
          "doc": " Indicates that session was created successfully on providers side.\n",
          "readOnly": true
        },
                {
          "name": "sessionId",
          "type": "string",
          "doc": " Unique session id\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_OnlineConferencing",
      "displayName": "Online Conferencing Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "config",
          "type": "All APIs.Ticket Definitions v3._wix_events_OnlineConferencingConfig",
          "doc": ""
        },
                {
          "name": "session",
          "type": "All APIs.Ticket Definitions v3._wix_events_OnlineConferencingSession",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_EventDisplaySettings",
      "displayName": "Event Display Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "hideEventDetailsButton",
        "type": "boolean",
        "doc": " Whether event details button is hidden. Only available for events with no registration.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventUpdated",
      "displayName": "Event Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Event update timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Ticket Definitions v3._wix_events_Location",
          "doc": " Event location.\n"
        },
                {
          "name": "scheduleConfig",
          "type": "All APIs.Ticket Definitions v3._wix_events_ScheduleConfig",
          "doc": " Event schedule configuration.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "scheduleConfigUpdated",
          "type": "boolean",
          "doc": " Whether schedule configuration was updated.\n",
          "deprecated": true
        },
                {
          "name": "event",
          "type": "All APIs.Ticket Definitions v3._wix_events_Event",
          "doc": " Updated event\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventCreated",
      "displayName": "Event Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": "Event created timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": "  Event ID.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Ticket Definitions v3._wix_events_Location",
          "doc": " Event location.\n"
        },
                {
          "name": "scheduleConfig",
          "type": "All APIs.Ticket Definitions v3._wix_events_ScheduleConfig",
          "doc": " Event schedule configuration.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": " Event creator user ID.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Ticket Definitions v3._wix_events_EventStatus",
          "doc": " Event status.\n"
        },
                {
          "name": "derivedFromInstanceId",
          "type": "string",
          "doc": " Instance ID. Indicates the original app instance which current event was derived from.\n"
        },
                {
          "name": "derivedFromEventId",
          "type": "string",
          "doc": " Event ID. Indicates the original event which current event was derived from.\n"
        },
                {
          "name": "event",
          "type": "All APIs.Ticket Definitions v3._wix_events_Event",
          "doc": " Event that was created.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventCanceled",
      "displayName": "Event Canceled Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Event canceled timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": " Event creator user ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventEnded",
      "displayName": "Event Ended Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Event end timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_upstream_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Ticket Definitions v3._wix_common_SortOrder",
          "doc": " Defaults to `ASC`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_upstream_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_upstream_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_upstream_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_upstream_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_upstream_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format: <br/> `\"filter\" : { \"fieldName1\": \"value1\", \"fieldName2\":{\"$operator\":\"value2\"} }`. <br/> <br/> **Example:** <br/> `\"filter\" : { \"id\": \"2224a9d1-79e6-4549-a5c5-bf7ce5aac1a5\", \"revision\": {\"$ne\":\"1\"} }`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_Sorting"]
          },
          "doc": "Sort object in the following format: <br/> `[{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]` <br/> <br/> **Example:** <br/> `[{\"fieldName\":\"createdDate\",\"direction\":\"DESC\"}]` <br/> <br/> See [supported fields](https://dev.wix.com/api/rest/wix-events/policy-v2/filter-and-sort) for more information.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_upstream_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort` parameters.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_metasite_event_api_Asset",
      "displayName": "Asset Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "appDefId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "state",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_Asset_State",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_DeleteContext",
      "displayName": "Delete Context Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dateDeleted",
          "type": "string",
          "doc": ""
        },
                {
          "name": "deleteStatus",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_DeleteContext_DeleteStatus",
          "doc": ""
        },
                {
          "name": "deleteOrigin",
          "type": "string",
          "doc": ""
        },
                {
          "name": "initiatorId",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteCreated",
      "displayName": "Site Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "originTemplateId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "ownerId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "context",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_SiteCreatedContext",
          "doc": ""
        },
                {
          "name": "originMetaSiteId",
          "type": "string",
          "doc": "\nA meta site id from which this site was created.\n\nIn case of a creation from a template it's a template id.\nIn case of a site duplication (\"Save As\" in dashboard or duplicate in UM) it's an id of a source site.\n"
        },
                {
          "name": "siteName",
          "type": "string",
          "doc": ""
        },
                {
          "name": "namespace",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_MetaSite_Namespace",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteHardDeleted",
      "displayName": "Site Hard Deleted Object",
      "locations": [],
      "docs":       {
        "summary": "\nHard deletion of the meta site.\n\nCould not be restored. Therefore it's desirable to cleanup data.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deleteContext",
        "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_DeleteContext",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteDeleted",
      "displayName": "Site Deleted Object",
      "locations": [],
      "docs":       {
        "summary": " Soft deletion of the meta site. Could be restored.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deleteContext",
        "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_DeleteContext",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteUndeleted",
      "displayName": "Site Undeleted Object",
      "locations": [],
      "docs":       {
        "summary": " Restoration of the meta site.\n",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SitePublished",
      "displayName": "Site Published Object",
      "locations": [],
      "docs":       {
        "summary": " First publish of a meta site. Or subsequent publish after unpublish.\n",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteUnpublished",
      "displayName": "Site Unpublished Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "urls",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteTransferred",
      "displayName": "Site Transferred Object",
      "locations": [],
      "docs":       {
        "summary": " Site transferred to another user.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "oldOwnerId",
          "type": "string",
          "doc": " A previous owner id (user that transfers meta site).\n"
        },
                {
          "name": "newOwnerId",
          "type": "string",
          "doc": " A new owner id (user that accepts meta site).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteMarkedAsTemplate",
      "displayName": "Site Marked As Template Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteMarkedAsWixSite",
      "displayName": "Site Marked As Wix Site Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_ServiceProvisioned",
      "displayName": "Service Provisioned Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "appDefId",
          "type": "string",
          "doc": " Either UUID or EmbeddedServiceType.\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": " Not only UUID. Something here could be something weird.\n"
        },
                {
          "name": "originInstanceId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "version",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_ServiceRemoved",
      "displayName": "Service Removed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "appDefId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "version",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteRenamed",
      "displayName": "Site Renamed Object",
      "locations": [],
      "docs":       {
        "summary": " Rename of the site. Meaning, free public url has been changed as well. ",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "newSiteName",
          "type": "string",
          "doc": ""
        },
                {
          "name": "oldSiteName",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_NamespaceChanged",
      "displayName": "Namespace Changed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "oldNamespace",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_MetaSite_Namespace",
          "doc": ""
        },
                {
          "name": "newNamespace",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_MetaSite_Namespace",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_StudioAssigned",
      "displayName": "Studio Assigned Object",
      "locations": [],
      "docs":       {
        "summary": "\nAssigned Studio editor\n",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_StudioUnassigned",
      "displayName": "Studio Unassigned Object",
      "locations": [],
      "docs":       {
        "summary": "\nUnassigned Studio editor\n",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_MetaSiteSpecialEvent",
      "displayName": "Meta Site Special Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "version",
          "type": "string",
          "doc": ""
        },
                {
          "name": "timestamp",
          "type": "string",
          "doc": ""
        },
                {
          "name": "assets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_Asset"]
          },
          "doc": ""
        },
                {
          "name": "payload",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_MetaSiteSpecialEvent_payload",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_MetaSiteSpecialEvent_payload",
      "displayName": "payload Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "siteCreated",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_SiteCreated",
          "doc": ""
        },
                {
          "name": "siteTransferred",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_SiteTransferred",
          "doc": ""
        },
                {
          "name": "siteDeleted",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_SiteDeleted",
          "doc": ""
        },
                {
          "name": "siteUndeleted",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_SiteUndeleted",
          "doc": ""
        },
                {
          "name": "sitePublished",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_SitePublished",
          "doc": ""
        },
                {
          "name": "siteUnpublished",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_SiteUnpublished",
          "doc": ""
        },
                {
          "name": "siteMarkedAsTemplate",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_SiteMarkedAsTemplate",
          "doc": ""
        },
                {
          "name": "siteMarkedAsWixSite",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_SiteMarkedAsWixSite",
          "doc": ""
        },
                {
          "name": "serviceProvisioned",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_ServiceProvisioned",
          "doc": ""
        },
                {
          "name": "serviceRemoved",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_ServiceRemoved",
          "doc": ""
        },
                {
          "name": "siteRenamedPayload",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_SiteRenamed",
          "doc": ""
        },
                {
          "name": "hardDeleted",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_SiteHardDeleted",
          "doc": ""
        },
                {
          "name": "namespaceChanged",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_NamespaceChanged",
          "doc": ""
        },
                {
          "name": "studioAssigned",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_StudioAssigned",
          "doc": ""
        },
                {
          "name": "studioUnassigned",
          "type": "All APIs.Ticket Definitions v3._com_wixpress_metasite_event_api_StudioUnassigned",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_seating_CategoryDetails",
      "displayName": "Category Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "seatingPlanId",
          "type": "string",
          "doc": " Seating plan id\n",
          "readOnly": true
        },
                {
          "name": "externalSeatingPlanId",
          "type": "string",
          "doc": " External seating plan id\n",
          "readOnly": true
        },
                {
          "name": "externalCategoryId",
          "type": "string",
          "doc": " External category id\n",
          "readOnly": true
        },
                {
          "name": "totalCapacity",
          "type": "integer",
          "doc": " Total capacity in the category\n",
          "readOnly": true
        },
                {
          "name": "reserved",
          "type": "integer",
          "doc": " Already reserved capacity\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_seating_SeatingPlanCategoriesSummaryUpdated",
      "displayName": "Seating Plan Categories Summary Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "seatingPlanId",
          "type": "string",
          "doc": " Seating plan id\n"
        },
                {
          "name": "externalSeatingPlanId",
          "type": "string",
          "doc": " External seating plan id\n"
        },
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._com_wixpress_seating_CategoryDetails"]
          },
          "doc": " Ticket counts by category\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_CreateTicketDefinitionRequest",
      "displayName": "Create Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketDefinition",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition",
          "doc": " Ticket definition info.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_RequestedFields_Field"]
          },
          "doc": " Requested fields.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_CreateTicketDefinitionResponse",
      "displayName": "Create Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticketDefinition",
        "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition",
        "doc": " Created ticket definition.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_UpdateTicketDefinitionRequest",
      "displayName": "Update Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketDefinition",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition",
          "doc": " Ticket definition to update.\n"
        },
                {
          "name": "mask",
          "type": "All APIs.Ticket Definitions v3._google_protobuf_FieldMask",
          "doc": " List of exact fields to update. For example, if you define only the `name`, all other fields are ignored.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_RequestedFields_Field"]
          },
          "doc": " Requested fields.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_UpdateTicketDefinitionResponse",
      "displayName": "Update Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticketDefinition",
        "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition",
        "doc": " The updated ticket definition.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_GetTicketDefinitionRequest",
      "displayName": "Get Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_RequestedFields_Field"]
          },
          "doc": " Predefined sets of fields to return.\n- `SALES_DETAILS`: Returns `salesDetails`.\n Requested fields.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_GetTicketDefinitionResponse",
      "displayName": "Get Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticketDefinition",
        "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition",
        "doc": " The requested ticket definition.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_GetTicketDefinitionFromTrashBinRequest",
      "displayName": "Get Ticket Definition From Trash Bin Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_RequestedFields_Field"]
          },
          "doc": " Requested fields. Not implemented.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_GetTicketDefinitionFromTrashBinResponse",
      "displayName": "Get Ticket Definition From Trash Bin Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticketDefinition",
        "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition",
        "doc": " The requested ticket definition.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_DeleteTicketDefinitionRequest",
      "displayName": "Delete Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticketDefinitionId",
        "type": "string",
        "doc": " ID of the ticket definition to delete.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_DeleteTicketDefinitionResponse",
      "displayName": "Delete Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_ReorderTicketDefinitionsRequest",
      "displayName": "Reorder Ticket Definitions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "referenceDefinition",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_ReorderTicketDefinitionsRequest_ReferenceDefinition",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_ReorderTicketDefinitionsRequest_ReferenceDefinition",
      "displayName": "Reference Definition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "beforeDefinitionId",
          "type": "string",
          "doc": " Move the given `definitionId` before the referenced ticket definition.\n"
        },
                {
          "name": "afterDefinitionId",
          "type": "string",
          "doc": " Move the given `definitionId` after the referenced ticket definition.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketdef_v3_ReorderTicketDefinitionsResponse",
      "displayName": "Reorder Ticket Definitions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_UpdateTicketDefinitionSortIndexRequest",
      "displayName": "Update Ticket Definition Sort Index Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " The revision of the ticket definition\n"
        },
                {
          "name": "sortIndex",
          "type": "integer",
          "doc": " the sort index of a ticket definition to set\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_RequestedFields_Field"]
          },
          "doc": " Requested fields.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_UpdateTicketDefinitionSortIndexResponse",
      "displayName": "Update Ticket Definition Sort Index Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticketDefinition",
        "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition",
        "doc": " the updated ticket definition\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_QueryTicketDefinitionsRequest",
      "displayName": "Query Ticket Definitions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "query",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_QueryV2",
          "doc": " Query options. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language) for more details.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_RequestedFields_Field"]
          },
          "doc": " Predefined sets of fields to return.\n- `SALES_DETAILS`: Returns `salesDetails`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_QueryTicketDefinitionsResponse",
      "displayName": "Query Ticket Definitions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketDefinitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition"]
          },
          "doc": " List of ticket definitions.\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_PagingMetadataV2",
          "doc": " Metadata for the paginated results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_QueryAvailableTicketDefinitionsRequest",
      "displayName": "Query Available Ticket Definitions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "query",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_QueryV2",
          "doc": " Query options. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language) for more details.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_RequestedFields_Field"]
          },
          "doc": " Requested fields.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_QueryAvailableTicketDefinitionsResponse",
      "displayName": "Query Available Ticket Definitions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketDefinitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_TicketDefinition"]
          },
          "doc": " List of ticket definitions.\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_PagingMetadataV2",
          "doc": " Metadata for the paginated results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_CountTicketDefinitionsRequest",
      "displayName": "Count Ticket Definitions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter object in the following format: <br/> `\"filter\" : { \"fieldName1\": \"value1\" }`.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Parameters to count ticket definitions by.\n\n- Max: 20 facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_CountTicketDefinitionsResponse",
      "displayName": "Count Ticket Definitions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metadata",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_PagingMetadataV2",
          "doc": " Metadata for the paginated results.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Ticket Definitions v3.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_CountAvailableTicketDefinitionsRequest",
      "displayName": "Count Available Ticket Definitions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "filter",
        "type": "struct",
        "doc": " Filter object in the following format: <br/> `\"filter\" : { \"fieldName1\": \"value1\" }`.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_CountAvailableTicketDefinitionsResponse",
      "displayName": "Count Available Ticket Definitions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metadata",
          "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_upstream_wix_common_PagingMetadataV2",
          "doc": " Metadata for the paginated results.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Ticket Definitions v3.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "countsMapEntry",
      "displayName": "counts Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Facet counts aggregated per value\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "integer",
        "doc": "`key` of type string, `value` of type integer"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_FacetCounts",
      "displayName": "Facet Counts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "counts",
        "type": "All APIs.Ticket Definitions v3.countsMapEntry",
        "doc": "Set of key-value pairs. Facet counts aggregated per value\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_BulkDeleteTicketDefinitionsByFilterRequest",
      "displayName": "Bulk Delete Ticket Definitions By Filter Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "filter",
        "type": "struct",
        "doc": " Filter object in the following format: <br/> `\"filter\" : { \"fieldName1\": \"value1\" }`. <br/> <br/> **Example:** <br/> `\"filter\" : { \"eventId\": \"3d3d5c04-ece0-45a8-85f0-11a58edaa192\" }`\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_BulkDeleteTicketDefinitionsByFilterResponse",
      "displayName": "Bulk Delete Ticket Definitions By Filter Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_ChangeCurrencyRequest",
      "displayName": "Change Currency Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "currency",
          "type": "string",
          "doc": "\nEvent currency, in 3-letter [ISO-4217 alphabetic](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) format.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_ChangeCurrencyResponse",
      "displayName": "Change Currency Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_BulkCopyTicketDefinitionsByEventIdRequest",
      "displayName": "Bulk Copy Ticket Definitions By Event Id Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "originInstanceId",
          "type": "string",
          "doc": " Origin instance ID.\n"
        },
                {
          "name": "originEventId",
          "type": "string",
          "doc": " Origin Event ID.\n"
        },
                {
          "name": "targetEventId",
          "type": "string",
          "doc": " Target Event ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_BulkCopyTicketDefinitionsByEventIdResponse_CopiedTicketDefinition",
      "displayName": "Copied Ticket Definition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "originTicketDefinitionId",
          "type": "string",
          "doc": " Origin Ticket definition ID.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_BulkCopyTicketDefinitionsByEventIdResponse",
      "displayName": "Bulk Copy Ticket Definitions By Event Id Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "definitions",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_BulkCopyTicketDefinitionsByEventIdResponse_CopiedTicketDefinition"]
        },
        "doc": " Copied ticket definitions.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_SalePeriodUpdated",
      "displayName": "Sale Period Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "afterUpdate",
        "type": "All APIs.Ticket Definitions v3._wix_events_ticketdef_v3_SalePeriod",
        "doc": " Ticket definition sale period after update.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_PricingTypeEnum_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_PRICING_TYPE <\/code><\/li><li><code> STANDARD <\/code><\/li><li><code> DONATION <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_PRICING_TYPE",
        "STANDARD",
        "DONATION"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_FeeTypeEnum_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_FEE_TYPE <\/code><\/li><li><code> FEE_INCLUDED -  Seller absorbs the fee. It is deducted from the ticket price.\n <\/code><\/li><li><code> FEE_ADDED_AT_CHECKOUT -  Fee is added to the ticket price at checkout.\n <\/code><\/li><li><code> NO_FEE -  Service fee is not collected - available only for free tickets and legacy users.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_FEE_TYPE",
        "FEE_INCLUDED",
        "FEE_ADDED_AT_CHECKOUT",
        "NO_FEE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_SaleStatusEnum_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SALE_STATUS <\/code><\/li><li><code> SALE_SCHEDULED -  Ticket sale is scheduled to start\n <\/code><\/li><li><code> SALE_STARTED -  Ticket sale has started\n <\/code><\/li><li><code> SALE_ENDED -  Ticket sale has ended\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SALE_STATUS",
        "SALE_SCHEDULED",
        "SALE_STARTED",
        "SALE_ENDED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_TaxType",
      "displayName": "Tax Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> INCLUDED -  Tax is included in the ticket price\n <\/code><\/li><li><code> ADDED -  Tax is added to the order at the checkout\n <\/code><\/li><li><code> ADDED_AT_CHECKOUT -  Tax is added to the final total at the checkout\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "INCLUDED",
        "ADDED",
        "ADDED_AT_CHECKOUT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CategoryState_State",
      "displayName": "State Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> MANUAL -  Created manually by the user.\n <\/code><\/li><li><code> AUTO -  Created automatically.\n <\/code><\/li><li><code> RECURRING_EVENT -  Created when publishing recurring events.\n <\/code><\/li><li><code> HIDDEN -  Category is hidden.\n <\/code><\/li><li><code> COMPONENT -  Category is used to store component events.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "MANUAL",
        "AUTO",
        "RECURRING_EVENT",
        "HIDDEN",
        "COMPONENT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_InputControlType",
      "displayName": "Input Control Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> INPUT -  Single text value field.\n <\/code><\/li><li><code> TEXTAREA -  Single text value field.\n <\/code><\/li><li><code> DROPDOWN -  Single-choice field of predefined values.\n <\/code><\/li><li><code> RADIO -  Single-choice field of predefined values.\n <\/code><\/li><li><code> CHECKBOX -  Multiple-choice field of predefined values.\n <\/code><\/li><li><code> NAME -  First and last name fields.\n <\/code><\/li><li><code> GUEST_CONTROL -  Additional guests and respective guest names fields.\n <\/code><\/li><li><code> ADDRESS_SHORT -  Single-line address field.\n <\/code><\/li><li><code> ADDRESS_FULL -  Full address field.\n <\/code><\/li><li><code> DATE -  Year, month and day fields.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "INPUT",
        "TEXTAREA",
        "DROPDOWN",
        "RADIO",
        "CHECKBOX",
        "NAME",
        "GUEST_CONTROL",
        "ADDRESS_SHORT",
        "ADDRESS_FULL",
        "DATE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_ValueType",
      "displayName": "Value Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> TEXT <\/code><\/li><li><code> NUMBER <\/code><\/li><li><code> TEXT_ARRAY <\/code><\/li><li><code> DATE_TIME <\/code><\/li><li><code> ADDRESS <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "TEXT",
        "NUMBER",
        "TEXT_ARRAY",
        "DATE_TIME",
        "ADDRESS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Subdivision_SubdivisionType",
      "displayName": "Subdivision Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SUBDIVISION_TYPE <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_1 -  State\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_2 -  County\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_3 -  City/town\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_4 -  Neighborhood/quarter\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_5 -  Street/block\n <\/code><\/li><li><code> COUNTRY -  ADMINISTRATIVE_AREA_LEVEL_0. Indicates the national political entity, and is typically the highest order type returned by the Geocoder.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SUBDIVISION_TYPE",
        "ADMINISTRATIVE_AREA_LEVEL_1",
        "ADMINISTRATIVE_AREA_LEVEL_2",
        "ADMINISTRATIVE_AREA_LEVEL_3",
        "ADMINISTRATIVE_AREA_LEVEL_4",
        "ADMINISTRATIVE_AREA_LEVEL_5",
        "COUNTRY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_EventStatus",
      "displayName": "Event Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SCHEDULED -  Event is public and scheduled to start\n <\/code><\/li><li><code> STARTED -  Event has started\n <\/code><\/li><li><code> ENDED -  Event has ended\n <\/code><\/li><li><code> CANCELED -  Event was canceled\n <\/code><\/li><li><code> DRAFT -  Event is not public and needs to be published\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SCHEDULED",
        "STARTED",
        "ENDED",
        "CANCELED",
        "DRAFT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_EventType",
      "displayName": "Event Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NA_EVENT_TYPE -  Type not available for this request fieldset\n <\/code><\/li><li><code> RSVP -  Registration via RSVP\n <\/code><\/li><li><code> TICKETS -  Registration via ticket purchase\n <\/code><\/li><li><code> EXTERNAL -  External registration\n <\/code><\/li><li><code> NO_REGISTRATION -  Registration not available\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NA_EVENT_TYPE",
        "RSVP",
        "TICKETS",
        "EXTERNAL",
        "NO_REGISTRATION"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RegistrationStatus",
      "displayName": "Registration Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NA_REGISTRATION_STATUS -  Registration status is not applicable\n <\/code><\/li><li><code> CLOSED -  Registration to event is closed\n <\/code><\/li><li><code> CLOSED_MANUALLY -  Registration to event is closed manually\n <\/code><\/li><li><code> OPEN_RSVP -  Registration is open via RSVP\n <\/code><\/li><li><code> OPEN_RSVP_WAITLIST -  Registration to event waitlist is open via RSVP\n <\/code><\/li><li><code> OPEN_TICKETS -  Registration is open via ticket purchase\n <\/code><\/li><li><code> OPEN_EXTERNAL -  Registration is open via external URL\n <\/code><\/li><li><code> SCHEDULED_RSVP -  Registration will be open via RSVP\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NA_REGISTRATION_STATUS",
        "CLOSED",
        "CLOSED_MANUALLY",
        "OPEN_RSVP",
        "OPEN_RSVP_WAITLIST",
        "OPEN_TICKETS",
        "OPEN_EXTERNAL",
        "SCHEDULED_RSVP"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_VisitorType",
      "displayName": "Visitor Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> VISITOR -  Site visitor (including member)\n <\/code><\/li><li><code> MEMBER -  Site member\n <\/code><\/li><li><code> VISITOR_OR_MEMBER -  Site visitor or member\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "VISITOR",
        "MEMBER",
        "VISITOR_OR_MEMBER"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ConferenceType",
      "displayName": "Conference Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> MEETING -  Everyone in the meeting can publish and subscribe video and audio.\n <\/code><\/li><li><code> WEBINAR -  Guests can only subscribe to video and audio.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "MEETING",
        "WEBINAR"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Location_LocationType",
      "displayName": "Location Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> VENUE <\/code><\/li><li><code> ONLINE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "VENUE",
        "ONLINE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RecurrenceStatus_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ONE_TIME -  Event occurs only once.\n <\/code><\/li><li><code> RECURRING -  Event is recurring.\n <\/code><\/li><li><code> RECURRING_NEXT -  Marks the next upcoming occurrence of the recurring event.\n <\/code><\/li><li><code> RECURRING_LAST_ENDED -  Marks the most recent ended occurrence of the recurring event.\n <\/code><\/li><li><code> RECURRING_LAST_CANCELED -  Marks the most recent canceled occurrence of the recurring event.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ONE_TIME",
        "RECURRING",
        "RECURRING_NEXT",
        "RECURRING_LAST_ENDED",
        "RECURRING_LAST_CANCELED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RsvpCollectionConfig_RsvpStatusOptions",
      "displayName": "Rsvp Status Options Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> YES_ONLY -  Only YES RSVP status is available for RSVP registration\n <\/code><\/li><li><code> YES_AND_NO -  YES and NO RSVP status options are available for the registration\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "YES_ONLY",
        "YES_AND_NO"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_Asset_State",
      "displayName": "State Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> ENABLED <\/code><\/li><li><code> DISABLED <\/code><\/li><li><code> PENDING <\/code><\/li><li><code> DEMO <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "ENABLED",
        "DISABLED",
        "PENDING",
        "DEMO"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_DeleteContext_DeleteStatus",
      "displayName": "Delete Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> TRASH <\/code><\/li><li><code> DELETED <\/code><\/li><li><code> PENDING_PURGE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "TRASH",
        "DELETED",
        "PENDING_PURGE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_MetaSite_Namespace",
      "displayName": "Namespace Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_NAMESPACE <\/code><\/li><li><code> WIX -  Default namespace for UGC sites. MetaSites with this namespace will be shown in a user's site list by default.\n <\/code><\/li><li><code> SHOUT_OUT -  ShoutOut stand alone product. These are siteless (no actual Wix site, no HtmlWeb). MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> ALBUMS -  MetaSites created by the Albums product, they appear as part of the Albums app. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> WIX_STORES_TEST_DRIVE -  Part of the WixStores migration flow, a user tries to migrate and gets this site to view and if the user likes it then stores removes this namespace and deletes the old site with the old stores. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> HOTELS -  Hotels standalone (siteless). MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> CLUBS -  Clubs siteless MetaSites, a club without a wix website. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> ONBOARDING_DRAFT -  A partially created ADI website. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> DEV_SITE -  AppBuilder for AppStudio / shmite (c). MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> LOGOS -  LogoMaker websites offered to the user after logo purchase. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> VIDEO_MAKER -  VideoMaker websites offered to the user after video purchase. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> PARTNER_DASHBOARD -  MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> DEV_CENTER_COMPANY -  MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> HTML_DRAFT - \nA draft created by HTML editor on open. Upon \"first save\" it will be moved to be of WIX domain.\n\nMeta site with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> SITELESS_BUSINESS - \nthe user-journey for Fitness users who want to start from managing their business instead of designing their website.\nWill be accessible from Site List and will not have a website app.\nOnce the user attaches a site, the site will become a regular wixsite.\n <\/code><\/li><li><code> CREATOR_ECONOMY - \nBelongs to \"strategic products\" company. Supports new product in the creator's economy space.\n <\/code><\/li><li><code> DASHBOARD_FIRST - *\nIt is to be used in the Business First efforts.\n <\/code><\/li><li><code> ANYWHERE - *\nBookings business flow with no site.\n <\/code><\/li><li><code> HEADLESS - *\nNamespace for Headless Backoffice with no editor\n <\/code><\/li><li><code> ACCOUNT_MASTER_CMS - *\nNamespace for master site that will exist in parent account that will be referenced by subaccounts\nThe site will be used for account level CSM feature for enterprise\n <\/code><\/li><li><code> RISE - *\nRise.ai Siteless account management for Gift Cards and Store Credit.\n <\/code><\/li><li><code> BRANDED_FIRST - *\nAs part of the branded app new funnel, users now can create a meta site that will be branded app first.\nThere's a blank site behind the scene but it's blank).\nThe Mobile company will be the owner of this namespace.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_NAMESPACE",
        "WIX",
        "SHOUT_OUT",
        "ALBUMS",
        "WIX_STORES_TEST_DRIVE",
        "HOTELS",
        "CLUBS",
        "ONBOARDING_DRAFT",
        "DEV_SITE",
        "LOGOS",
        "VIDEO_MAKER",
        "PARTNER_DASHBOARD",
        "DEV_CENTER_COMPANY",
        "HTML_DRAFT",
        "SITELESS_BUSINESS",
        "CREATOR_ECONOMY",
        "DASHBOARD_FIRST",
        "ANYWHERE",
        "HEADLESS",
        "ACCOUNT_MASTER_CMS",
        "RISE",
        "BRANDED_FIRST"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteCreatedContext",
      "displayName": "Site Created Context Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> OTHER -  A valid option, we don't expose all reasons why site might be created.\n <\/code><\/li><li><code> FROM_TEMPLATE -  A meta site was created from template.\n <\/code><\/li><li><code> DUPLICATE_BY_SITE_TRANSFER -  A meta site was created by copying of the transfferred meta site.\n <\/code><\/li><li><code> DUPLICATE -  A copy of existing meta site.\n <\/code><\/li><li><code> OLD_SITE_TRANSFER -  A meta site was created as a transfferred site (copy of the original), old flow, should die soon.\n <\/code><\/li><li><code> FLASH - deprecated A meta site was created for Flash editor.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "OTHER",
        "FROM_TEMPLATE",
        "DUPLICATE_BY_SITE_TRANSFER",
        "DUPLICATE",
        "OLD_SITE_TRANSFER",
        "FLASH"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketdef_v3_RequestedFields_Field",
      "displayName": "Field Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_REQUESTED_FIELD <\/code><\/li><li><code> SALES_DETAILS -  Include `unsoldCount`, `soldCount`, `reservedCount` and `soldOut` in the response.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_REQUESTED_FIELD",
        "SALES_DETAILS"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.events.events-ticket-definitions"}
}
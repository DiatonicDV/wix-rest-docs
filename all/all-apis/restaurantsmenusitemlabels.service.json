{
  "name": "RestaurantsMenusItemLabels",
  "client_id": "https://github.com/wix-private/restaurants-bazel/tree/master/restaurants-menus-item-labels#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Create and manage labels",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Menu Item Labels",
    "entity": "_com_wixpress_restaurants_menus_item_labels_v1_Label",
    "src": "https://github.com/wix-private/restaurants-bazel/tree/master/restaurants-menus-item-labels/com/wixpress/restaurants/menus_item_labels/v1/label.proto"
  }],
  "relatedGuides": [  {
    "path": "../guides/restaurantsmenusitemlabels/intro.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Create Label",
      "methodName": "CreateLabel",
      "serviceName": "RestaurantsMenusItemLabels",
      "tag": "Menu Item Labels",
      "permissions": [      {
        "name": "Manage Restaurants Menus",
        "description": "Grant permission to manage restaurants menus"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["label"],
      "params": [      {
        "in": "BODY",
        "name": "label",
        "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_Label",
        "doc": " Label to be created.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreateLabel",
          "statusCode": "200",
          "typeParams": ["All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_CreateLabelResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a new Label.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/restaurants/v1/labels",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateLabelRequest",
        "rpcResponseName": "CreateLabelResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Delete Label",
      "methodName": "DeleteLabel",
      "serviceName": "RestaurantsMenusItemLabels",
      "tag": "Menu Item Labels",
      "permissions": [      {
        "name": "Manage Restaurants Menus",
        "description": "Grant permission to manage restaurants menus"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["labelId"],
      "params": [      {
        "in": "PATH",
        "name": "labelId",
        "type": "string",
        "doc": " ID of the Label to delete.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteLabel",
          "statusCode": "200",
          "typeParams": ["All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_DeleteLabelResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Delete a Label.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/restaurants/v1/labels/{labelId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteLabelRequest",
        "rpcResponseName": "DeleteLabelResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Label",
      "methodName": "GetLabel",
      "serviceName": "RestaurantsMenusItemLabels",
      "tag": "Menu Item Labels",
      "permissions": [      {
        "name": "Manage Restaurants Menus",
        "description": "Grant permission to manage restaurants menus"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["labelId"],
      "params": [      {
        "in": "PATH",
        "name": "labelId",
        "type": "string",
        "doc": " ID of the Label to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetLabel",
          "statusCode": "200",
          "typeParams": ["All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_GetLabelResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Get a Label by ID.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/restaurants/v1/labels/{labelId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetLabelRequest",
        "rpcResponseName": "GetLabelResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "List Labels",
      "methodName": "ListLabels",
      "serviceName": "RestaurantsMenusItemLabels",
      "tag": "Menu Item Labels",
      "permissions": [      {
        "name": "Manage Restaurants Menus",
        "description": "Grant permission to manage restaurants menus"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [],
      "ret":       {
        "type":         {
          "name": "ListLabels",
          "statusCode": "200",
          "typeParams": ["All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_ListLabelsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of Labels.\n\n Up to 100 labels can be returned.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/restaurants/v1/labels",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListLabelsRequest",
        "rpcResponseName": "ListLabelsResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Query Labels",
      "methodName": "QueryLabels",
      "serviceName": "RestaurantsMenusItemLabels",
      "tag": "Menu Item Labels",
      "permissions": [      {
        "name": "Manage Restaurants Menus",
        "description": "Grant permission to manage restaurants menus"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_CursorQuery",
        "doc": " The query by which to select labels.\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "QueryLabels",
          "statusCode": "200",
          "typeParams": ["All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_QueryLabelsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of labels by a given query.\n\n To learn how to query labels, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).\n\n Up to 100 labels can be returned per request.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/restaurants/v1/labels/query",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryLabelsRequest",
        "rpcResponseName": "QueryLabelsResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Update Label",
      "methodName": "UpdateLabel",
      "serviceName": "RestaurantsMenusItemLabels",
      "tag": "Menu Item Labels",
      "permissions": [      {
        "name": "Manage Restaurants Menus",
        "description": "Grant permission to manage restaurants menus"
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "label",
        "label.id",
        "label.revision"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "label.id",
          "type": "string",
          "doc": " Label ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "label",
          "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_Label",
          "doc": " Label to be updated, may be partial.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "mask",
          "type": "All APIs.RestaurantsMenusItemLabels._google_protobuf_FieldMask",
          "doc": " Explicit list of fields to update.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateLabel",
          "statusCode": "200",
          "typeParams": ["All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_UpdateLabelResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Update a Label, supports partial update.\n\n Each time a label is updated, revision increments by 1. The existing revision must be included when updating the labels. This ensures you're working with the latest labels information, and it prevents unintended overwrites.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/restaurants/v1/labels/{label.id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateLabelRequest",
        "rpcResponseName": "UpdateLabelResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_restaurants_menus_item_labels_v1_LabelDeletedDomainEvent",
      "name": "Label Deleted Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/restaurants-bazel/tree/master/restaurants-menus-item-labels/src/main/proto/com/wixpress/restaurants/menus_item_labels/v1/restaurants_menus_item_labels.proto"
      },
      "topic": "domain_events_wix.restaurants.menus.v1.item_label",
      "tag": "Menu Item Labels",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.restaurants.menus.v1.item_label_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_restaurants_menus_item_labels_v1_LabelCreatedDomainEvent",
      "name": "Label Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/restaurants-bazel/tree/master/restaurants-menus-item-labels/src/main/proto/com/wixpress/restaurants/menus_item_labels/v1/restaurants_menus_item_labels.proto"
      },
      "topic": "domain_events_wix.restaurants.menus.v1.item_label",
      "tag": "Menu Item Labels",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.restaurants.menus.v1.item_label_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_restaurants_menus_item_labels_v1_LabelUpdatedDomainEvent",
      "name": "Label Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/restaurants-bazel/tree/master/restaurants-menus-item-labels/src/main/proto/com/wixpress/restaurants/menus_item_labels/v1/restaurants_menus_item_labels.proto"
      },
      "topic": "domain_events_wix.restaurants.menus.v1.item_label",
      "tag": "Menu Item Labels",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.restaurants.menus.v1.item_label_updated",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_LabelDeletedDomainEvent",
      "displayName": "Label Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.restaurants.menus.v1.item_label`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_LabelEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Label ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_LabelEntityDeletedEvent",
      "displayName": "Label Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_LabelCreatedDomainEvent",
      "displayName": "Label Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.restaurants.menus.v1.item_label`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_LabelEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Label ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_LabelEntityCreatedEvent",
      "displayName": "Label Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_Label",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_LabelUpdatedDomainEvent",
      "displayName": "Label Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.restaurants.menus.v1.item_label`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_LabelEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Label ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_LabelEntityUpdatedEvent",
      "displayName": "Label Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_Label",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n"
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Image filename.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_Label",
      "displayName": "Label Object",
      "locations": [],
      "docs":       {
        "summary": " Label is the main entity of RestaurantsMenusItemLabels that represents a label of a menu item.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Label ID.\n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Represents the current state of a menu. Each time the menu is modified, its `revision` changes by the server. for an update operation to succeed, you MUST pass the latest revision.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Represents the time this Label was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Represents the time this Label was last updated.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Label name.\n"
        },
                {
          "name": "icon",
          "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_Image",
          "doc": " Label icon.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.RestaurantsMenusItemLabels._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.RestaurantsMenusItemLabels._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.RestaurantsMenusItemLabels._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deletedEntityAsJson",
        "type": "string",
        "doc": " Entity that was deleted\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Unique event ID.\n Allows clients to ignore duplicate webhooks.\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " ID of the entity associated with the event.\n"
        },
                {
          "name": "body",
          "type": "All APIs.RestaurantsMenusItemLabels._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " Event timestamp.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether the event was triggered as a result of a privacy regulation application\n (for example, GDPR).\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        },
                {
          "name": "entityEventSequence",
          "type": "string",
          "doc": " A sequence number defining the order of updates to the underlying entity.\n For example, given that some entity was updated at 16:00 and than again at 16:01,\n  it is guaranteed that the sequence number of the second update is strictly higher than the first.\n As the consumer, you can use this value to ensure that you handle messages in the correct order.\n To do so, you will need to persist this number on your end, and compare the sequence number from the\n  message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.RestaurantsMenusItemLabels._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.RestaurantsMenusItemLabels._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.RestaurantsMenusItemLabels._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.RestaurantsMenusItemLabels._wix_common_domainevents_ActionEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.RestaurantsMenusItemLabels._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_CursorPagingMetadata",
      "displayName": "Cursor Paging Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_Cursors",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "hasNext",
          "type": "boolean",
          "doc": " Indicates if there are more results after the current page.\n If `true`, another page of results can be retrieved.\n If `false`, this is the last page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_CursorQuery",
      "displayName": "Cursor Query Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.RestaurantsMenusItemLabels._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_CursorQuery_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_CursorQuery_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cursorPaging",
        "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_CursorPaging",
        "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_CreateLabelRequest",
      "displayName": "Create Label Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "label",
        "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_Label",
        "doc": " Label to be created.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_CreateLabelResponse",
      "displayName": "Create Label Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "label",
        "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_Label",
        "doc": " The created Label.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_GetLabelRequest",
      "displayName": "Get Label Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "labelId",
        "type": "string",
        "doc": " ID of the Label to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_GetLabelResponse",
      "displayName": "Get Label Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "label",
        "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_Label",
        "doc": " The retrieved Label.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_ListLabelsRequest",
      "displayName": "List Labels Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_ListLabelsResponse",
      "displayName": "List Labels Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "labels",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_Label"]
        },
        "doc": " The retrieved labels.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_UpdateLabelRequest",
      "displayName": "Update Label Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "label",
          "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_Label",
          "doc": " Label to be updated, may be partial.\n"
        },
                {
          "name": "mask",
          "type": "All APIs.RestaurantsMenusItemLabels._google_protobuf_FieldMask",
          "doc": " Explicit list of fields to update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_UpdateLabelResponse",
      "displayName": "Update Label Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "label",
        "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_Label",
        "doc": " The updated Label.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_DeleteLabelRequest",
      "displayName": "Delete Label Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "labelId",
        "type": "string",
        "doc": " ID of the Label to delete.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_DeleteLabelResponse",
      "displayName": "Delete Label Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_QueryLabelsRequest",
      "displayName": "Query Labels Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_CursorQuery",
        "doc": " The query by which to select labels.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_QueryLabelsResponse",
      "displayName": "Query Labels Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "labels",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_Label"]
          },
          "doc": " The retrieved labels.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.RestaurantsMenusItemLabels._com_wixpress_restaurants_menus_item_labels_v1_upstream_wix_common_CursorPagingMetadata",
          "doc": " The metadata of the paginated results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_CloneLabelsRequest",
      "displayName": "Clone Labels Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "metaSiteId",
        "type": "string",
        "doc": " The MetaSiteId to clone from.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_menus_item_labels_v1_CloneLabelsResponse",
      "displayName": "Clone Labels Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldDescriptorProto_Label",
      "displayName": "Label Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> LABEL_OPTIONAL -  0 is reserved for errors\n <\/code><\/li><li><code> LABEL_REQUIRED <\/code><\/li><li><code> LABEL_REPEATED <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "LABEL_OPTIONAL",
        "LABEL_REQUIRED",
        "LABEL_REPEATED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.restaurants.restaurants-menus-item-labels"}
}
{
  "name": "CompensationService",
  "client_id": "https://github.com/wix-private/cashier/tree/master/wixpay-services/compensation-service#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Short description of CompensationService",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "CompensationService",
    "entity": null
  }],
  "relatedGuides": [  {
    "path": "../guides/compensationservice/docs/README.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Create Compensation",
      "methodName": "CreateCompensation",
      "serviceName": "CompensationService",
      "tag": "CompensationService",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "compensation",
        "compensation.transactionId",
        "compensation.accountId",
        "compensation.profileId",
        "compensation.compensationType"
      ],
      "params": [      {
        "in": "BODY",
        "name": "compensation",
        "type": "All APIs.CompensationService._wix_payments_compensation_v1_Compensation",
        "doc": " Compensation to be created\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreateCompensation",
          "statusCode": "200",
          "typeParams": ["All APIs.CompensationService._wix_payments_compensation_v1_CreateCompensationResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nCreates a new Compensation\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/compensation-service/v1/compensations",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateCompensationRequest",
        "rpcResponseName": "CreateCompensationResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Compensations",
      "methodName": "QueryCompensations",
      "serviceName": "CompensationService",
      "tag": "CompensationService",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.CompensationService._wix_common_CursorQuery",
        "doc": "  WQL expression\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "QueryCompensations",
          "statusCode": "200",
          "typeParams": ["All APIs.CompensationService._wix_payments_compensation_v1_QueryCompensationsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nQuery Compensations using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/compensation-service/v1/compensations/query",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryCompensationsRequest",
        "rpcResponseName": "QueryCompensationsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events": [  {
    "type": "_wix_payments_compensation_v1_CompensationCreatedDomainEvent",
    "name": "Compensation Created Webhook",
    "docs": {"summary": ""},
    "topic": "domain_events_wix.payments.compensation.v1.compensation",
    "tag": "CompensationService",
    "permissions": [],
    "customLabels": [{"id": "maturity-beta"}],
    "eventType": "wix.payments.compensation.v1.compensation_created",
    "extra": {"isDomainEvent": true}
  }],
  "callbacks": [],
  "messages":   [
        {
      "name": "_wix_payments_compensation_v1_CompensationCreatedDomainEvent",
      "displayName": "Compensation Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.payments.compensation.v1.compensation`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.CompensationService._wix_payments_compensation_v1_CompensationEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Compensation ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_payments_compensation_v1_CompensationEntityCreatedEvent",
      "displayName": "Compensation Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.CompensationService._wix_payments_compensation_v1_Compensation",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Money",
      "displayName": "Money Object",
      "locations": [],
      "docs":       {
        "summary": " Money.\n Default format to use. Sufficiently compliant with majority of standards: w3c, ISO 4217, ISO 20022, ISO 8583:2003.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "string",
          "doc": " Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative.\n"
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " Currency code. Must be valid ISO 4217 currency code (e.g., USD).\n"
        },
                {
          "name": "formattedValue",
          "type": "string",
          "doc": " Monetary amount. Decimal string in local format (e.g., 1 000,30). Optionally, a single (-), to indicate that the amount is negative.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_payments_compensation_v1_Compensation",
      "displayName": "Compensation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "  compensation id\n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Represents the current state of an item. Each time the item is modified, its `revision` changes by the server.\n for an update operation to succeed, you MUST pass the latest revision\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Represents the time this Compensation was created\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Represents the time this Compensation was last updated\n",
          "readOnly": true
        },
                {
          "name": "profileId",
          "type": "string",
          "doc": " wix payments profile id\n"
        },
                {
          "name": "accountId",
          "type": "string",
          "doc": " wix payments account id\n"
        },
                {
          "name": "transactionId",
          "type": "string",
          "doc": " wix payments transaction id\n"
        },
                {
          "name": "providerTransferId",
          "type": "string",
          "doc": " wix payment provider transfer id\n"
        },
                {
          "name": "compensationType",
          "type": "All APIs.CompensationService._wix_payments_compensation_v1_Compensation_CompensationType",
          "doc": " wix compensation type\n"
        },
                {
          "name": "amount",
          "type": "All APIs.CompensationService._wix_common_Money",
          "doc": " compensation amount\n"
        },
                {
          "name": "status",
          "type": "All APIs.CompensationService._wix_payments_compensation_v1_Compensation_CompensationStatus",
          "doc": " compensation status\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPagingMetadata",
      "displayName": "Cursor Paging Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.CompensationService._wix_common_Cursors",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "hasNext",
          "type": "boolean",
          "doc": " Indicates if there are more results after the current page.\n If `true`, another page of results can be retrieved.\n If `false`, this is the last page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.CompensationService._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorQuery",
      "displayName": "Cursor Query Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.CompensationService._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.CompensationService._wix_common_CursorQuery_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorQuery_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cursorPaging",
        "type": "All APIs.CompensationService._wix_common_CursorPaging",
        "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_payments_compensation_v1_CreateCompensationRequest",
      "displayName": "Create Compensation Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "compensation",
        "type": "All APIs.CompensationService._wix_payments_compensation_v1_Compensation",
        "doc": " Compensation to be created\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_payments_compensation_v1_CreateCompensationResponse",
      "displayName": "Create Compensation Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "compensation",
        "type": "All APIs.CompensationService._wix_payments_compensation_v1_Compensation",
        "doc": " The created Compensation\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_payments_compensation_v1_QueryCompensationsRequest",
      "displayName": "Query Compensations Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.CompensationService._wix_common_CursorQuery",
        "doc": "  WQL expression\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_payments_compensation_v1_QueryCompensationsResponse",
      "displayName": "Query Compensations Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "compensations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.CompensationService._wix_payments_compensation_v1_Compensation"]
          },
          "doc": " The retrieved Compensations\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.CompensationService._wix_common_CursorPagingMetadata",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_payments_compensation_v1_Compensation_CompensationType",
      "displayName": "Compensation Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_COMPENSATION_TYPE <\/code><\/li><li><code> BRAZIL_CHARGEBACK_COVERAGE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_COMPENSATION_TYPE",
        "BRAZIL_CHARGEBACK_COVERAGE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_payments_compensation_v1_Compensation_CompensationStatus",
      "displayName": "Compensation Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_COMPENSATION_STATUS <\/code><\/li><li><code> NEW <\/code><\/li><li><code> SUCCEED <\/code><\/li><li><code> FAILED <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_COMPENSATION_STATUS",
        "NEW",
        "SUCCEED",
        "FAILED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.payments.compensation.compensation-service"}
}
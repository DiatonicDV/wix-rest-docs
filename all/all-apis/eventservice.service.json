{
  "name": "EventService",
  "client_id": "https://github.com/wix-private/npm-proto-bazel/tree/master/com_wixpress_proto_event-service/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "API related to events",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Event",
    "entity": "_wix_rise_v1_Event",
    "src": "https://github.com/wix-private/rise/tree/master/backend/event-service/src/proto/wix/rise/v1/event_entity.proto"
  }],
  "relatedGuides": [  {
    "path": "../guides/eventservice/docs/README.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Create Event",
      "methodName": "CreateEvent",
      "serviceName": "EventService",
      "tag": "Event",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "event",
        "event.walletId",
        "event.amount",
        "event.type"
      ],
      "params": [      {
        "in": "BODY",
        "name": "event",
        "type": "All APIs.EventService._wix_rise_v1_Event",
        "doc": " Event to be created\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreateEvent",
          "statusCode": "200",
          "typeParams": ["All APIs.EventService._wix_rise_v1_CreateEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nCreates a new Event\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/event/v1/rise/events",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateEventRequest",
        "rpcResponseName": "CreateEventResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Disable Event",
      "methodName": "DisableEvent",
      "serviceName": "EventService",
      "tag": "Event",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "revision"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " ID of the Event to delete\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "revision",
          "type": "string",
          "doc": " The revision of the Event\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "DisableEvent",
          "statusCode": "200",
          "typeParams": ["All APIs.EventService._wix_rise_v1_DisableEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nExpire an Event immediately and deducting the remaining balance from the gift card\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/event/v1/rise/events/{eventId}/disable",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DisableEventRequest",
        "rpcResponseName": "DisableEventResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Event",
      "methodName": "GetEvent",
      "serviceName": "EventService",
      "tag": "Event",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params": [      {
        "in": "PATH",
        "name": "eventId",
        "type": "string",
        "doc": " ID of the Event to retrieve\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetEvent",
          "statusCode": "200",
          "typeParams": ["All APIs.EventService._wix_rise_v1_GetEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nGet an Event by ID\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/event/v1/rise/events/{eventId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetEventRequest",
        "rpcResponseName": "GetEventResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Event Balances",
      "methodName": "QueryEventBalances",
      "serviceName": "EventService",
      "tag": "Event",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.EventService._wix_common_QueryV2",
        "doc": " WQL expression\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "QueryEventBalances",
          "statusCode": "200",
          "typeParams": ["All APIs.EventService._wix_rise_v1_QueryEventBalancesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nQuery Events using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\nResults will be enriched with calculated balances\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/event/v1/rise/events/query/balances",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryEventBalancesRequest",
        "rpcResponseName": "QueryEventBalancesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Event",
      "methodName": "UpdateEvent",
      "serviceName": "EventService",
      "tag": "Event",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "event",
        "event.id",
        "event.revision"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "event.id",
          "type": "string",
          "doc": " Event ID\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "event",
          "type": "All APIs.EventService._wix_rise_v1_Event",
          "doc": " Event to be updated, may be partial\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "mask",
          "type": "All APIs.EventService._google_protobuf_FieldMask",
          "doc": " Explicit list of fields to update\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateEvent",
          "statusCode": "200",
          "typeParams": ["All APIs.EventService._wix_rise_v1_UpdateEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nUpdate an Event, supports partial update\nPass the latest `revision` for a successful update\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/event/v1/rise/events/{event.id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateEventRequest",
        "rpcResponseName": "UpdateEventResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events":   [
        {
      "type": "_wix_rise_v1_EventCreatedDomainEvent",
      "name": "Event Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/rise/tree/master/backend/event-service/src/proto/wix/rise/v1/event_service.proto"
      },
      "topic": "domain_events_wix.rise.v1.event",
      "tag": "Event",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.rise.v1.event_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_wix_rise_v1_EventDisabledDomainEvent",
      "name": "Event Disabled Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/rise/tree/master/backend/event-service/src/proto/wix/rise/v1/event_service.proto"
      },
      "topic": "domain_events_wix.rise.v1.event",
      "tag": "Event",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.rise.v1.event_disabled",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_wix_rise_v1_EventUpdatedDomainEvent",
      "name": "Event Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/rise/tree/master/backend/event-service/src/proto/wix/rise/v1/event_service.proto"
      },
      "topic": "domain_events_wix.rise.v1.event",
      "tag": "Event",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.rise.v1.event_updated",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_wix_rise_v1_EventCreatedDomainEvent",
      "displayName": "Event Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.rise.v1.event`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.EventService._wix_rise_v1_EventEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Event ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_EventEntityCreatedEvent",
      "displayName": "Event Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.EventService._wix_rise_v1_Event",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_EventExpiredDomainEvent",
      "displayName": "Event Expired Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.rise.v1.event`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `expired`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.EventService._wix_rise_v1_EventExpiredActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "EventExpired ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_EventExpiredActionEvent",
      "displayName": "Event Expired Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.EventService._wix_rise_v1_EventExpired",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_EventDeletedDomainEvent",
      "displayName": "Event Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.rise.v1.event`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.EventService._wix_rise_v1_EventEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Event ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_EventEntityDeletedEvent",
      "displayName": "Event Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_EventDisabledDomainEvent",
      "displayName": "Event Disabled Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.rise.v1.event`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `disabled`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.EventService._wix_rise_v1_EventDisabledActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "EventDisabled ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_EventDisabledActionEvent",
      "displayName": "Event Disabled Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.EventService._wix_rise_v1_EventDisabled",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_EventUpdatedDomainEvent",
      "displayName": "Event Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.rise.v1.event`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.EventService._wix_rise_v1_EventEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Event ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_EventEntityUpdatedEvent",
      "displayName": "Event Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.EventService._wix_rise_v1_Event",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_Event",
      "displayName": "Event Object",
      "locations": [],
      "docs":       {
        "summary": "*\nEvent is the main entity of EventService\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Event ID\n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Represents the current state of an item. Each time the item is modified, its `revision` changes. For an update operation to succeed, you MUST pass the latest revision\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Represents the time this Event was created\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Represents the time this Event was last updated\n",
          "readOnly": true
        },
                {
          "name": "walletId",
          "type": "string",
          "doc": " Wallet ID\n"
        },
                {
          "name": "startDate",
          "type": "string",
          "doc": " Represents the time when the event's amount will be added to the account\n"
        },
                {
          "name": "expiresAt",
          "type": "string",
          "doc": " Represents the time when the unused balance will be deducted from the account\n"
        },
                {
          "name": "disabledAt",
          "type": "string",
          "doc": " Represents the time when the event was manually disabled\n"
        },
                {
          "name": "amount",
          "type": "string",
          "doc": " The amount to be added to the customer\n"
        },
                {
          "name": "note",
          "type": "string",
          "doc": " Free text comment regarding the Event context\n"
        },
                {
          "name": "type",
          "type": "All APIs.EventService._wix_rise_v1_Event_EventType",
          "doc": " Indicates the kind of the specific event\n"
        },
                {
          "name": "eventAddedTransactionId",
          "type": "string",
          "doc": " The transactionId that added the event's amount;\n",
          "readOnly": true
        },
                {
          "name": "eventRemovedTransactionId",
          "type": "string",
          "doc": " The transactionId that removed the remaining event's balance;\n",
          "readOnly": true
        },
                {
          "name": "status",
          "type": "All APIs.EventService._wix_rise_v1_Event_EventStatus",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.EventService._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.EventService._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.EventService._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deletedEntityAsJson",
        "type": "string",
        "doc": " Entity that was deleted\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Unique event ID.\n Allows clients to ignore duplicate webhooks.\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " ID of the entity associated with the event.\n"
        },
                {
          "name": "body",
          "type": "All APIs.EventService._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " Event timestamp.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether the event was triggered as a result of a privacy regulation application\n (for example, GDPR).\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        },
                {
          "name": "entityEventSequence",
          "type": "string",
          "doc": " A sequence number defining the order of updates to the underlying entity.\n For example, given that some entity was updated at 16:00 and than again at 16:01,\n  it is guaranteed that the sequence number of the second update is strictly higher than the first.\n As the consumer, you can use this value to ensure that you handle messages in the correct order.\n To do so, you will need to persist this number on your end, and compare the sequence number from the\n  message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.EventService._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.EventService._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.EventService._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.EventService._wix_common_domainevents_ActionEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Maximum number of items to return in the results.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.EventService._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor string pointing to the next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to the previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.EventService._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.EventService._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.EventService._wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.EventService._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.EventService._wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_infra_timecapsule_v2_TaskId",
      "displayName": "Task Id Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "namespace",
          "type": "string",
          "doc": " A unique identifier of an application or a source that define the task. In most cases this would be the appDefId\n"
        },
                {
          "name": "taskType",
          "type": "string",
          "doc": " A free-form string distinguishing different families of tasks within a namespace.\n For example: \"send-promo-email\", \"ClearTrashBin\", \"premium expiration reminder\"\n"
        },
                {
          "name": "key",
          "type": "string",
          "doc": " A free-form string that together with `namespace` and `task_type` uniquely identifies a task.\n When there is an entity involved, setting this to be equal to the ID of an entity related to the task is a good option.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_infra_timecapsule_v2_Task",
      "displayName": "Task Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "All APIs.EventService._wix_infra_timecapsule_v2_TaskId",
          "doc": " Task id\n"
        },
                {
          "name": "payload",
          "type": "struct",
          "doc": " Task payload\n"
        },
                {
          "name": "topic",
          "type": "string",
          "doc": " A Greyhound topic to which the task will be produced when triggered\n",
          "readOnly": true
        },
                {
          "name": "scheduledFor",
          "type": "string",
          "doc": " The time when this task is scheduled to trigger. For reoccurring tasks, this will be hold the next time this task will run and will be updated after every run\n",
          "readOnly": true
        },
                {
          "name": "trigger",
          "type": "All APIs.EventService._wix_infra_timecapsule_v2_Task_trigger",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_infra_timecapsule_v2_Task_trigger",
      "displayName": "trigger Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "oneTime",
          "type": "string",
          "doc": " A trigger which will fire once at a specified timestamp\n"
        },
                {
          "name": "cron",
          "type": "string",
          "doc": " Deprecated. Equivalent to cronTz(cron, \"UTC\")\n",
          "deprecated": true
        },
                {
          "name": "cronTz",
          "type": "All APIs.EventService._wix_infra_timecapsule_v2_CronTz",
          "doc": " A trigger defined by a cron expression and an optional time zone\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_infra_timecapsule_v2_CronTz",
      "displayName": "Cron Tz Object",
      "locations": [],
      "docs":       {
        "summary": " A message containing a cron expression and a timeZone against which the expression should be evaluated\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "expression",
          "type": "string",
          "doc": " Cron expression is a string of five space-separated sub-expressions.\n\n                * * * * *\n                | | | | |\n   minute of hour | | | day of week\n        hour of day | month of year\n         day of month\n\n Field            Accepted values\n -----            ---------------\n minute of hour   0..59 / * ,\n hour of day      0..23 / * ,\n day of month     1..31 / * , W L\n month of year    1..12 / * ,\n day of week      0..7 MON..SUN / * W L #\n\n Coma separates multiple values:\n     0,20,40 * * * * => on 0th, 20th and 40th minute\n Slash selects every Nth value:\n     */20 * * * * => equivalent to 0,20,40\n     5/20 * * * * => on 5th, 25th and 45th minute\n W selects working days\n     0 2 * * W =>  2am on Mon..Fri\n L selects the last day of ...\n     0 0 L * *    => last day of each month\n     0 0 LW * *   => last working day of each month\n     0 0 * * FRIL => midnight of the last Friday of the month\n Hash selects Nth day of week\n     0 0 * * Mon#1 => midnight of the first Monday of the month\n\n Following aliases are supported: @hourly, @daily, @weekly, @monthly\n\n The first execution time will be evaluated based on the client invocation time (approximately the moment the\n client call returns).\n All executions will be evaluated in UTC.\n\n Example:\n 00:19:59 - client schedules a task with cron = 0/20 * * * * (every 20-th minute of the hour)\n 00:20:02 - task reaches Time Capsule database\n 00:21:00 - task is executed by Time Capsule, the client is triggered with a ~1 minute delay\n 00:40:00 - task is executed by Time Capsule according to the schedule with no delay\n"
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": " IANA regional time zone ID.\n For example \"America/New_York\", \"Asia/Jerusalem\", \"Europe/Kyiv\", \"Europe/Vilnius\", etc..\n Equivalent to \"UTC\" if omitted.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_CreateEventRequest",
      "displayName": "Create Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.EventService._wix_rise_v1_Event",
        "doc": " Event to be created\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_CreateEventResponse",
      "displayName": "Create Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.EventService._wix_rise_v1_Event",
        "doc": " The created Event\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_GetEventRequest",
      "displayName": "Get Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " ID of the Event to retrieve\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_GetEventResponse",
      "displayName": "Get Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.EventService._wix_rise_v1_Event",
        "doc": " The retrieved Event\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_UpdateEventRequest",
      "displayName": "Update Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "event",
          "type": "All APIs.EventService._wix_rise_v1_Event",
          "doc": " Event to be updated, may be partial\n"
        },
                {
          "name": "mask",
          "type": "All APIs.EventService._google_protobuf_FieldMask",
          "doc": " Explicit list of fields to update\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_UpdateEventResponse",
      "displayName": "Update Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.EventService._wix_rise_v1_Event",
        "doc": " The updated Event\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_DisableEventRequest",
      "displayName": "Disable Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " ID of the Event to delete\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " The revision of the Event\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_DisableEventResponse",
      "displayName": "Disable Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.EventService._wix_rise_v1_Event",
        "doc": " The expired Event\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_DeleteEventRequest",
      "displayName": "Delete Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " ID of the Event to delete\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " The revision of the Event\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_DeleteEventResponse",
      "displayName": "Delete Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_QueryEventRequest",
      "displayName": "Query Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.EventService._wix_common_QueryV2",
        "doc": " WQL expression\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_QueryEventResponse",
      "displayName": "Query Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "events",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.EventService._wix_rise_v1_Event"]
          },
          "doc": " The retrieved Events\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.EventService._wix_common_PagingMetadataV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_QueryEventBalancesRequest",
      "displayName": "Query Event Balances Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.EventService._wix_common_QueryV2",
        "doc": " WQL expression\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_QueryEventBalancesResponse_EventWithBalance",
      "displayName": "Event With Balance Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "event",
          "type": "All APIs.EventService._wix_rise_v1_Event",
          "doc": " Event\n"
        },
                {
          "name": "balance",
          "type": "string",
          "doc": " Event balance\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_QueryEventBalancesResponse",
      "displayName": "Query Event Balances Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "events",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.EventService._wix_rise_v1_QueryEventBalancesResponse_EventWithBalance"]
          },
          "doc": " The retrieved Events with their balance\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.EventService._wix_common_PagingMetadataV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_EventExpired",
      "displayName": "Event Expired Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.EventService._wix_rise_v1_Event",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_EventDisabled",
      "displayName": "Event Disabled Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.EventService._wix_rise_v1_Event",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_Event_EventType",
      "displayName": "Event Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> REWARD <\/code><\/li><li><code> REFUND <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "REWARD",
        "REFUND"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_rise_v1_Event_EventStatus",
      "displayName": "Event Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> PENDING <\/code><\/li><li><code> ACTIVE <\/code><\/li><li><code> DISABLED <\/code><\/li><li><code> EXPIRED <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "PENDING",
        "ACTIVE",
        "DISABLED",
        "EXPIRED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.rise.events.event-service"}
}
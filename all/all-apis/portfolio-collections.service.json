{
  "name": "Portfolio Collections",
  "client_id": "https://github.com/wix-private/photography-server/tree/master/portfolio/collections-service#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Manage Collections in Portfolio",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Collections",
    "entity": "_com_wixpress_portfolio_collections_Collection"
  }],
  "relatedGuides": [  {
    "path": "../guides/portfolio-collections/docs/introduction.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Create Collection",
      "methodName": "CreateCollection",
      "serviceName": "CollectionsService",
      "tag": "Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["collection"],
      "params": [      {
        "in": "BODY",
        "name": "collection",
        "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection",
        "doc": " Collection to be created\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreateCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Portfolio Collections._com_wixpress_portfolio_collections_CreateCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nCreates a new Collection\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/portfolio/v1/collections/api/v1/portfolio/collections",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateCollectionRequest",
        "rpcResponseName": "CreateCollectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Collection (Additional Binding 1)",
      "methodName": "CreateCollection",
      "serviceName": "CollectionsService",
      "tag": "Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["collection"],
      "params": [      {
        "in": "BODY",
        "name": "collection",
        "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection",
        "doc": " Collection to be created\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreateCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Portfolio Collections._com_wixpress_portfolio_collections_CreateCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nCreates a new Collection\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/portfolio/v1/collections/api/v1/portfolio/collection",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateCollectionRequest",
        "rpcResponseName": "CreateCollectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Collection",
      "methodName": "DeleteCollection",
      "serviceName": "CollectionsService",
      "tag": "Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["collectionId"],
      "params": [      {
        "in": "PATH",
        "name": "collectionId",
        "type": "string",
        "doc": " Id of the Collection to delete\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Portfolio Collections._com_wixpress_portfolio_collections_DeleteCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nDelete a Collection\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/portfolio/v1/collections/api/v1/portfolio/collections/{collectionId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteCollectionRequest",
        "rpcResponseName": "DeleteCollectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Collection",
      "methodName": "GetCollection",
      "serviceName": "CollectionsService",
      "tag": "Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["collectionId"],
      "params":       [
                {
          "in": "PATH",
          "name": "collectionId",
          "type": "string",
          "doc": " Id of the Collection to retrieve\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "includePageUrl",
          "type": "boolean",
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Portfolio Collections._com_wixpress_portfolio_collections_GetCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nGet a Collection by id\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/portfolio/v1/collections/api/v1/portfolio/collections/{collectionId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetCollectionRequest",
        "rpcResponseName": "GetCollectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Collections",
      "methodName": "ListCollections",
      "serviceName": "CollectionsService",
      "tag": "Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "paging.limit",
          "type": "integer",
          "doc": " Number of items to load.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "includePageUrl",
          "type": "boolean",
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListCollections",
          "statusCode": "200",
          "typeParams": ["All APIs.Portfolio Collections._com_wixpress_portfolio_collections_ListCollectionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nList all Collections in portfolio\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/portfolio/v1/collections/api/v1/portfolio/collections",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListCollectionsRequest",
        "rpcResponseName": "ListCollectionsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Collections",
      "methodName": "QueryCollections",
      "serviceName": "CollectionsService",
      "tag": "Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params":       [
                {
          "in": "BODY",
          "name": "query",
          "type": "All APIs.Portfolio Collections._wix_common_QueryV2",
          "doc": " WQL expression\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "includePageUrl",
          "type": "boolean",
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryCollections",
          "statusCode": "200",
          "typeParams": ["All APIs.Portfolio Collections._com_wixpress_portfolio_collections_QueryCollectionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nQuery Collections using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/portfolio/v1/collections/api/v1/portfolio/collections/query",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryCollectionsRequest",
        "rpcResponseName": "QueryCollectionsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Collection",
      "methodName": "UpdateCollection",
      "serviceName": "CollectionsService",
      "tag": "Collections",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "collection",
        "collection.id",
        "collection.revision"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "collection.id",
          "type": "string",
          "doc": " Collection ID\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "collection",
          "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection",
          "doc": " Collection to be updated, may be partial\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Portfolio Collections._com_wixpress_portfolio_collections_UpdateCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nUpdate a Collection, supports partial update\nPass the latest `revision` for a successful update\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/portfolio/v1/collections/api/v1/portfolio/collections/{collection.id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateCollectionRequest",
        "rpcResponseName": "UpdateCollectionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_html_cache_invalidate_InvalidateCache",
      "name": "Invalidate Cache Webhook",
      "docs": {"summary": "*\nTopic to send SSR invalidation messages to.\n"},
      "topic": "invalidate-ssr-cache",
      "tag": "Collections",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "type": "_com_wixpress_portfolio_collections_CollectionUpdatedDomainEvent",
      "name": "Collection Updated Webhook",
      "docs": {"summary": ""},
      "topic": "domain_events_wix.portfolio.collections.v1.collection",
      "tag": "Collections",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.portfolio.collections.v1.collection_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_portfolio_collections_CollectionCreatedDomainEvent",
      "name": "Collection Created Webhook",
      "docs": {"summary": ""},
      "topic": "domain_events_wix.portfolio.collections.v1.collection",
      "tag": "Collections",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.portfolio.collections.v1.collection_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_portfolio_collections_CollectionDeletedDomainEvent",
      "name": "Collection Deleted Webhook",
      "docs": {"summary": ""},
      "topic": "domain_events_wix.portfolio.collections.v1.collection",
      "tag": "Collections",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.portfolio.collections.v1.collection_deleted",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_portfolio_collections_CollectionUpdatedDomainEvent",
      "displayName": "Collection Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.portfolio.collections.v1.collection`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_CollectionEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Collection ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_CollectionEntityUpdatedEvent",
      "displayName": "Collection Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_CollectionCreatedDomainEvent",
      "displayName": "Collection Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.portfolio.collections.v1.collection`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_CollectionEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Collection ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_CollectionEntityCreatedEvent",
      "displayName": "Collection Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_CollectionDeletedDomainEvent",
      "displayName": "Collection Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.portfolio.collections.v1.collection`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_CollectionEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Collection ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_CollectionEntityDeletedEvent",
      "displayName": "Collection Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PageUrlV2",
      "displayName": "Page Url V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "relativePath",
          "type": "string",
          "doc": " The path to that page - e.g /product-page/a-product\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " The URL of that page. e.g https://mysite.com/product-page/a-product\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Tag",
      "displayName": "Tag Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "string",
          "doc": " SEO tag type. \n\n\n Supported values: `title`, `meta`, `script`, `link`.\n"
        },
                {
          "name": "props",
          "type": "struct",
          "doc": " A `{'key':'value'} pair object where each SEO tag property (`'name'`, `'content'`, `'rel'`, `'href'`) contains a value.\n For example: `{'name': 'description', 'content': 'the description itself'}`.\n"
        },
                {
          "name": "meta",
          "type": "struct",
          "doc": " SEO tag meta data. For example, `{height: 300, width: 240}`.\n"
        },
                {
          "name": "children",
          "type": "string",
          "doc": " SEO tag inner content. For example, `<title> inner content <\/title>`.\n"
        },
                {
          "name": "custom",
          "type": "boolean",
          "doc": " Whether the tag is a custom tag.\n"
        },
                {
          "name": "disabled",
          "type": "boolean",
          "doc": " Whether the tag is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Settings",
      "displayName": "Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "preventAutoRedirect",
          "type": "boolean",
          "doc": " Whether the auto redirects feature creating `301 redirects` on a slug change is enabled. \n\n\n Default: enabled\n"
        },
                {
          "name": "keywords",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Portfolio Collections._com_wixpress_advanced_seo_SeoSchema_Keyword"]
          },
          "doc": " User-selected keyword terms for a specific page\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Keyword",
      "displayName": "Keyword Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "term",
          "type": "string",
          "doc": " Keyword value\n"
        },
                {
          "name": "isMain",
          "type": "boolean",
          "doc": " Whether the keyword is the main focused\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema",
      "displayName": "Seo Schema Object",
      "locations": [],
      "docs":       {
        "summary": " The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\n The search engines use this information for ranking purposes, or to display snippets in the search results.\n This data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Portfolio Collections._com_wixpress_advanced_seo_SeoSchema_Tag"]
          },
          "doc": " SEO tags information.\n"
        },
                {
          "name": "settings",
          "type": "All APIs.Portfolio Collections._com_wixpress_advanced_seo_SeoSchema_Settings",
          "doc": " SEO general settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_upstream_wix_common_portfolio_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID. Required.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n",
          "readOnly": true
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height. Required.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width. Required.\n"
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Image filename.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "imageInfo",
          "type": "All APIs.Portfolio Collections._upstream_wix_common_portfolio_common_Image",
          "doc": "\nImage info - Wix Media Image.\n"
        },
                {
          "name": "focalPoint",
          "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_common_Point",
          "doc": " Focal point of the image.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_common_UnsharpMasking",
      "displayName": "Unsharp Masking Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "number",
          "doc": " Unsharp masking amount. Controls the sharpening strength. <br />\n\nMin: `0` <br />\nMax: `5`\n"
        },
                {
          "name": "radius",
          "type": "number",
          "doc": " Unsharp masking radius in pixels. Controls the sharpening width.\n"
        },
                {
          "name": "threshold",
          "type": "number",
          "doc": " Unsharp masking threshold. Controls how different neighboring pixels must be for shapening to apply. <br />\n\nMin: `0` <br />\nMax: `1`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_common_Point",
      "displayName": "Point Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "x",
          "type": "number",
          "doc": " X-coordinate of the focal point.\n"
        },
                {
          "name": "y",
          "type": "number",
          "doc": " Y-coordinate of the focal point.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_Collection",
      "displayName": "Collection Object",
      "locations": [],
      "docs":       {
        "summary": "*\nCollection is the main entity of CollectionsService\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Collection ID\n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision\n",
          "readOnly": true
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Title of Collection\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Collection description\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " Url of Collection\n"
        },
                {
          "name": "coverImage",
          "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_common_Image",
          "doc": " Collection's cover photo\n"
        },
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Indicates if the collection is hidden from Portfolio\n"
        },
                {
          "name": "sortOrder",
          "type": "number",
          "doc": " if not present in an update it means the collection will be added as currentTimestamp - as the last collection\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Represents the time this Collection was created\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Represents the time this Collection was last updated\n",
          "readOnly": true
        },
                {
          "name": "url",
          "type": "All APIs.Portfolio Collections._wix_common_PageUrlV2",
          "doc": " Url and relative url of Collection - in order to receive this field in READ requests you will need to pass the `include_page_url` field as part of request\n",
          "readOnly": true
        },
                {
          "name": "seoData",
          "type": "All APIs.Portfolio Collections._com_wixpress_advanced_seo_SeoSchema",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ExtendedFieldsUpdatedEvent",
      "displayName": "Extended Fields Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " random GUID so clients can tell if event was already handled\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Assuming that all messages including Actions have id\n Example: The id of the specific order, the id of a specific campaign\n"
        },
                {
          "name": "body",
          "type": "All APIs.Portfolio Collections._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " The time of the event. Useful if there was a delay in dispatching\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " A field that should be set if this event was triggered by an anonymize request.\n For example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\n NOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers.\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        },
                {
          "name": "entityEventSequence",
          "type": "string",
          "doc": " A sequence number defining the order of updates to the underlying entity.\n For example, given that some entity was updated at 16:00 and than again at 16:01,\n  it is guaranteed that the sequence number of the second update is strictly higher than the first.\n As the consumer, you can use this value to ensure that you handle messages in the correct order.\n To do so, you will need to persist this number on your end, and compare the sequence number from the\n  message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Portfolio Collections._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Portfolio Collections._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Portfolio Collections._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Portfolio Collections._wix_common_domainevents_ActionEvent",
          "doc": ""
        },
                {
          "name": "extendedFieldsUpdatedEvent",
          "type": "All APIs.Portfolio Collections._wix_common_domainevents_ExtendedFieldsUpdatedEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Portfolio Collections._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Portfolio Collections._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:\n`\"filter\" : {\n              \"fieldName1\": \"value1\",\n              \"fieldName2\":{\"$operator\":\"value2\"}\n  }`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Portfolio Collections._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Portfolio Collections._wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Portfolio Collections._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Portfolio Collections._wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_html_cache_invalidate_InvalidateCache_App",
      "displayName": "App Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "appDefId",
          "type": "string",
          "doc": " The AppDefId\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": " The instance Id\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_html_cache_invalidate_InvalidateCache_Page",
      "displayName": "Page Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": " the msid the page is on\n"
        },
                {
          "name": "pageId",
          "type": "string",
          "doc": " Invalidate by Page ID\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_html_cache_invalidate_InvalidateCache_URI",
      "displayName": "URI Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": " the msid the URI is on\n"
        },
                {
          "name": "uriPath",
          "type": "string",
          "doc": " URI path to invalidate (e.g. page/my/path) - without leading/trailing slashes\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_html_cache_invalidate_InvalidateCache",
      "displayName": "Invalidate Cache Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "getBy",
          "type": "All APIs.Portfolio Collections._com_wixpress_html_cache_invalidate_InvalidateCache_GetBy",
          "doc": ""
        },
                {
          "name": "reason",
          "type": "string",
          "doc": "tell us why you're invalidating the cache. You don't need to add your app name\n The cache invalidation reason\n"
        },
                {
          "name": "localDc",
          "type": "boolean",
          "doc": " Is local DS\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_html_cache_invalidate_InvalidateCache_GetBy",
      "displayName": "Get By Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": " Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!\n"
        },
                {
          "name": "siteId",
          "type": "string",
          "doc": " Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!\n"
        },
                {
          "name": "app",
          "type": "All APIs.Portfolio Collections._com_wixpress_html_cache_invalidate_InvalidateCache_App",
          "doc": " Invalidate by App\n"
        },
                {
          "name": "page",
          "type": "All APIs.Portfolio Collections._com_wixpress_html_cache_invalidate_InvalidateCache_Page",
          "doc": " Invalidate by page id\n"
        },
                {
          "name": "uri",
          "type": "All APIs.Portfolio Collections._com_wixpress_html_cache_invalidate_InvalidateCache_URI",
          "doc": " Invalidate by URI path\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_portfolio_collections_CreateCollectionRequest",
      "displayName": "Create Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "collection",
        "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection",
        "doc": " Collection to be created\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_CreateCollectionResponse",
      "displayName": "Create Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "collection",
        "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection",
        "doc": " The created Collection\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_GetCollectionRequest",
      "displayName": "Get Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "collectionId",
          "type": "string",
          "doc": " Id of the Collection to retrieve\n"
        },
                {
          "name": "includePageUrl",
          "type": "boolean",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_GetCollectionResponse",
      "displayName": "Get Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "collection",
        "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection",
        "doc": " The retrieved Collection\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_ListCollectionsRequest",
      "displayName": "List Collections Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Portfolio Collections._wix_common_CursorPaging",
          "doc": " Maximum limit per response is 100, in first request cursor is None\n"
        },
                {
          "name": "includePageUrl",
          "type": "boolean",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_ListCollectionsResponse",
      "displayName": "List Collections Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "collections",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection"]
          },
          "doc": " Retrieved Collections\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Portfolio Collections._wix_common_PagingMetadataV2",
          "doc": " Paging metadata\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_UpdateCollectionRequest",
      "displayName": "Update Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "collection",
        "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection",
        "doc": " Collection to be updated, may be partial\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_UpdateCollectionResponse",
      "displayName": "Update Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "collection",
        "type": "All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection",
        "doc": " The updated Collection\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_DeleteCollectionRequest",
      "displayName": "Delete Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "collectionId",
        "type": "string",
        "doc": " Id of the Collection to delete\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_DeleteCollectionResponse",
      "displayName": "Delete Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "collectionId",
        "type": "string",
        "doc": " Id of the Deleted Collection\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_QueryCollectionsRequest",
      "displayName": "Query Collections Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "query",
          "type": "All APIs.Portfolio Collections._wix_common_QueryV2",
          "doc": " WQL expression\n"
        },
                {
          "name": "includePageUrl",
          "type": "boolean",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_collections_QueryCollectionsResponse",
      "displayName": "Query Collections Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "collections",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Portfolio Collections._com_wixpress_portfolio_collections_Collection"]
          },
          "doc": " The retrieved Collections\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Portfolio Collections._wix_common_PagingMetadataV2",
          "doc": " Paging metadata\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_common_Image_ImageType",
      "displayName": "Image Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> WIX_MEDIA <\/code><\/li><li><code> EXTERNAL <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "WIX_MEDIA",
        "EXTERNAL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.portfolio.collections-service"}
}